Add-Type -TypeDefinition @'
using System;
using System.Collections.Generic;

// Autogenerated 09/18/2018 12:54:29: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Accounts.Account
namespace TeamDynamix.Api.Accounts
{
    /// <summary>An account/department.</summary>
    public class Account
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the active status.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the first address line.</summary>
        public String Address1 { get; set; }
        /// <summary>Gets or sets the second address line.</summary>
        public String Address2 { get; set; }
        /// <summary>Gets or sets the third address line.</summary>
        public String Address3 { get; set; }
        /// <summary>Gets or sets the fourth address line.</summary>
        public String Address4 { get; set; }
        /// <summary>Gets or sets the city.</summary>
        public String City { get; set; }
        /// <summary>Gets or sets the name of the state/province.</summary>
        public String StateName { get; set; }
        /// <summary>Gets or sets the abbreviation of the state/province.</summary>
        public String StateAbbr { get; set; }
        /// <summary>Gets or sets the postal code.</summary>
        public String PostalCode { get; set; }
        /// <summary>Gets or sets the country.</summary>
        public String Country { get; set; }
        /// <summary>Gets or sets the phone number.</summary>
        public String Phone { get; set; }
        /// <summary>Gets or sets the fax number.</summary>
        public String Fax { get; set; }
        /// <summary>Gets or sets the website URL.</summary>
        public String Url { get; set; }
        /// <summary>Gets or sets the account notes.</summary>
        public String Notes { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the account code.</summary>
        public String Code { get; set; }
        /// <summary>Gets or sets the industry ID.</summary>
        public Int32 IndustryID { get; set; }
        /// <summary>Gets or sets the name of the industry.</summary>
        public String IndustryName { get; set; }
        /// <summary>Gets or sets the domain.</summary>
        public String Domain { get; set; }
        /// <summary>Gets or sets the UID of the department manager.</summary>
        public Guid ManagerUID { get; set; }
        /// <summary>Gets or sets the full name of the department manager.</summary>
        public String ManagerFullName { get; set; }
        /// <summary>Gets or sets the custom attributes associated with the account.</summary>
        public IEnumerable<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }

        public Account() { }
    }
}

// Autogenerated 09/18/2018 12:54:30: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Accounts.AccountSearch
namespace TeamDynamix.Api.Accounts
{
    /// <summary>A set of filtering options used for searching accounts/departments.</summary>
    public class AccountSearch
    {
        /// <summary>Gets or sets the search text to use.</summary>
        public String SearchText { get; set; }
        /// <summary>Gets or sets the UIDs of the department managers to filter on.</summary>
        public Guid[] ManagerUids { get; set; }
        /// <summary>Gets or sets the custom attributes to filter on.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> CustomAttributes { get; set; }
        /// <summary>Gets or sets the active status to filter on.</summary>
        public Boolean? IsActive { get; set; }
        /// <summary>Gets or sets the maximum number of records to return.</summary>
        public Int32? MaxResults { get; set; }

        public AccountSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:30: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Apps.UserApplication
namespace TeamDynamix.Api.Apps
{
    /// <summary>An association that a user has with an application.</summary>
    public class UserApplication
    {
        /// <summary>Gets or sets the ID of the specific security role that the user has within the application.</summary>
        public Guid? SecurityRoleId { get; set; }
        /// <summary>Gets or sets the name of the specific security role that the user has within the application.</summary>
        public String SecurityRoleName { get; set; }
        /// <summary>Gets or sets the application ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the application name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the application description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the application's system-defined application class.</summary>
        public String SystemClass { get; set; }
        /// <summary>Gets or sets a value indicating whether the application is the default for its class.</summary>
        public Boolean IsDefault { get; set; }
        /// <summary>Gets or sets a value indicating whether the application is active.</summary>
        public Boolean IsActive { get; set; }

        public UserApplication() { }
    }
}

// Autogenerated 09/18/2018 12:54:31: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Assets.Asset
namespace TeamDynamix.Api.Assets
{
    /// <summary>An asset.</summary>
    public class Asset
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the application ID.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the ID of the form. If a value of 0 is provided, then the default asset form for the application will be used.</summary>
        public Int32 FormID { get; set; }
        /// <summary>Gets or sets the name of the form.</summary>
        public String FormName { get; set; }
        /// <summary>Gets or sets the product model ID.</summary>
        public Int32 ProductModelID { get; set; }
        /// <summary>Gets or sets the name of the product model.</summary>
        public String ProductModelName { get; set; }
        /// <summary>Gets or sets the manufacturer ID.</summary>
        public Int32 ManufacturerID { get; set; }
        /// <summary>Gets or sets the name of the manufacturer.</summary>
        public String ManufacturerName { get; set; }
        /// <summary>Gets or sets the supplier ID.</summary>
        public Int32 SupplierID { get; set; }
        /// <summary>Gets or sets the name of the supplier.</summary>
        public String SupplierName { get; set; }
        /// <summary>Gets or sets the status ID.</summary>
        public Int32 StatusID { get; set; }
        /// <summary>Gets or sets the name of the status.</summary>
        public String StatusName { get; set; }
        /// <summary>Gets or sets the ID of the containing location.</summary>
        public Int32 LocationID { get; set; }
        /// <summary>Gets or sets the name of the containing location.</summary>
        public String LocationName { get; set; }
        /// <summary>Gets or sets the ID of the containing room.</summary>
        public Int32 LocationRoomID { get; set; }
        /// <summary>Gets or sets the name of the containing room.</summary>
        public String LocationRoomName { get; set; }
        /// <summary>Gets or sets the asset's service tag.</summary>
        public String Tag { get; set; }
        /// <summary>Gets or sets the serial number.</summary>
        public String SerialNumber { get; set; }
        /// <summary>Gets or sets the name of the asset.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the purchase cost.</summary>
        public Double PurchaseCost { get; set; }
        /// <summary>Gets or sets the acquisition date.</summary>
        public DateTime AcquisitionDate { get; set; }
        /// <summary>Gets or sets the expected replacement date.</summary>
        public DateTime ExpectedReplacementDate { get; set; }
        /// <summary>Gets or sets the requesting customer ID.</summary>
        public Guid RequestingCustomerID { get; set; }
        /// <summary>Gets or sets the name of the requesting customer.</summary>
        public String RequestingCustomerName { get; set; }
        /// <summary>Gets or sets the requesting department ID.</summary>
        public Int32 RequestingDepartmentID { get; set; }
        /// <summary>Gets or sets the name of the requesting department.</summary>
        public String RequestingDepartmentName { get; set; }
        /// <summary>Gets or sets the owning customer ID.</summary>
        public Guid OwningCustomerID { get; set; }
        /// <summary>Gets or sets the name of the owning customer.</summary>
        public String OwningCustomerName { get; set; }
        /// <summary>Gets or sets the owning department ID.</summary>
        public Int32 OwningDepartmentID { get; set; }
        /// <summary>Gets or sets the name of the owning department.</summary>
        public String OwningDepartmentName { get; set; }
        /// <summary>Gets or sets the ID of the parent asset.</summary>
        public Int32 ParentID { get; set; }
        /// <summary>Gets or sets the serial number of the parent asset.</summary>
        public String ParentSerialNumber { get; set; }
        /// <summary>Gets or sets the name of the parent asset.</summary>
        public String ParentName { get; set; }
        /// <summary>Gets or sets the tag of the parent asset.</summary>
        public String ParentTag { get; set; }
        /// <summary>Gets or sets the ID of the associated maintenance window.</summary>
        public Int32 MaintenanceScheduleID { get; set; }
        /// <summary>Gets or sets the name of the associated maintenance window.</summary>
        public String MaintenanceScheduleName { get; set; }
        /// <summary>Gets or sets the ID of the associated configuration item record.</summary>
        public Int32 ConfigurationItemID { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the asset.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the asset.</summary>
        public String ModifiedFullName { get; set; }
        /// <summary>Gets or sets the external ID. This value is used to map the asset to its representation in external sources such as third-party CMDBs.</summary>
        public String ExternalID { get; set; }
        /// <summary>Gets or sets the ID of the configuration item source, if the asset originated in a third-party CMDB system.</summary>
        public Int32 ExternalSourceID { get; set; }
        /// <summary>Gets or sets the name of the configuration item source, if the asset originated in a third-party CMDB system.</summary>
        public String ExternalSourceName { get; set; }
        /// <summary>Gets or sets the custom attributes associated with the asset.</summary>
        public IEnumerable<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets the attachments associated with the asset.</summary>
        public IEnumerable<TeamDynamix.Api.Attachments.Attachment> Attachments { get; set; }
        /// <summary>Gets or sets the URI to retrieve the individual asset.</summary>
        public String Uri { get; set; }

        public Asset() { }
    }
}

// Autogenerated 09/18/2018 12:54:31: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Assets.AssetSearch
namespace TeamDynamix.Api.Assets
{
    /// <summary>A set of filtering options used for searching assets.</summary>
    public class AssetSearch
    {
        /// <summary>Gets or sets the text to perform a LIKE search on for the asset serial number and tag.</summary>
        public String SerialLike { get; set; }
        /// <summary>Gets or sets the search text to filter on. If this is set, this will sort the results by their text relevancy.</summary>
        public String SearchText { get; set; }
        /// <summary>Gets or sets the ID of the saved search this search is associated with.</summary>
        public Int32 SavedSearchID { get; set; }
        /// <summary>Gets or sets the current status IDs to filter on. Only assets that currently have one of these statuses will be included.</summary>
        public Int32[] StatusIDs { get; set; }
        /// <summary>Gets or sets the external IDs to filter on. Only assets that have one of these external ID values will be included.</summary>
        public String[] ExternalIDs { get; set; }
        /// <summary>Gets or sets the "in service" status to filter on (based on the out of service flag of each asset's status).</summary>
        public Boolean? IsInService { get; set; }
        /// <summary>Gets or sets the past status IDs to filter on. Only assets that have had one of these statuses will be included.</summary>
        public Int32[] StatusIDsPast { get; set; }
        /// <summary>Gets or sets the supplier IDs to filter on. Only assets that are supplied by one of these vendors will be included.</summary>
        public Int32[] SupplierIDs { get; set; }
        /// <summary>Gets or sets the manufacturer IDs to filter on. Only assets that are manufactured by one of these vendors will be included.</summary>
        public Int32[] ManufacturerIDs { get; set; }
        /// <summary>Gets or sets the location IDs to filter on. Only assets that are at one of these locations will be included.</summary>
        public Int32[] LocationIDs { get; set; }
        /// <summary>Gets or sets the room ID to filter on. Only assets that are located in this room will be included.</summary>
        public Int32 RoomID { get; set; }
        /// <summary>Gets or sets the parent asset IDs to filter on. Only assets that have one of these listed as a parent will be included.</summary>
        public Int32[] ParentIDs { get; set; }
        /// <summary>Gets or sets the contract IDs to filter on. Only assets that belong to one or more of these contracts will be included.</summary>
        public Int32[] ContractIDs { get; set; }
        /// <summary>Gets or sets the contract IDs to exclude on. Only assets that do NOT belong to any of these contracts will be included.</summary>
        public Int32[] ExcludeContractIDs { get; set; }
        /// <summary>Gets or sets the ticket IDs to filter on. Only assets that are associated with one or more of these tickets will be included.</summary>
        public Int32[] TicketIDs { get; set; }
        /// <summary>Gets or sets the ticket IDs to exclude on. Only assets that are NOT associated with any of these tickets will be included.</summary>
        public Int32[] ExcludeTicketIDs { get; set; }
        /// <summary>Gets or sets the product model IDs to filter on. Only assets that are one of these product models will be included.</summary>
        public Int32[] ProductModelIDs { get; set; }
        /// <summary>Gets or sets the maintenance window IDs to filter on. Only assets that have one of these maintenance windows will be included.</summary>
        public Int32[] MaintenanceScheduleIDs { get; set; }
        /// <summary>Gets or sets the using account/department IDs to filter on. Only assets that are currently used by one or more of these accounts will be included.</summary>
        public Int32[] UsingDepartmentIDs { get; set; }
        /// <summary>Gets or sets the requested account/department IDs to filter on. Only assets that are listed as requested by one of these accounts will be included.</summary>
        public Int32[] RequestingDepartmentIDs { get; set; }
        /// <summary>Gets or sets the owning account/department IDs to filter on. Only assets that are currently owned by one of these accounts will be included.</summary>
        public Int32[] OwningDepartmentIDs { get; set; }
        /// <summary>Gets or sets the past owning account/department IDs to filter on. Only assets that have been historically owned by one or more of these accounts will be included.</summary>
        public Int32[] OwningDepartmentIDsPast { get; set; }
        /// <summary>Gets or sets the using person IDs to filter on. Only assets that are currently used by one or more of these people will be included.</summary>
        public Guid[] UsingCustomerIDs { get; set; }
        /// <summary>Gets or sets the requestor IDs to filter on. Only assets that are listed as requested by one of these people will be included.</summary>
        public Guid[] RequestingCustomerIDs { get; set; }
        /// <summary>Gets or sets the owner IDs to filter on. Only assets that are currently owned by one of these people will be included.</summary>
        public Guid[] OwningCustomerIDs { get; set; }
        /// <summary>Gets or sets the past owner IDs to filter on. Only assets that have been historically owned by one or more of these people will be included.</summary>
        public Guid[] OwningCustomerIDsPast { get; set; }
        /// <summary>Gets or sets the custom attributes to filter on.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> CustomAttributes { get; set; }
        /// <summary>Gets or sets the minimum purchase cost to filter on.</summary>
        public Double PurchaseCostFrom { get; set; }
        /// <summary>Gets or sets the maximum purchase cost to filter on.</summary>
        public Double PurchaseCostTo { get; set; }
        /// <summary>Gets or sets the contract provider to filter on. Only assets that belong to at least one contract provided by this vendor will be included.</summary>
        public Int32 ContractProviderID { get; set; }
        /// <summary>Gets or sets the minimum acquisition date to filter on.</summary>
        public DateTime AcquisitionDateFrom { get; set; }
        /// <summary>Gets or sets the maximum acquisition date to filter on.</summary>
        public DateTime AcquisitionDateTo { get; set; }
        /// <summary>Gets or sets the minimum expected replacement date to filter on.</summary>
        public DateTime ExpectedReplacementDateFrom { get; set; }
        /// <summary>Gets or sets the maximum expected replacement date to filter on.</summary>
        public DateTime ExpectedReplacementDateTo { get; set; }
        /// <summary>Gets or sets the minimum contract end date to filter on.</summary>
        public DateTime ContractEndDateFrom { get; set; }
        /// <summary>Gets or sets the maximum contract end date to filter on.</summary>
        public DateTime ContractEndDateTo { get; set; }
        /// <summary>Gets or sets a value indicating whether only assets that are parents should be included.</summary>
        public Boolean OnlyParentAssets { get; set; }
        /// <summary>Gets or sets the maximum number of records to return.</summary>
        public Int32? MaxResults { get; set; }

        public AssetSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:32: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Assets.AssetStatus
namespace TeamDynamix.Api.Assets
{
    /// <summary>An asset status.</summary>
    public class AssetStatus
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the application ID.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the order of the status in a list.</summary>
        public Double Order { get; set; }
        /// <summary>Gets or sets the active status.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether the status denotes that an associated asset is "out-of-service".</summary>
        public Boolean IsOutOfService { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the status.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the status.</summary>
        public String ModifiedFullName { get; set; }

        public AssetStatus() { }
    }
}

// Autogenerated 09/18/2018 12:54:32: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Assets.ContactInformation
namespace TeamDynamix.Api.Assets
{
    /// <summary>A block of contact information.</summary>
    public class ContactInformation
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the first address line.</summary>
        public String AddressLine1 { get; set; }
        /// <summary>Gets or sets the second address line.</summary>
        public String AddressLine2 { get; set; }
        /// <summary>Gets or sets the third address line.</summary>
        public String AddressLine3 { get; set; }
        /// <summary>Gets or sets the fourth address line.</summary>
        public String AddressLine4 { get; set; }
        /// <summary>Gets or sets the city.</summary>
        public String City { get; set; }
        /// <summary>Gets or sets the state/province.</summary>
        public String State { get; set; }
        /// <summary>Gets or sets the postal code.</summary>
        public String PostalCode { get; set; }
        /// <summary>Gets or sets the country.</summary>
        public String Country { get; set; }
        /// <summary>Gets or sets the URL.</summary>
        public String Url { get; set; }
        /// <summary>Gets or sets the phone number.</summary>
        public String Phone { get; set; }
        /// <summary>Gets or sets the fax number.</summary>
        public String Fax { get; set; }

        public ContactInformation() { }
    }
}

// Autogenerated 09/18/2018 12:54:32: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Assets.ProductModel
namespace TeamDynamix.Api.Assets
{
    /// <summary>A product model as manufactured by a vendor.</summary>
    public class ProductModel
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the application ID.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the active status.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the manufacturer ID.</summary>
        public Int32 ManufacturerID { get; set; }
        /// <summary>Gets or sets the name of the manufacturer.</summary>
        public String ManufacturerName { get; set; }
        /// <summary>Gets or sets the ID of the containing product type.</summary>
        public Int32 ProductTypeID { get; set; }
        /// <summary>Gets or sets the name of the containing product type.</summary>
        public String ProductTypeName { get; set; }
        /// <summary>Gets or sets the part number.</summary>
        public String PartNumber { get; set; }
        /// <summary>Gets or sets the custom attributes associated with the product model.</summary>
        public IEnumerable<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the product model.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the product model.</summary>
        public String ModifiedFullName { get; set; }

        public ProductModel() { }
    }
}

// Autogenerated 09/18/2018 12:54:33: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Assets.ProductType
namespace TeamDynamix.Api.Assets
{
    /// <summary>A product type, which can contain any number of product models and child product types.</summary>
    public class ProductType
    {
        /// <summary>Gets or sets the identifier.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the application ID.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the ID of the containing parent type, or 0 if this is a root-level type.</summary>
        public Int32 ParentID { get; set; }
        /// <summary>Gets or sets the name of the containing parent type.</summary>
        public String ParentName { get; set; }
        /// <summary>Gets or sets the active status of the containing parent type.</summary>
        public Boolean ParentIsActive { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the order of the type among its siblings.</summary>
        public Double Order { get; set; }
        /// <summary>Gets or sets the active status.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the number of product models directly belonging to this type.</summary>
        public Int32 ProductModelsCount { get; set; }
        /// <summary>Gets or sets the number of subtypes directly belonging to this product type.</summary>
        public Int32 SubtypesCount { get; set; }
        /// <summary>Gets or sets the collection of subtypes directly belonging to this cateogry</summary>
        public List<TeamDynamix.Api.Assets.ProductType> Subtypes { get; set; }

        public ProductType() { }
    }
}

// Autogenerated 09/18/2018 12:54:33: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Assets.Vendor
namespace TeamDynamix.Api.Assets
{
    /// <summary>A vendor. Vendors represent manufacturers of products, suppliers of assets, providers of warranties and other service contracts, or any combination thereof.</summary>
    public class Vendor
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the application ID.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the active status.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the account number used by the vendor to represent the organization.</summary>
        public String AccountNumber { get; set; }
        /// <summary>Gets or sets a value indicating whether the vendor is classified as a contract provider.</summary>
        public Boolean IsContractProvider { get; set; }
        /// <summary>Gets or sets a value indicating whether the vendor is classified as a manufacturer of product models.</summary>
        public Boolean IsManufacturer { get; set; }
        /// <summary>Gets or sets a value indicating whether the vendor is classified as a supplier of assets.</summary>
        public Boolean IsSupplier { get; set; }
        /// <summary>Gets the contact information for the company.</summary>
        public TeamDynamix.Api.Assets.ContactInformation CompanyInformation { get; set; }
        /// <summary>Gets or sets the name of the primary contact.</summary>
        public String ContactName { get; set; }
        /// <summary>Gets or sets the title of the primary contact.</summary>
        public String ContactTitle { get; set; }
        /// <summary>Gets or sets the department of the primary contact.</summary>
        public String ContactDepartment { get; set; }
        /// <summary>Gets or sets the email address of the primary contact.</summary>
        public String ContactEmail { get; set; }
        /// <summary>Gets the information for the primary contact at the company.</summary>
        public TeamDynamix.Api.Assets.ContactInformation PrimaryContactInformation { get; set; }
        /// <summary>Gets or sets the number of contracts provided by this vendor.</summary>
        public Int32 ContractsCount { get; set; }
        /// <summary>Gets or sets the number of product models manufactured by this vendor.</summary>
        public Int32 ProductModelsCount { get; set; }
        /// <summary>Gets or sets the number of assets supplied by this vendor.</summary>
        public Int32 AssetsSuppliedCount { get; set; }
        /// <summary>Gets or sets the custom attributes associated with the vendor.</summary>
        public IEnumerable<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the vendor.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the vendor.</summary>
        public String ModifiedFullName { get; set; }

        public Vendor() { }
    }
}

// Autogenerated 09/18/2018 12:54:33: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Assets.VendorSearch
namespace TeamDynamix.Api.Assets
{
    /// <summary>A set of filtering options used for searching vendors.</summary>
    public class VendorSearch
    {
        /// <summary>Gets or sets the text to perform a LIKE search on for the vendor name.</summary>
        public String NameLike { get; set; }
        /// <summary>Gets or sets the search text to filter on. If this is set, this will sort the results by their text relevancy.</summary>
        public String SearchText { get; set; }
        /// <summary>Gets or sets a value indicating whether or not only vendors who have been classified as product manufacturers should be returned.</summary>
        public Boolean OnlyManufacturers { get; set; }
        /// <summary>Gets or sets a value indicating whether or not only vendors who have been classified as asset suppliers should be returned.</summary>
        public Boolean OnlySuppliers { get; set; }
        /// <summary>Gets or sets a value indicating whether or not only vendors who have been classified as contract providers should be returned.</summary>
        public Boolean OnlyContractProviders { get; set; }
        /// <summary>Gets or sets the active status to filter on.</summary>
        public Boolean? IsActive { get; set; }
        /// <summary>Gets or sets the custom attributes to filter on.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> CustomAttributes { get; set; }

        public VendorSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:34: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Attachments.Attachment
namespace TeamDynamix.Api.Attachments
{
    /// <summary>An attachment.</summary>
    public class Attachment
    {
        /// <summary>Gets or sets the attachment ID.</summary>
        public Guid ID { get; set; }
        /// <summary>Gets or sets the attachment type.</summary>
        public TeamDynamix.Api.Attachments.AttachmentType AttachmentType { get; set; }
        /// <summary>Gets or sets the item ID.</summary>
        public Int32 ItemID { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the creation date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the file name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the size of the attachment, in bytes.</summary>
        public Int32 Size { get; set; }
        /// <summary>Gets or sets the URI for this attachment.</summary>
        public String Uri { get; set; }
        /// <summary>Gets or sets the URI to retrieve the attachment content.</summary>
        public String ContentUri { get; set; }

        public Attachment() { }
    }
}

// Autogenerated 09/18/2018 12:54:34: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Attachments.AttachmentType
namespace TeamDynamix.Api.Attachments
{
    /// <summary>Describes the different types of supported attachments.</summary>
    public enum AttachmentType
    {
        /// <summary>Indicates that the type of attachment is unknown.</summary>
        None = 0,
        /// <summary>A project attachment.</summary>
        Project = 1,
        /// <summary>An issue attachment.</summary>
        Issue = 3,
        /// <summary>An announcement attachment.</summary>
        Announcement = 7,
        /// <summary>A ticket attachment.</summary>
        Ticket = 9,
        /// <summary>An opportunity attachment.</summary>
        Opportunity = 11,
        /// <summary>A forum post attachment.</summary>
        Forums = 13,
        /// <summary>A CRM account attachment.</summary>
        Account = 14,
        /// <summary>A Knowledge Base article attachment.</summary>
        KnowledgeBase = 26,
        /// <summary>An asset attachment.</summary>
        Asset = 27,
        /// <summary>An asset contract attachment.</summary>
        Contract = 29,
        /// <summary>A configuration item attachment.</summary>
        ConfigurationItem = 63
    }
}

// Autogenerated 09/18/2018 12:54:34: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Auth.AdminTokenParameters
namespace TeamDynamix.Api.Auth
{
    /// <summary>A set of login parameters used for logging in using a BEID / Web Service Key combination. This information is available to TeamDynamix administrators with the permission to add other administrators.</summary>
    public class AdminTokenParameters
    {
        /// <summary>Gets or sets the BEID.</summary>
        public Guid BEID { get; set; }
        /// <summary>Gets or sets the web services key.</summary>
        public Guid WebServicesKey { get; set; }

        public AdminTokenParameters() { }
    }
}

// Autogenerated 09/18/2018 12:54:34: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Auth.LoginParameters
namespace TeamDynamix.Api.Auth
{
    /// <summary>A set of login parameters.</summary>
    public class LoginParameters
    {
        /// <summary>Gets or sets the username.</summary>
        public String UserName { get; set; }
        /// <summary>Gets or sets the password.</summary>
        public String Password { get; set; }

        public LoginParameters() { }
    }
}

// Autogenerated 09/18/2018 12:54:34: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Briefcase.File
namespace TeamDynamix.Api.Briefcase
{
    /// <summary>A briefcase file.</summary>
    public class File
    {
        /// <summary>Gets or sets the file ID.</summary>
        public Guid ID { get; set; }
        /// <summary>Gets or sets the file name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the file description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the file size, in bytes.</summary>
        public Int32 Size { get; set; }
        /// <summary>Gets or sets the URI for this file.</summary>
        public String Uri { get; set; }
        /// <summary>Gets or sets the URI to retrieve the file content.</summary>
        public String ContentUri { get; set; }

        public File() { }
    }
}

// Autogenerated 09/18/2018 12:54:34: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Briefcase.Folder
namespace TeamDynamix.Api.Briefcase
{
    /// <summary>A briefcase folder.</summary>
    public class Folder
    {
        /// <summary>Gets or sets the folder ID.</summary>
        public String ID { get; set; }
        /// <summary>Gets or sets the folder name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the subfolders.</summary>
        public List<TeamDynamix.Api.Briefcase.Folder> Folders { get; set; }
        /// <summary>Gets or sets the date the folder was created.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the URI for this folder.</summary>
        public String Uri { get; set; }

        public Folder() { }
    }
}

// Autogenerated 09/18/2018 12:54:34: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.BulkOperations.BulkImport`1
namespace TeamDynamix.Api.BulkOperations
{
    /// <summary>A wrapper for a batch of items being imported.</summary>
    public class BulkImport<T>
    {
        /// <summary>Gets or sets the API items to import.</summary>
        public List<T> Items { get; set; }
        /// <summary>Gets or sets the settings used for the import.</summary>
        public TeamDynamix.Api.BulkOperations.ImportSettings Settings { get; set; }

        public BulkImport() { }
    }
}

// Autogenerated 09/18/2018 12:54:35: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.BulkOperations.FieldMapping
namespace TeamDynamix.Api.BulkOperations
{
    /// <summary>A mapping between an external source and a field on a TeamDynamix API object.</summary>
    public class FieldMapping
    {
        /// <summary>Gets or sets the field identifier.</summary>
        public String FieldIdentifier { get; set; }
        /// <summary>Gets or sets the ID of the associated custom attribute, or 0 if the field is not a custom attribute.</summary>
        public Int32 CustomAttributeID { get; set; }
        /// <summary>Gets or sets the default value for the field.</summary>
        public String DefaultValue { get; set; }
        /// <summary>Gets or sets a value indicating whether the field on the API object should be cleared when a value has not been provided for it.</summary>
        public Boolean ClearOnNull { get; set; }

        public FieldMapping() { }
    }
}

// Autogenerated 09/18/2018 12:54:35: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.BulkOperations.ImportSettings
namespace TeamDynamix.Api.BulkOperations
{
    /// <summary>The settings used for a bulk import operation.</summary>
    public class ImportSettings
    {
        /// <summary>Gets or sets the mappings used for fields in the import process.</summary>
        public List<TeamDynamix.Api.BulkOperations.FieldMapping> Mappings { get; set; }
        /// <summary>Gets or sets a value indicating whether items should be created in the import process.</summary>
        public Boolean CreateItems { get; set; }
        /// <summary>Gets or sets a value indicating whether items should be updated in the import process.</summary>
        public Boolean UpdateItems { get; set; }

        public ImportSettings() { }
    }
}

// Autogenerated 09/18/2018 12:54:35: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.BulkOperations.ItemResult
namespace TeamDynamix.Api.BulkOperations
{
    /// <summary>The result for an item in a bulk operation.</summary>
    public class ItemResult
    {
        /// <summary>Gets or sets the external ID for the item.</summary>
        public String ExternalID { get; set; }
        /// <summary>Gets or sets the service tag for the item.</summary>
        public String ServiceTag { get; set; }
        /// <summary>Gets or sets the result for the item.</summary>
        public TeamDynamix.Api.BulkOperations.ItemResultType Result { get; set; }
        /// <summary>Gets or sets the errors that were encountered.</summary>
        public List<String> Errors { get; set; }
        /// <summary>Gets or sets the warnings that were encountered.</summary>
        public List<String> Warnings { get; set; }

        public ItemResult() { }
    }
}

// Autogenerated 09/18/2018 12:54:35: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.BulkOperations.ItemResultType
namespace TeamDynamix.Api.BulkOperations
{
    /// <summary>Describes the different results that can take place for an item involved in a bulk operation.</summary>
    public enum ItemResultType
    {
        /// <summary>Indicates that the item was skipped.</summary>
        Skipped = 0,
        /// <summary>Indicates that the item was successfully created.</summary>
        Created = 1,
        /// <summary>Indicates that the item was successfully updated.</summary>
        Updated = 2
    }
}

// Autogenerated 09/18/2018 12:54:35: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Cmdb.BackingItemType
namespace TeamDynamix.Api.Cmdb
{
    /// <summary>Describes the different types of TeamDynamix items that a configuration item can represent.</summary>
    public enum BackingItemType
    {
        /// <summary>Indicates that a configuration item is not backed by any other type of TeamDynamix item; that is, that the configuration item is not automatically maintained by the system.</summary>
        ConfigurationItem = 63,
        /// <summary>Indicates that a configuration item is based on a TeamDynamix asset in the asset management application.</summary>
        Asset = 27,
        /// <summary>Indicates that a configuration item is based on a TeamDynamix service in the service catalog.</summary>
        Service = 47
    }
}

// Autogenerated 09/18/2018 12:54:35: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Cmdb.ConfigurationItem
namespace TeamDynamix.Api.Cmdb
{
    /// <summary>A configuration item.</summary>
    public class ConfigurationItem
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the application ID.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the ID of the form. If a value of 0 is provided, then the default configuration item form for the application will be used.</summary>
        public Int32 FormID { get; set; }
        /// <summary>Gets or sets the name of the form.</summary>
        public String FormName { get; set; }
        /// <summary>Gets or sets a value indicating whether this configuration item is maintained automatically by the system.</summary>
        public Boolean IsSystemMaintained { get; set; }
        /// <summary>Gets or sets the ID of the underlying TeamDynamix item in the system that this configuration item represents.</summary>
        public Int32 BackingItemID { get; set; }
        /// <summary>Gets or sets the type of the underlying TeamDynamix item in the system that this configuration item represents.</summary>
        public TeamDynamix.Api.Cmdb.BackingItemType BackingItemType { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the ID of the associated configuration item type.</summary>
        public Int32 TypeID { get; set; }
        /// <summary>Gets or sets the name of the associated configuration item type.</summary>
        public String TypeName { get; set; }
        /// <summary>Gets or sets the ID of the associated maintenance window.</summary>
        public Int32 MaintenanceScheduleID { get; set; }
        /// <summary>Gets or sets the name of the associated maintenance window.</summary>
        public String MaintenanceScheduleName { get; set; }
        /// <summary>Gets or sets the UID of the configuration item's owner.</summary>
        public Guid OwnerUID { get; set; }
        /// <summary>Gets or sets the full name of the configuration item's owner.</summary>
        public String OwnerFullName { get; set; }
        /// <summary>Gets or sets the ID of the Acct/Dept which owns the configuration item.</summary>
        public Int32 OwningDepartmentID { get; set; }
        /// <summary>Gets or sets the name of the Acct/Dept which owns the configuration item.</summary>
        public String OwningDepartmentName { get; set; }
        /// <summary>Gets or sets the ID of the configuration item's owning group.</summary>
        public Int32 OwningGroupID { get; set; }
        /// <summary>Gets or sets the name of the configuration item's owning group.</summary>
        public String OwningGroupName { get; set; }
        /// <summary>Gets or sets the ID of the location associated with the configuration item.</summary>
        public Int32 LocationID { get; set; }
        /// <summary>Gets or sets the name of the location associated with the configuration item.</summary>
        public String LocationName { get; set; }
        /// <summary>Gets or sets the ID of the location room associated with the configuration item.</summary>
        public Int32 LocationRoomID { get; set; }
        /// <summary>Gets or sets the name of the location room associated with the configuration item.</summary>
        public String LocationRoomName { get; set; }
        /// <summary>Gets or sets the active status. This will default to true.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the UTC date/time the configuration item was created.</summary>
        public DateTime CreatedDateUtc { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the UTC date/time the configuration item was last modified.</summary>
        public DateTime ModifiedDateUtc { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the configuration item.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the configuration item.</summary>
        public String ModifiedFullName { get; set; }
        /// <summary>Gets or sets the external ID. This value is used to map the configuration item to its representation in external sources such as third-party CMDBs.</summary>
        public String ExternalID { get; set; }
        /// <summary>Gets or sets the ID of the configuration item source, if the configuration item originated in a third-party CMDB system.</summary>
        public Int32 ExternalSourceID { get; set; }
        /// <summary>Gets or sets the name of the configuration item source, if the configuration item originated in a third-party CMDB system.</summary>
        public String ExternalSourceName { get; set; }
        /// <summary>Gets or sets the custom attributes associated with the configuration item. Only supported for configuration items that are not system-maintained.</summary>
        public IEnumerable<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets the attachments associated with the configuration item.. Only supported for configuration items that are not system-maintained.</summary>
        public IEnumerable<TeamDynamix.Api.Attachments.Attachment> Attachments { get; set; }
        /// <summary>Gets or sets the URI to retrieve the individual configuration item.</summary>
        public String Uri { get; set; }

        public ConfigurationItem() { }
    }
}

// Autogenerated 09/18/2018 12:54:36: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Cmdb.ConfigurationItemRelationship
namespace TeamDynamix.Api.Cmdb
{
    /// <summary>A relationship between two configuration items.</summary>
    public class ConfigurationItemRelationship
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the ID of the parent CI.</summary>
        public Int32 ParentID { get; set; }
        /// <summary>Gets or sets the name of the parent CI.</summary>
        public String ParentName { get; set; }
        /// <summary>Gets or sets the type ID of the parent CI.</summary>
        public Int32 ParentTypeID { get; set; }
        /// <summary>Gets or sets the type name of the parent CI.</summary>
        public String ParentTypeName { get; set; }
        /// <summary>Gets or sets the ID of the child CI.</summary>
        public Int32 ChildID { get; set; }
        /// <summary>Gets or sets the name of the child CI.</summary>
        public String ChildName { get; set; }
        /// <summary>Gets or sets the type ID of the child CI.</summary>
        public Int32 ChildTypeID { get; set; }
        /// <summary>Gets or sets the type name of the child CI.</summary>
        public String ChildTypeName { get; set; }
        /// <summary>Gets or sets a value indicating whether this relationship is maintained automatically by the system.</summary>
        public Boolean IsSystemMaintained { get; set; }
        /// <summary>Gets or sets the description of the relationship from the perspective of the parent CI.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the description of the relationship from the perspective of the child CI.</summary>
        public String InverseDescription { get; set; }
        /// <summary>Gets or sets a value indicating if this relationship is an operational dependency.</summary>
        public Boolean IsOperationalDependency { get; set; }
        /// <summary>Gets or sets the UTC date/time the relationship was created.</summary>
        public DateTime CreatedDateUtc { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUID { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }

        public ConfigurationItemRelationship() { }
    }
}

// Autogenerated 09/18/2018 12:54:36: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Cmdb.ConfigurationItemSearch
namespace TeamDynamix.Api.Cmdb
{
    /// <summary>A set of filtering options used for searching configuration items.</summary>
    public class ConfigurationItemSearch
    {
        /// <summary>Gets or sets the name text to filter on.</summary>
        public String NameLike { get; set; }
        /// <summary>Gets or sets the active status to filter on.</summary>
        public Boolean? IsActive { get; set; }
        /// <summary>Gets or sets the type IDs to filter on.</summary>
        public Int32[] TypeIDs { get; set; }
        /// <summary>Gets or sets the maintenance window IDs to filter on.</summary>
        public Int32[] MaintenanceScheduleIDs { get; set; }
        /// <summary>Gets or sets the custom attributes to filter on.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> CustomAttributes { get; set; }

        public ConfigurationItemSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:36: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Cmdb.ConfigurationItemSource
namespace TeamDynamix.Api.Cmdb
{
    /// <summary>An external source for a TeamDynamix.Api.Cmdb.ConfigurationItem or TeamDynamix.Api.Assets.Asset if it did not originate in TeamDynamix.</summary>
    public class ConfigurationItemSource
    {
        /// <summary>Gets or sets the ID of the configuration item source.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the application ID.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the name of the configuration item source.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the type of the configuration item source.</summary>
        public TeamDynamix.Api.Cmdb.ConfigurationItemSourceType Type { get; set; }
        /// <summary>Gets or sets a value indicating whether this configuration item source is marked as active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the format string that opens the configuration item record in the external system, if available.</summary>
        public String FormatString { get; set; }

        public ConfigurationItemSource() { }
    }
}

// Autogenerated 09/18/2018 12:54:36: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Cmdb.ConfigurationItemSourceType
namespace TeamDynamix.Api.Cmdb
{
    /// <summary>Describes the available external sources for configuration items.</summary>
    public enum ConfigurationItemSourceType
    {
        /// <summary>An unknown, indeterminate, or TeamDynamix source.</summary>
        None = 0,
        /// <summary>A configuration item resides within Kaseya.</summary>
        Kaseya = 1,
        /// <summary>A configuration item can be accessed through an external URL.</summary>
        ExternalUrl = 2
    }
}

// Autogenerated 09/18/2018 12:54:36: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Cmdb.ConfigurationItemType
namespace TeamDynamix.Api.Cmdb
{
    /// <summary>A type of configuration item.</summary>
    public class ConfigurationItemType
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the application ID.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets a value indicating whether this item type is system-defined.</summary>
        public Boolean IsSystemDefined { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the active status.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the UTC created date.</summary>
        public DateTime CreatedDateUtc { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the UTC last modified date.</summary>
        public DateTime ModifiedDateUtc { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the item type.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the item type.</summary>
        public String ModifiedFullName { get; set; }

        public ConfigurationItemType() { }
    }
}

// Autogenerated 09/18/2018 12:54:37: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Cmdb.ConfigurationRelationshipType
namespace TeamDynamix.Api.Cmdb
{
    /// <summary>A type of configuration item relationship.</summary>
    public class ConfigurationRelationshipType
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the description of the relationship from the perspective of the parent CI.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the description of the relationship from the perspective of the child CI.</summary>
        public String InverseDescription { get; set; }
        /// <summary>Gets or sets a value indicating if relationships of this type constitute an operational dependency.</summary>
        public Boolean IsOperationalDependency { get; set; }
        /// <summary>Gets or sets the active status.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the UTC created date.</summary>
        public DateTime CreatedDateUtc { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the UTC last modified date.</summary>
        public DateTime ModifiedDateUtc { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the relationship type.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the relationship type.</summary>
        public String ModifiedFullName { get; set; }

        public ConfigurationRelationshipType() { }
    }
}

// Autogenerated 09/18/2018 12:54:37: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Cmdb.MaintenanceSchedule
namespace TeamDynamix.Api.Cmdb
{
    /// <summary>A maintenance window for configuration items (CIs).</summary>
    public class MaintenanceSchedule
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the ID of the associated time zone.</summary>
        public Int32 TimeZoneID { get; set; }
        /// <summary>Gets or sets the name of the associated time zone.</summary>
        public String TimeZoneName { get; set; }
        /// <summary>Gets or sets the active status.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the UTC created date.</summary>
        public DateTime CreatedDateUtc { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the UTC last modified date.</summary>
        public DateTime ModifiedDateUtc { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the schedule.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the schedule.</summary>
        public String ModifiedFullName { get; set; }

        public MaintenanceSchedule() { }
    }
}

// Autogenerated 09/18/2018 12:54:37: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Cmdb.MaintenanceScheduleSearch
namespace TeamDynamix.Api.Cmdb
{
    /// <summary>A set of filtering options used for searching maintenance windows.</summary>
    public class MaintenanceScheduleSearch
    {
        /// <summary>Gets or sets the active status to filter on.</summary>
        public Boolean? IsActive { get; set; }
        /// <summary>Gets or sets the searching text to use.</summary>
        public String NameLike { get; set; }

        public MaintenanceScheduleSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:37: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Crm.Activity
namespace TeamDynamix.Api.Crm
{
    /// <summary>A CRM activity.</summary>
    public class Activity
    {
        /// <summary>Gets or sets the activity ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets activity type name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the activity type ID.</summary>
        public Int32 TypeID { get; set; }
        /// <summary>Gets or sets the name of the activity account.</summary>
        public String AccountName { get; set; }
        /// <summary>Gets or sets the activity account ID.</summary>
        public Int32 AccountID { get; set; }
        /// <summary>Gets or sets the activity contact ID. When used for creation, if a contact is specified which belongs to an account other than the account specified in the AccountID property, the contact will be ignored.</summary>
        public Int32 ContactID { get; set; }
        /// <summary>Gets or sets the full name of the activity contact.</summary>
        public String ContactFullName { get; set; }
        /// <summary>Gets or sets the activity status ID.</summary>
        public Int32 StatusID { get; set; }
        /// <summary>Gets or sets the activity priority ID.</summary>
        public Int32 PriorityID { get; set; }
        /// <summary>Gets or sets the full name of the activity sales rep.</summary>
        public String SalesRepFullName { get; set; }
        /// <summary>Gets or sets the activity sales rep ID.</summary>
        public Guid SalesRepUID { get; set; }
        /// <summary>Gets or sets the activity creation date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the full name of the activity creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the activity creator ID.</summary>
        public Guid CreatedUID { get; set; }
        /// <summary>Gets or sets the activity last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the activity start date. Times are assumed to be in UTC for creation. As activity times can only be in 15 minute intervals, the start date will be rounded down to the nearest 15 minute interval.</summary>
        public DateTime StartDate { get; set; }
        /// <summary>Gets or sets the activity end date. Times are assumed to be in UTC for creation. As activity times can only be in 15 minute intervals, the end date will be rounded down to the nearest 15 minute interval.</summary>
        public DateTime EndDate { get; set; }
        /// <summary>Gets or sets a value indicating whether or not the activity [is all day].</summary>
        public Boolean IsAllDay { get; set; }
        /// <summary>Gets or sets the activity comments.</summary>
        public String Comments { get; set; }

        public Activity() { }
    }
}

// Autogenerated 09/18/2018 12:54:37: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Crm.ActivityPriority
namespace TeamDynamix.Api.Crm
{
    /// <summary>A CRM activity priority.</summary>
    public class ActivityPriority
    {
        /// <summary>Gets or sets the activity priority ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the activity priority name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the activity priority created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the activity priority modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the number of activities using this activity priority.</summary>
        public Int32 ActivityCount { get; set; }

        public ActivityPriority() { }
    }
}

// Autogenerated 09/18/2018 12:54:38: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Crm.ActivityStatus
namespace TeamDynamix.Api.Crm
{
    /// <summary>A CRM activity status.</summary>
    public class ActivityStatus
    {
        /// <summary>Gets or sets the activity status ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the activity status name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the activity status created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the activity status modified date.</summary>
        public DateTime ModifiedDate { get; set; }

        public ActivityStatus() { }
    }
}

// Autogenerated 09/18/2018 12:54:38: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Crm.ActivityType
namespace TeamDynamix.Api.Crm
{
    /// <summary>A CRM activity type.</summary>
    public class ActivityType
    {
        /// <summary>Gets or sets the activity type ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the activity type name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the activity type created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the activity type modified date.</summary>
        public DateTime ModifiedDate { get; set; }

        public ActivityType() { }
    }
}

// Autogenerated 09/18/2018 12:54:38: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Crm.EmailActivity
namespace TeamDynamix.Api.Crm
{
    /// <summary>An email to convert to an activity. A template activity template needs to be included for successful creation of activities.</summary>
    public class EmailActivity
    {
        /// <summary>Gets or sets the email subject.</summary>
        public String Subject { get; set; }
        /// <summary>Gets or sets the email body.</summary>
        public String Body { get; set; }
        /// <summary>Gets or sets the sales rep email address.</summary>
        public String SalesRepEmailAddress { get; set; }
        /// <summary>Gets or sets the contact email addresses.</summary>
        public List<TeamDynamix.Api.Crm.EmailAddress> ContactEmailAddresses { get; set; }
        /// <summary>Gets or sets a value indicating whether or not to create CRM contacts for contact email addresses which do not match an existing CRM contact.</summary>
        public Boolean CreateCrmContactsIfNoneExist { get; set; }
        /// <summary>Gets or sets the activity.</summary>
        public TeamDynamix.Api.Crm.Activity TemplateActivity { get; set; }

        public EmailActivity() { }
    }
}

// Autogenerated 09/18/2018 12:54:38: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Crm.EmailAddress
namespace TeamDynamix.Api.Crm
{
    /// <summary>An email address consisting of an address and a display name.</summary>
    public class EmailAddress
    {
        /// <summary>Gets or sets the email address.</summary>
        public String Address { get; set; }
        /// <summary>Gets or sets the email address display name.</summary>
        public String DisplayName { get; set; }

        public EmailAddress() { }
    }
}

// Autogenerated 09/18/2018 12:54:38: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.CustomAttributes.CustomAttribute
namespace TeamDynamix.Api.CustomAttributes
{
    /// <summary>A single custom attribute.</summary>
    public class CustomAttribute
    {
        /// <summary>Gets or sets the attribute ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the attribute name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the order of the attribute. Attributes are first sorted by order (ascending) and their name (also ascending).</summary>
        public Int32 Order { get; set; }
        /// <summary>Gets or sets the attribute description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the ID of the associated attribute section.</summary>
        public Int32 SectionID { get; set; }
        /// <summary>Gets or sets the name of the associated attribute section.</summary>
        public String SectionName { get; set; }
        /// <summary>Gets or sets the field type of the attribute.</summary>
        public String FieldType { get; set; }
        /// <summary>Gets or sets the data type of the attribute.</summary>
        public String DataType { get; set; }
        /// <summary>Gets or sets the choices for the attribute.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttributeChoice> Choices { get; set; }
        /// <summary>Gets or sets a value indicating whether the attribute is required.</summary>
        public Boolean IsRequired { get; set; }
        /// <summary>Gets or sets a value indicating whether the attribute is updatable.</summary>
        public Boolean IsUpdatable { get; set; }
        /// <summary>Gets or sets the value of the attribute.</summary>
        public String Value { get; set; }
        /// <summary>Gets or sets the text value of the attribute. For choice attributes, this will be a comma-separated list of all the currently selected choices (referenced by choice ID).</summary>
        public String ValueText { get; set; }
        /// <summary>Gets or sets the text of the selected choices. This will be a comma-separated list of the text of each selected choice.</summary>
        public String ChoicesText { get; set; }
        /// <summary>Gets or sets the list of all item types (represented as IDs) that are associated with the attribute.</summary>
        public List<Int32> AssociatedItemIDs { get; set; }

        public CustomAttribute() { }
    }
}

// Autogenerated 09/18/2018 12:54:39: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.CustomAttributes.CustomAttributeChoice
namespace TeamDynamix.Api.CustomAttributes
{
    /// <summary>A single choice for a custom attribute.</summary>
    public class CustomAttributeChoice
    {
        /// <summary>Gets or sets the choice ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the name of the choice. This doubles as the display text for the choice.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the active status of the choice.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the date the choice was created.</summary>
        public DateTime DateCreated { get; set; }
        /// <summary>Gets or sets the date the choice was last modified.</summary>
        public DateTime DateModified { get; set; }
        /// <summary>Gets or sets the order of the choice in the list. Choices are first sorted by order (ascending) and their name (also ascending).</summary>
        public Int32 Order { get; set; }

        public CustomAttributeChoice() { }
    }
}

// Autogenerated 09/18/2018 12:54:39: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Feed.FeedEntry
namespace TeamDynamix.Api.Feed
{
    /// <summary>A feed entry to be submitted.</summary>
    public class FeedEntry
    {
        /// <summary>Gets or sets the comments of the feed entry.</summary>
        public String Comments { get; set; }
        /// <summary>Gets or sets the individuals to notify.</summary>
        public String[] Notify { get; set; }
        /// <summary>Gets or sets a value indicating whether this feed entry is private.</summary>
        public Boolean IsPrivate { get; set; }

        public FeedEntry() { }
    }
}

// Autogenerated 09/18/2018 12:54:40: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Feed.FeedItemType
namespace TeamDynamix.Api.Feed
{
    /// <summary>Describes the different types of items that have feed entries.</summary>
    public enum FeedItemType
    {
        /// <summary>An indeterminate type of item.</summary>
        None = 0,
        /// <summary>A project.</summary>
        Project = 1,
        /// <summary>A project request.</summary>
        ProjectRequest = 1,
        /// <summary>A project task.</summary>
        Task = 2,
        /// <summary>A project issue.</summary>
        Issue = 3,
        /// <summary>A project link.</summary>
        Link = 4,
        /// <summary>A project request.</summary>
        Contact = 6,
        /// <summary>A project announcement.</summary>
        Announcement = 7,
        /// <summary>A ticket.</summary>
        Ticket = 9,
        /// <summary>A briefcase file.</summary>
        File = 15,
        /// <summary>A user-shared status.</summary>
        UserStatus = 24,
        /// <summary>A ticket task.</summary>
        TicketTask = 25,
        /// <summary>A maintenance activity.</summary>
        MaintenanceActivity = 25,
        /// <summary>An asset.</summary>
        Asset = 27
    }
}

// Autogenerated 09/18/2018 12:54:40: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Feed.ItemUpdate
namespace TeamDynamix.Api.Feed
{
    /// <summary>A feed entry that has already been posted.</summary>
    public class ItemUpdate
    {
        /// <summary>Gets or sets the ID of the feed entry.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the integer based ID of the creator.</summary>
        public Int32 CreatedRefID { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the first name of the creator.</summary>
        public String CreatedFirstName { get; set; }
        /// <summary>Gets or sets the last name of the creator.</summary>
        public String CreatedLastName { get; set; }
        /// <summary>Gets or sets the path to the creator's profile picture.</summary>
        public String CreatedByPicPath { get; set; }
        /// <summary>Gets or sets the creation date of the feed entry.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the date the feed entry was last updated. Replying to this feed entry will update this date.</summary>
        public DateTime LastUpdatedDate { get; set; }
        /// <summary>Gets or sets the ID of the associated project.</summary>
        public Int32 ProjectID { get; set; }
        /// <summary>Gets or sets the name of the associated project.</summary>
        public String ProjectName { get; set; }
        /// <summary>Gets or sets the ID of the associated plan or ticket.</summary>
        public Int32 PlanID { get; set; }
        /// <summary>Gets or sets the name of the associated plan or ticket.</summary>
        public String PlanName { get; set; }
        /// <summary>Gets or sets the item type.</summary>
        public TeamDynamix.Api.Feed.FeedItemType ItemType { get; set; }
        /// <summary>Gets or sets the item ID.</summary>
        public Int32 ItemID { get; set; }
        /// <summary>Gets or sets the item title.</summary>
        public String ItemTitle { get; set; }
        /// <summary>Gets or sets the reference ID. This value is used when the associated item is normally referred to by a GUID.</summary>
        public Guid? ReferenceID { get; set; }
        /// <summary>Gets or sets the body of the feed entry.</summary>
        public String Body { get; set; }
        /// <summary>Gets or sets the type of the feed entry.</summary>
        public TeamDynamix.Api.Feed.UpdateType UpdateType { get; set; }
        /// <summary>Gets or sets the list of notified people.</summary>
        public String NotifiedList { get; set; }
        /// <summary>Gets or sets a value indicating whether this feed entry is private.</summary>
        public Boolean IsPrivate { get; set; }
        /// <summary>Gets or sets a value indicating whether this feed entry is a parent for other feed entries.</summary>
        public Boolean IsParent { get; set; }
        /// <summary>Gets or sets the replies to this feed entry.</summary>
        public List<TeamDynamix.Api.Feed.ItemUpdateReply> Replies { get; set; }
        /// <summary>Gets or sets the number of replies to this feed entry.</summary>
        public Int32 RepliesCount { get; set; }
        /// <summary>Gets or sets the likes for this feed entry.</summary>
        public List<TeamDynamix.Api.Feed.ItemUpdateLike> Likes { get; set; }
        /// <summary></summary>
        public Boolean ILike { get; set; }
        /// <summary>Gets or sets the number of likes for this feed entry.</summary>
        public Int32 LikesCount { get; set; }
        /// <summary>Gets or sets the participants. This list consists of the person who is responsible for the original feed entry as well as any other individuals who have replied to it.</summary>
        public List<TeamDynamix.Api.Feed.Participant> Participants { get; set; }
        /// <summary>Gets or sets the breadcrumbs HTML. This is not loaded from the database; it is used purely for the purpose of sending HTML to the client for rendering breadcrumbs, and should be popualted by the calling application.</summary>
        public String BreadcrumbsHtml { get; set; }
        /// <summary>Gets a value indicating whether this instance has an attachment.</summary>
        public Boolean HasAttachment { get; set; }

        public ItemUpdate() { }
    }
}

// Autogenerated 09/18/2018 12:54:40: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Feed.ItemUpdateLike
namespace TeamDynamix.Api.Feed
{
    /// <summary>A "like" of a feed entry.</summary>
    public class ItemUpdateLike
    {
        /// <summary>Gets or sets the identifier.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the full name of the person.</summary>
        public String UserFullName { get; set; }
        /// <summary>Gets or sets the UID of the person.</summary>
        public Guid Uid { get; set; }

        public ItemUpdateLike() { }
    }
}

// Autogenerated 09/18/2018 12:54:40: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Feed.ItemUpdateReply
namespace TeamDynamix.Api.Feed
{
    /// <summary>A reply to a feed entry.</summary>
    public class ItemUpdateReply
    {
        /// <summary>Gets or sets the ID of the reply.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the body of the reply.</summary>
        public String Body { get; set; }
        /// <summary>Gets or sets the UID of the person making the reply.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary></summary>
        public Int32 CreatedRefID { get; set; }
        /// <summary>Gets or sets the full name of the person making the reply.</summary>
        public String CreatedFullName { get; set; }
        /// <summary></summary>
        public String CreatedFirstName { get; set; }
        /// <summary></summary>
        public String CreatedLastName { get; set; }
        /// <summary></summary>
        public String CreatedByPicPath { get; set; }
        /// <summary>Gets or sets the date of the reply.</summary>
        public DateTime CreatedDate { get; set; }

        public ItemUpdateReply() { }
    }
}

// Autogenerated 09/18/2018 12:54:41: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Feed.Participant
namespace TeamDynamix.Api.Feed
{
    /// <summary>A participant in a feed discussion.</summary>
    public class Participant
    {
        /// <summary>Gets or sets the full name of the participant.</summary>
        public String FullName { get; set; }
        /// <summary>Gets or sets the email address of the participant.</summary>
        public String Email { get; set; }

        public Participant() { }
    }
}

// Autogenerated 09/18/2018 12:54:41: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Feed.TicketFeedEntry
namespace TeamDynamix.Api.Feed
{
    /// <summary>A feed entry for a ticket.</summary>
    public class TicketFeedEntry
    {
        /// <summary>Gets or sets the new status ID. Leave null or 0 to not change the status.</summary>
        public Int32? NewStatusID { get; set; }
        /// <summary>Gets or sets the comments of the feed entry.</summary>
        public String Comments { get; set; }
        /// <summary>Gets or sets the individuals to notify.</summary>
        public String[] Notify { get; set; }
        /// <summary>Gets or sets a value indicating whether this feed entry is private.</summary>
        public Boolean IsPrivate { get; set; }

        public TicketFeedEntry() { }
    }
}

// Autogenerated 09/18/2018 12:54:41: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Feed.UpdateType
namespace TeamDynamix.Api.Feed
{
    /// <summary>Describes the different types of feed entries.</summary>
    public enum UpdateType
    {
        /// <summary>A feed entry of an indeterminate type.</summary>
        None = 0,
        /// <summary>A feed entry for a comment on an item.</summary>
        Comment = 1,
        /// <summary>A feed entry for an item's status changing.</summary>
        StatusChange = 2,
        /// <summary>A feed entry for an item's properties being edited.</summary>
        Edit = 3,
        /// <summary>A feed entry for a newly-created item.</summary>
        Created = 4,
        /// <summary>A feed entry for a user adding/removing items to and from "My Work".</summary>
        MyWorkChange = 5,
        /// <summary>A feed entry for the contents of an item being merged into another item.</summary>
        Merge = 6,
        /// <summary>A feed entry for a comment on an item being moved to another item.</summary>
        MovedComment = 7
    }
}

// Autogenerated 09/18/2018 12:54:41: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Forms.Form
namespace TeamDynamix.Api.Forms
{
    /// <summary>A custom form.</summary>
    public class Form
    {
        /// <summary>Gets or sets the form ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the form name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the application ID.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the containing application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the component ID.</summary>
        public Int32 ComponentID { get; set; }
        /// <summary>Gets or sets a value indicating whether this form is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether this form is configured.</summary>
        public Boolean IsConfigured { get; set; }
        /// <summary>Gets or sets a value indicating whether this form is the default in its containing application.</summary>
        public Boolean IsDefaultForApp { get; set; }
        /// <summary>Gets or sets a value indicating whether this form is pinned. Currently only supported for tickets.</summary>
        public Boolean IsPinned { get; set; }
        /// <summary>Gets or sets a value indicating whether the form will expand help text initially.</summary>
        public Boolean ShouldExpandHelp { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the user who created the form.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the user who created the form.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the UID of the user who last modified the form.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the user who last modified the form.</summary>
        public String ModifiedFullName { get; set; }
        /// <summary>Gets or sets the number of assets associated with this form, or -1 if this total has not been loaded.</summary>
        public Int32 AssetsCount { get; set; }
        /// <summary>Gets or sets the number of configuration items associated with this form, or -1 if this total has not been loaded.</summary>
        public Int32 ConfigurationItemsCount { get; set; }

        public Form() { }
    }
}

// Autogenerated 09/18/2018 12:54:42: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Issues.Issue
namespace TeamDynamix.Api.Issues
{
    /// <summary>A single issue.</summary>
    public class Issue
    {
        /// <summary></summary>
        public Double EstimatedHours { get; set; }
        /// <summary></summary>
        public Double ActualHours { get; set; }
        /// <summary></summary>
        public DateTime StartDate { get; set; }
        /// <summary></summary>
        public DateTime EndDate { get; set; }
        /// <summary></summary>
        public Int32 PriorityID { get; set; }
        /// <summary></summary>
        public String PriorityName { get; set; }
        /// <summary></summary>
        public Double PriorityOrder { get; set; }
        /// <summary></summary>
        public Int32 TaskID { get; set; }
        /// <summary></summary>
        public String TaskName { get; set; }
        /// <summary></summary>
        public Int32 ID { get; set; }
        /// <summary></summary>
        public String Title { get; set; }
        /// <summary></summary>
        public String Description { get; set; }
        /// <summary></summary>
        public Boolean IsRead { get; set; }
        /// <summary></summary>
        public Int32 CategoryID { get; set; }
        /// <summary></summary>
        public String CategoryName { get; set; }
        /// <summary></summary>
        public Int32 StatusID { get; set; }
        /// <summary></summary>
        public String StatusName { get; set; }
        /// <summary></summary>
        public Int32 StatusValue { get; set; }
        /// <summary></summary>
        public Int32 DaysOld { get; set; }
        /// <summary></summary>
        public Int32 ProjectID { get; set; }
        /// <summary></summary>
        public String ProjectName { get; set; }
        /// <summary></summary>
        public DateTime CreatedDate { get; set; }
        /// <summary></summary>
        public String CreatedFullName { get; set; }
        /// <summary></summary>
        public String CreatedUID { get; set; }
        /// <summary></summary>
        public String CreatedEmail { get; set; }
        /// <summary></summary>
        public String ResponsibleFullName { get; set; }
        /// <summary></summary>
        public String ResponsibleUID { get; set; }
        /// <summary></summary>
        public String ResponsibleEmail { get; set; }
        /// <summary></summary>
        public Boolean ResponsibleIsRead { get; set; }
        /// <summary></summary>
        public DateTime ResponsibleDateRead { get; set; }
        /// <summary></summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary></summary>
        public String ModifiedFullName { get; set; }
        /// <summary></summary>
        public String ModifiedUID { get; set; }
        /// <summary></summary>
        public Boolean Flagged { get; set; }
        /// <summary></summary>
        public DateTime DateFlagged { get; set; }
        /// <summary></summary>
        public String LastUpdateText { get; set; }
        /// <summary></summary>
        public DateTime LastUpdatedDate { get; set; }
        /// <summary></summary>
        public String LastUpdatedByFullName { get; set; }
        /// <summary></summary>
        public String LastUpdatedByUID { get; set; }
        /// <summary>The custom attribute collection for the issue.</summary>
        public IEnumerable<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary></summary>
        public DateTime CompletedDate { get; set; }
        /// <summary></summary>
        public String CompletedUID { get; set; }
        /// <summary></summary>
        public String CompletedFullName { get; set; }

        public Issue() { }
    }
}

// Autogenerated 09/18/2018 12:54:42: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Issues.IssueRiskCreateOptions
namespace TeamDynamix.Api.Issues
{
    /// <summary>Options used in creating Issues or risks.</summary>
    public class IssueRiskCreateOptions
    {
        /// <summary>If true, the creating user will be notified when the issue or risk is closed.</summary>
        public Boolean NotifyOnClosed { get; set; }

        public IssueRiskCreateOptions() { }
    }
}

// Autogenerated 09/18/2018 12:54:42: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Issues.IssueSearch
namespace TeamDynamix.Api.Issues
{
    /// <summary>A set of filtering options used for searching issues.</summary>
    public class IssueSearch
    {
        /// <summary></summary>
        public Int32[] PriorityIDs { get; set; }
        /// <summary></summary>
        public DateTime EndDateFrom { get; set; }
        /// <summary></summary>
        public DateTime EndDateTo { get; set; }
        /// <summary></summary>
        public DateTime StartDateFrom { get; set; }
        /// <summary></summary>
        public DateTime StartDateTo { get; set; }
        /// <summary></summary>
        public Int32[] ParentIDs { get; set; }
        /// <summary></summary>
        public Int32? MaxResults { get; set; }
        /// <summary></summary>
        public String ID { get; set; }
        /// <summary></summary>
        public Int32[] ProjectIDs { get; set; }
        /// <summary></summary>
        public Int32[] StatusIDs { get; set; }
        /// <summary></summary>
        public Int32[] StatusIDsNot { get; set; }
        /// <summary></summary>
        public Int32[] CategoryIDs { get; set; }
        /// <summary></summary>
        public DateTime ModifiedDateFrom { get; set; }
        /// <summary></summary>
        public DateTime ModifiedDateTo { get; set; }
        /// <summary></summary>
        public String CreatedUID { get; set; }
        /// <summary></summary>
        public DateTime CreatedDateFrom { get; set; }
        /// <summary></summary>
        public DateTime CreatedDateTo { get; set; }
        /// <summary></summary>
        public DateTime UpdatedFrom { get; set; }
        /// <summary></summary>
        public DateTime UpdatedTo { get; set; }
        /// <summary></summary>
        public String UpdatedUID { get; set; }
        /// <summary></summary>
        public String ResponsibilityUID { get; set; }
        /// <summary></summary>
        public String NameLike { get; set; }
        /// <summary>Gets or sets the custom attributes to filter on.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> CustomAttributes { get; set; }

        public IssueSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:43: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Issues.IssueStatus
namespace TeamDynamix.Api.Issues
{
    /// <summary>An issue status.</summary>
    public class IssueStatus
    {
        /// <summary>Gets or sets the ID of the issue status.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the status name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the status description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the order of the status when displayed in a list.</summary>
        public Double Order { get; set; }
        /// <summary>Gets or sets the status class.</summary>
        public TeamDynamix.Api.Statuses.StatusClass StatusClass { get; set; }
        /// <summary>Gets or sets a value indicating whether the status is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether this status is the default for the application.</summary>
        public Boolean IsDefault { get; set; }

        public IssueStatus() { }
    }
}

// Autogenerated 09/18/2018 12:54:43: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Issues.IssueUpdate
namespace TeamDynamix.Api.Issues
{
    /// <summary>An update for an issue</summary>
    public class IssueUpdate
    {
        /// <summary>Gets or sets the issue ID.</summary>
        public Int32 IssueId { get; set; }
        /// <summary>Gets or sets the time entry date.</summary>
        public DateTime TimeEntryDate { get; set; }
        /// <summary>Gets or sets the hours worked.</summary>
        public Double HoursWorked { get; set; }
        /// <summary>Gets or sets the time type ID.</summary>
        public Int32 TimeTypeId { get; set; }
        /// <summary>Gets or sets the parent Risk's identifier.</summary>
        public Int32 ParentId { get; set; }
        /// <summary>Gets or sets the project ID.</summary>
        public Int32 ProjectId { get; set; }
        /// <summary>Gets or sets the status ID.</summary>
        public Int32 StatusID { get; set; }
        /// <summary>Gets or sets the email addresses to notify. This is an array of strings.</summary>
        public String[] Notify { get; set; }
        /// <summary>Gets or sets the comments.</summary>
        public String Comments { get; set; }
        /// <summary>Gets or sets the custom attributes.</summary>
        public IEnumerable<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets a value indicating whether this update is private.</summary>
        public Boolean IsPrivate { get; set; }

        public IssueUpdate() { }
    }
}

// Autogenerated 09/18/2018 12:54:44: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Issues.Risk
namespace TeamDynamix.Api.Issues
{
    /// <summary>No documentation found.</summary>
    public class Risk
    {
        /// <summary>Gets or sets a value indicating whether this instance is a risk that represents an opportunity instead of a threat.</summary>
        public Boolean IsOpportunity { get; set; }
        /// <summary>Gets or sets the impact of a risk or opportunity, should it occur with 0 meaning no impact and 1 meaning maximum possible impact.</summary>
        public Double? Impact { get; set; }
        /// <summary>Gets or sets the probability of a risk or opportunity coming to fruition 0 meaning no chance and 1 meaning guaranteed to happen.</summary>
        public Double? Probability { get; set; }
        /// <summary>Gets or sets the urgency of a risk. This is autocalculated from Impact and Probability but can be manually adjusted as well.</summary>
        public Double? Urgency { get; set; }
        /// <summary>Gets or sets the response strategy identifier used for marking how a risk will be responded to.</summary>
        public Int32? ResponseStrategyID { get; set; }
        /// <summary>Gets or sets the name of the response strategy.</summary>
        public String ResponseStrategyName { get; set; }
        /// <summary>Gets or sets the response strategy's description. This is typically used for help text.</summary>
        public String ResponseStrategyDescription { get; set; }
        /// <summary></summary>
        public Int32 ID { get; set; }
        /// <summary></summary>
        public String Title { get; set; }
        /// <summary></summary>
        public String Description { get; set; }
        /// <summary></summary>
        public Boolean IsRead { get; set; }
        /// <summary></summary>
        public Int32 CategoryID { get; set; }
        /// <summary></summary>
        public String CategoryName { get; set; }
        /// <summary></summary>
        public Int32 StatusID { get; set; }
        /// <summary></summary>
        public String StatusName { get; set; }
        /// <summary></summary>
        public Int32 StatusValue { get; set; }
        /// <summary></summary>
        public Int32 DaysOld { get; set; }
        /// <summary></summary>
        public Int32 ProjectID { get; set; }
        /// <summary></summary>
        public String ProjectName { get; set; }
        /// <summary></summary>
        public DateTime CreatedDate { get; set; }
        /// <summary></summary>
        public String CreatedFullName { get; set; }
        /// <summary></summary>
        public String CreatedUID { get; set; }
        /// <summary></summary>
        public String CreatedEmail { get; set; }
        /// <summary></summary>
        public String ResponsibleFullName { get; set; }
        /// <summary></summary>
        public String ResponsibleUID { get; set; }
        /// <summary></summary>
        public String ResponsibleEmail { get; set; }
        /// <summary></summary>
        public Boolean ResponsibleIsRead { get; set; }
        /// <summary></summary>
        public DateTime ResponsibleDateRead { get; set; }
        /// <summary></summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary></summary>
        public String ModifiedFullName { get; set; }
        /// <summary></summary>
        public String ModifiedUID { get; set; }
        /// <summary></summary>
        public Boolean Flagged { get; set; }
        /// <summary></summary>
        public DateTime DateFlagged { get; set; }
        /// <summary></summary>
        public String LastUpdateText { get; set; }
        /// <summary></summary>
        public DateTime LastUpdatedDate { get; set; }
        /// <summary></summary>
        public String LastUpdatedByFullName { get; set; }
        /// <summary></summary>
        public String LastUpdatedByUID { get; set; }
        /// <summary>The custom attribute collection for the issue.</summary>
        public IEnumerable<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary></summary>
        public DateTime CompletedDate { get; set; }
        /// <summary></summary>
        public String CompletedUID { get; set; }
        /// <summary></summary>
        public String CompletedFullName { get; set; }

        public Risk() { }
    }
}

// Autogenerated 09/18/2018 12:54:44: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Issues.RiskSearch
namespace TeamDynamix.Api.Issues
{
    /// <summary>No documentation found.</summary>
    public class RiskSearch
    {
        /// <summary>Gets or sets the probabilities to filter on. Very Low is 0.05, Low is 0.1, Medium is 0.2, High is 0.4, Very High is 0.8</summary>
        public Double[] Probabilities { get; set; }
        /// <summary>Gets or sets the impacts to filter on. Very Low is 0.05, Low is 0.1, Medium is 0.2, High is 0.4, Very High is 0.8</summary>
        public Double[] Impacts { get; set; }
        /// <summary>Gets or sets the urgencies to filter on. Very Low is 0.05, Low is 0.1, Medium is 0.2, High is 0.4, Very High is 0.8</summary>
        public Double[] Urgencies { get; set; }
        /// <summary></summary>
        public Boolean? IsOpportunity { get; set; }
        /// <summary></summary>
        public Int32[] ResponseStrategyIDs { get; set; }
        /// <summary></summary>
        public Int32? MaxResults { get; set; }
        /// <summary></summary>
        public String ID { get; set; }
        /// <summary></summary>
        public Int32[] ProjectIDs { get; set; }
        /// <summary></summary>
        public Int32[] StatusIDs { get; set; }
        /// <summary></summary>
        public Int32[] StatusIDsNot { get; set; }
        /// <summary></summary>
        public Int32[] CategoryIDs { get; set; }
        /// <summary></summary>
        public DateTime ModifiedDateFrom { get; set; }
        /// <summary></summary>
        public DateTime ModifiedDateTo { get; set; }
        /// <summary></summary>
        public String CreatedUID { get; set; }
        /// <summary></summary>
        public DateTime CreatedDateFrom { get; set; }
        /// <summary></summary>
        public DateTime CreatedDateTo { get; set; }
        /// <summary></summary>
        public DateTime UpdatedFrom { get; set; }
        /// <summary></summary>
        public DateTime UpdatedTo { get; set; }
        /// <summary></summary>
        public String UpdatedUID { get; set; }
        /// <summary></summary>
        public String ResponsibilityUID { get; set; }
        /// <summary></summary>
        public String NameLike { get; set; }
        /// <summary>Gets or sets the custom attributes to filter on.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> CustomAttributes { get; set; }

        public RiskSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:44: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Issues.RiskUpdate
namespace TeamDynamix.Api.Issues
{
    /// <summary>No documentation found.</summary>
    public class RiskUpdate
    {
        /// <summary>Gets or sets the risk ID.</summary>
        public Int32 RiskId { get; set; }
        /// <summary>Gets or sets the project ID.</summary>
        public Int32 ProjectId { get; set; }
        /// <summary>Gets or sets the status ID.</summary>
        public Int32 StatusID { get; set; }
        /// <summary>Gets or sets the email addresses to notify. This is an array of strings.</summary>
        public String[] Notify { get; set; }
        /// <summary>Gets or sets the comments.</summary>
        public String Comments { get; set; }
        /// <summary>Gets or sets the custom attributes.</summary>
        public IEnumerable<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets a value indicating whether this update is private.</summary>
        public Boolean IsPrivate { get; set; }

        public RiskUpdate() { }
    }
}

// Autogenerated 09/18/2018 12:54:45: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.JsonPatchOperation
namespace TeamDynamix.Api
{
    /// <summary>Describes a single operation to execute as part of a JSON patch.</summary>
    public class JsonPatchOperation
    {
        /// <summary>Gets or sets the name of the JSON patch operation being performed.</summary>
        public String op { get; set; }
        /// <summary>Gets or sets the JSON pointer to the field to update. This is required for all operations.</summary>
        public String path { get; set; }
        /// <summary>Gets or sets the JSON pointer to the source field. This is required for the copy and move operations.</summary>
        public String from { get; set; }
        /// <summary>Gets or sets the value to use for the operation. This is required for add and replace operations.</summary>
        public Object value { get; set; }

        public JsonPatchOperation() { }
    }
}

// Autogenerated 09/18/2018 12:54:45: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.KnowledgeBase.Article
namespace TeamDynamix.Api.KnowledgeBase
{
    /// <summary>A knowledge base article.</summary>
    public class Article
    {
        /// <summary>Gets or sets the ID of the article.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the article's category ID.</summary>
        public Int32 CategoryID { get; set; }
        /// <summary>Gets or sets the name of the article's category.</summary>
        public String CategoryName { get; set; }
        /// <summary>Gets or sets the subject.</summary>
        public String Subject { get; set; }
        /// <summary>Gets or sets the body.</summary>
        public String Body { get; set; }
        /// <summary>Gets or sets the summary.</summary>
        public String Summary { get; set; }
        /// <summary>Gets or sets the status.</summary>
        public TeamDynamix.Api.KnowledgeBase.ArticleStatus Status { get; set; }
        /// <summary>Gets or sets the custom attributes.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets the review date.</summary>
        public DateTime? ReviewDateUtc { get; set; }
        /// <summary>Gets or sets the order of the service among its siblings.</summary>
        public Double Order { get; set; }
        /// <summary>Gets or sets a value indicating whether the article is published.</summary>
        public Boolean IsPublished { get; set; }
        /// <summary>Gets or sets a value indicating whether the article is public.</summary>
        public Boolean IsPublic { get; set; }
        /// <summary>Gets or sets a value indicating whether groups assigned to the article are whitelisted or blacklisted from accessing the article in the Knowledge Base.</summary>
        public Boolean WhitelistGroups { get; set; }
        /// <summary>Gets or sets a value indicating whether permissions are inherited from the parent category.</summary>
        public Boolean InheritPermissions { get; set; }
        /// <summary>Gets or sets a value indicating whether the owner should be notified of any feedback.</summary>
        public Boolean NotifyOwner { get; set; }
        /// <summary>Gets or sets the ID of the current revision of the article.</summary>
        public Int32 RevisionID { get; set; }
        /// <summary>Gets or sets the current revision number of the article.</summary>
        public Int32 RevisionNumber { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the article.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the article.</summary>
        public String ModifiedFullName { get; set; }
        /// <summary>Gets or sets UID of the owner.</summary>
        public Guid OwnerUid { get; set; }
        /// <summary>Gets or sets the full name of the owner.</summary>
        public String OwnerFullName { get; set; }
        /// <summary>Gets or sets the tags associated with the article. Tags are not returned from the search endpoint.</summary>
        public String[] Tags { get; set; }
        /// <summary>Gets or sets the article attachments. Attachments are not returned from the search endpoint.</summary>
        public List<TeamDynamix.Api.Attachments.Attachment> Attachments { get; set; }
        /// <summary>Gets or sets the URI to retrieve the individual article.</summary>
        public String Uri { get; set; }

        public Article() { }
    }
}

// Autogenerated 09/18/2018 12:54:45: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.KnowledgeBase.ArticleCategory
namespace TeamDynamix.Api.KnowledgeBase
{
    /// <summary>A knowledge base category.</summary>
    public class ArticleCategory
    {
        /// <summary>Gets or sets the ID of the category.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the ID of the parent category.</summary>
        public Int32 ParentID { get; set; }
        /// <summary>Gets or sets the name of the parent category.</summary>
        public String ParentName { get; set; }
        /// <summary>Gets or sets the order of the category. If this is not provided, a value of 0 will be used.</summary>
        public Double Order { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets a value indicating whether the category is public.</summary>
        public Boolean IsPublic { get; set; }
        /// <summary>Gets or sets a value indicating whether groups assigned to the category are whitelisted or blacklisted from accessing the category in the Knowledge Base.</summary>
        public Boolean WhitelistGroups { get; set; }
        /// <summary>Gets or sets a value indicating whether permissions are inherited from the parent category.</summary>
        public Boolean InheritPermissions { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the article.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the article.</summary>
        public String ModifiedFullName { get; set; }
        /// <summary>Gets or sets the collection of subcategories directly belonging to this category.</summary>
        public List<TeamDynamix.Api.KnowledgeBase.ArticleCategory> Subcategories { get; set; }

        public ArticleCategory() { }
    }
}

// Autogenerated 09/18/2018 12:54:46: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.KnowledgeBase.ArticleSearch
namespace TeamDynamix.Api.KnowledgeBase
{
    /// <summary>A set of filtering options used for searching knowledge base articles.</summary>
    public class ArticleSearch
    {
        /// <summary>Gets or sets the status to filter on. Use None to perform no filtering.</summary>
        public TeamDynamix.Api.KnowledgeBase.ArticleStatus Status { get; set; }
        /// <summary>Gets or sets the custom attributes to filter on.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> CustomAttributes { get; set; }
        /// <summary>Gets or sets the search text to filter on.</summary>
        public String SearchText { get; set; }
        /// <summary>Gets or sets the category ID to filter on.</summary>
        public Int32? CategoryID { get; set; }
        /// <summary>Gets or sets the published status to filter on.</summary>
        public Boolean? IsPublished { get; set; }
        /// <summary>Gets or sets the public status to filter on.</summary>
        public Boolean? IsPublic { get; set; }
        /// <summary>Gets or sets the UID of the author to filter on.</summary>
        public Guid? AuthorUID { get; set; }
        /// <summary>Gets or sets the maximum number of results to return.</summary>
        public Int32? ReturnCount { get; set; }
        /// <summary>Gets or sets a value indicating whether to include article bodies.</summary>
        public Boolean IncludeArticleBodies { get; set; }

        public ArticleSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:46: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.KnowledgeBase.ArticleStatus
namespace TeamDynamix.Api.KnowledgeBase
{
    /// <summary>Describes the different article statuses.</summary>
    public enum ArticleStatus
    {
        /// <summary>A "none" status for filtering purposes. Should not be used in normal operations.</summary>
        None = 0,
        /// <summary>Used for articles that have not been submitted.</summary>
        NotSubmitted = 1,
        /// <summary>Used for articles that have been submitted.</summary>
        Submitted = 2,
        /// <summary>Used for articles that have been approved.</summary>
        Approved = 3,
        /// <summary>Used for articles that have been rejected.</summary>
        Rejected = 4,
        /// <summary>Used for articles that have been archived.</summary>
        Archived = 5
    }
}

// Autogenerated 09/18/2018 12:54:46: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Locations.Location
namespace TeamDynamix.Api.Locations
{
    /// <summary>A location.</summary>
    public class Location
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the external identifier for the location.</summary>
        public String ExternalID { get; set; }
        /// <summary>Gets or sets the active status.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the address.</summary>
        public String Address { get; set; }
        /// <summary>Gets or sets the city.</summary>
        public String City { get; set; }
        /// <summary>Gets or sets the state/province.</summary>
        public String State { get; set; }
        /// <summary>Gets or sets the postal code.</summary>
        public String PostalCode { get; set; }
        /// <summary>Gets or sets the country.</summary>
        public String Country { get; set; }
        /// <summary>Gets or sets a value indicating whether the location requires a room when specified for an asset.</summary>
        public Boolean IsRoomRequired { get; set; }
        /// <summary>Gets or sets the number of assets associated with this location.</summary>
        public Int32 AssetsCount { get; set; }
        /// <summary>Gets or sets the number of tickets associated with this location.</summary>
        public Int32 TicketsCount { get; set; }
        /// <summary>Gets or sets the number of rooms associated with this location.</summary>
        public Int32 RoomsCount { get; set; }
        /// <summary>Gets or sets the rooms associated with this location.</summary>
        public List<TeamDynamix.Api.Locations.LocationRoom> Rooms { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the location.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the location.</summary>
        public String ModifiedFullName { get; set; }
        /// <summary>Gets or sets the latitude of the location.</summary>
        public Decimal? Latitude { get; set; }
        /// <summary>Gets or sets the longitude of the location.</summary>
        public Decimal? Longitude { get; set; }

        public Location() { }
    }
}

// Autogenerated 09/18/2018 12:54:46: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Locations.LocationRoom
namespace TeamDynamix.Api.Locations
{
    /// <summary>A room at a location.</summary>
    public class LocationRoom
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the external identifier for the room.</summary>
        public String ExternalID { get; set; }
        /// <summary>Gets or sets the number of assets associated with this room.</summary>
        public Int32 AssetsCount { get; set; }
        /// <summary>Gets or sets the number of tickets associated with this room.</summary>
        public Int32 TicketsCount { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUID { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }

        public LocationRoom() { }
    }
}

// Autogenerated 09/18/2018 12:54:47: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Locations.LocationSearch
namespace TeamDynamix.Api.Locations
{
    /// <summary>A set of filtering options used for searching locations.</summary>
    public class LocationSearch
    {
        /// <summary>Gets or sets the search text to filter on.</summary>
        public String NameLike { get; set; }
        /// <summary>Gets or sets the active status to filter on.</summary>
        public Boolean? IsActive { get; set; }
        /// <summary>Gets or sets the "room required" status to filter on.</summary>
        public Boolean? IsRoomRequired { get; set; }
        /// <summary>Gets or sets the room ID to filter on, if any. If this value is set, only the location that contains this room will be returned.</summary>
        public Int32? RoomID { get; set; }
        /// <summary>Gets or sets a value indicating whether asset and ticket counts should be returned for each location.</summary>
        public Boolean ReturnItemCounts { get; set; }
        /// <summary>Gets or sets a value indicating whether rooms should be returned for each location.</summary>
        public Boolean ReturnRooms { get; set; }
        /// <summary>Gets or sets the maximum number of records to return.</summary>
        public Int32? MaxResults { get; set; }

        public LocationSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:47: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Plans.ApplicationIdentifier
namespace TeamDynamix.Api.Plans
{
    /// <summary>Contains information uniquely identifying an application that interacts with plan/task data.</summary>
    public class ApplicationIdentifier
    {
        /// <summary>Gets or sets the application's identifier.</summary>
        public String AppID { get; set; }

        public ApplicationIdentifier() { }
    }
}

// Autogenerated 09/18/2018 12:54:47: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Plans.Plan
namespace TeamDynamix.Api.Plans
{
    /// <summary>A plan in a project.</summary>
    public class Plan
    {
        /// <summary></summary>
        public Int32 TaskCount { get; set; }
        /// <summary></summary>
        public Int32 MyTaskCount { get; set; }
        /// <summary></summary>
        public Boolean IsCheckedOut { get; set; }
        /// <summary></summary>
        public DateTime CheckedOutDate { get; set; }
        /// <summary></summary>
        public String CheckedOutUID { get; set; }
        /// <summary></summary>
        public String CheckedOutFullName { get; set; }
        /// <summary></summary>
        public String CheckedOutAppID { get; set; }
        /// <summary></summary>
        public Boolean CanShiftForward { get; set; }
        /// <summary></summary>
        public Int32 CurrentVersion { get; set; }
        /// <summary>Gets or sets whether the plan is currently base.</summary>
        public Boolean IsBaselined { get; set; }
        /// <summary>Gets or sets the selected baseline's index (from 1-10).</summary>
        public Int32 SelectedBaselineId { get; set; }
        /// <summary></summary>
        public List<TeamDynamix.Api.Plans.Task> Tasks { get; set; }
        /// <summary>Gets or sets the current draft ID.</summary>
        public Int32 DraftID { get; set; }
        /// <summary>Gets or sets the ID of the item.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the title of the item.</summary>
        public String Title { get; set; }
        /// <summary>Gets or sets the description of the item.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the start date of the item.</summary>
        public DateTime StartDateUtc { get; set; }
        /// <summary>Gets or sets the end date of the item.</summary>
        public DateTime EndDateUtc { get; set; }
        /// <summary>Gets the duration of the task in absolute days.</summary>
        public Int32 Duration { get; set; }
        /// <summary>Set this field to a duration for the task. (Ex: 3 days, 4 weeks, 2 months)</summary>
        public String DurationString { get; set; }
        /// <summary>Gets or sets the date the item was completed.</summary>
        public DateTime CompletedDateUtc { get; set; }
        /// <summary>Gets or sets the estimated number of hours spent on the task once the task is completed.</summary>
        public Double EstimatedHoursAtCompletion { get; set; }
        /// <summary>Gets or sets the ID of the containing project.</summary>
        public Int32 ProjectID { get; set; }
        /// <summary>Gets or sets the encrypted ID of the containing project.</summary>
        public String ProjectIDEncrypted { get; set; }
        /// <summary>Gets or sets the name of the containing project.</summary>
        public String ProjectName { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public String CreatedUID { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the date/time the item was created.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the estimated hours of the item.</summary>
        public Double EstimatedHours { get; set; }
        /// <summary>Gets the baselined estimated hours.</summary>
        public Double EstimatedHoursBaseline { get; set; }
        /// <summary>Gets or sets the accrued hours on the item.</summary>
        public Double ActualHours { get; set; }
        /// <summary></summary>
        public Double PercentComplete { get; set; }
        /// <summary>Gets or sets the baselined start date.</summary>
        public DateTime StartDateBaselineUtc { get; set; }
        /// <summary>Gets or sets the baselined end date.</summary>
        public DateTime EndDateBaselineUtc { get; set; }
        /// <summary>Gets or sets the story points for a task.</summary>
        public Double StoryPoints { get; set; }
        /// <summary>Gets or sets the value points for a task.</summary>
        public Double ValuePoints { get; set; }
        /// <summary>Gets or sets the remaining hours.</summary>
        public Double RemainingHours { get; set; }
        /// <summary>Gets or sets the type of the associated plan.</summary>
        public Int32 PlanType { get; set; }
        /// <summary>Gets the variance, in days, between the end date and the end date of the currently-active baseline.</summary>
        public Int32 VarianceDays { get; set; }

        public Plan() { }
    }
}

// Autogenerated 09/18/2018 12:54:47: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Plans.PlanEdit
namespace TeamDynamix.Api.Plans
{
    /// <summary>No documentation found.</summary>
    public class PlanEdit
    {
        /// <summary></summary>
        public Int32 ProjectID { get; set; }
        /// <summary></summary>
        public Int32 PlanID { get; set; }
        /// <summary></summary>
        public Int32 DraftID { get; set; }
        /// <summary></summary>
        public String Title { get; set; }
        /// <summary></summary>
        public String Description { get; set; }

        public PlanEdit() { }
    }
}

// Autogenerated 09/18/2018 12:54:48: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Plans.PlanSearch
namespace TeamDynamix.Api.Plans
{
    /// <summary>A set of filtering options used for searching plans.</summary>
    public class PlanSearch
    {
        /// <summary>Gets or sets the search text to filter on. If this is set, this will sort the results by their text relevancy.</summary>
        public String NameLike { get; set; }
        /// <summary>Gets or sets the TID that will be filtered on with 0 representing all TIDs.</summary>
        public Int32 ProjectID { get; set; }
        /// <summary>Gets or sets a value indicating whether plans without tasks should be included.</summary>
        public Boolean IncludeEmpty { get; set; }

        public PlanSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:48: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Plans.RelationshipType
namespace TeamDynamix.Api.Plans
{
    /// <summary>Defines the various types of relationships between tasks.</summary>
    public enum RelationshipType
    {
        /// <summary></summary>
        EndToStart = 0,
        /// <summary></summary>
        EndToEnd = 1,
        /// <summary></summary>
        StartToEnd = 2,
        /// <summary></summary>
        StartToStart = 3
    }
}

// Autogenerated 09/18/2018 12:54:48: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Plans.Task
namespace TeamDynamix.Api.Plans
{
    /// <summary>A task in a plan.</summary>
    public class Task
    {
        /// <summary>Gets or sets the outline number of this task.</summary>
        public Int32 OutlineNumber { get; set; }
        /// <summary>Gets or sets the WBS (work breakdown structure) number.</summary>
        public String Wbs { get; set; }
        /// <summary>Gets or sets a value indicating whether this task is a parent task.</summary>
        public Boolean IsParent { get; set; }
        /// <summary>Gets or sets the indentation level of this task.</summary>
        public Int32 IndentLevel { get; set; }
        /// <summary>Gets or sets the ID of the task that is this task's parent or 0 if there is no parent.</summary>
        public Int32 ParentID { get; set; }
        /// <summary>Gets or sets the ID of the TeamDynamix.Api.Plans.Plan containing this task.</summary>
        public Int32 PlanID { get; set; }
        /// <summary>Gets or sets the name of the TeamDynamix.Api.Plans.Plan containing this task.</summary>
        public String PlanName { get; set; }
        /// <summary>Gets or sets a value indicating whether this task is flagged for further review.</summary>
        public Boolean IsFlagged { get; set; }
        /// <summary>Gets or sets the ID of the source ticket that was converted to this task, or -1 when no such conversion was performed.</summary>
        public Int32 TicketID { get; set; }
        /// <summary>Gets or sets the ID of the application containing the source ticket that was converted to this task, or -1 when no such conversion was performed.</summary>
        public Int32 TicketAppID { get; set; }
        /// <summary>Gets or sets the value for the custom column 'Field 1'.</summary>
        public String Field1 { get; set; }
        /// <summary>Gets or sets the value for the custom column 'Field 2'.</summary>
        public String Field2 { get; set; }
        /// <summary>Gets or sets the value for the custom column 'Field 3'.</summary>
        public String Field3 { get; set; }
        /// <summary>Gets or sets the value for the custom column 'Field 4'.</summary>
        public String Field4 { get; set; }
        /// <summary>Gets or sets the value for the custom column 'Field 5'.</summary>
        public String Field5 { get; set; }
        /// <summary>Gets or sets the value for the custom column 'Field 6'.</summary>
        public String Field6 { get; set; }
        /// <summary>Gets or sets the value for the custom column 'Field 7'.</summary>
        public String Field7 { get; set; }
        /// <summary>Gets or sets the value for the custom column 'Field 8'.</summary>
        public String Field8 { get; set; }
        /// <summary>Gets or sets the value for the custom column 'Field 9'.</summary>
        public String Field9 { get; set; }
        /// <summary>Gets or sets the value for the custom column 'Field 10'.</summary>
        public String Field10 { get; set; }
        /// <summary>Gets or sets a value indicating whether this task is a milestone.</summary>
        public Boolean IsMilestone { get; set; }
        /// <summary>Gets or sets a value indicating whether the current task is converted from a ticket.</summary>
        public Boolean IsConvertedFromTicket { get; set; }
        /// <summary>Gets a value indicating whether there are external relationships directly-involving this task (not any of its children).</summary>
        public Boolean HasExternalRelationships { get; set; }
        /// <summary>Gets or sets a value indicating whether the task is in violation of one or more of its external relationships.</summary>
        public Boolean IsExternalRelationshipViolated { get; set; }
        /// <summary>Gets or sets a value indicating whether this task can be shifted forward.</summary>
        public Boolean CanShiftForward { get; set; }
        /// <summary>Gets the earliest date to which the task can be shifted forward.</summary>
        public DateTime ShiftForwardDate { get; set; }
        /// <summary>Gets a value indicating whether any issues, regardless of status, are associated with this task.</summary>
        public Boolean HasIssues { get; set; }
        /// <summary>Gets a value indicating whether any file attachments are associated with this task.</summary>
        public Boolean HasAttachments { get; set; }
        /// <summary>Gets or sets the priority of the task. 0 = None, 1 = High, 2 = Medium / High, 3 = Medium, 4 = Medium / Low, 5 = Low</summary>
        public Int32 Priority { get; set; }
        /// <summary>Gets or sets a value indicating whether this task is a story.</summary>
        public Boolean IsStory { get; set; }
        /// <summary>Gets or sets the open issues count.</summary>
        public Int32 OpenIssuesCount { get; set; }
        /// <summary>Gets or sets the issues count.</summary>
        public Int32 IssuesCount { get; set; }
        /// <summary>Gets the relationships between predecessor tasks and this task. Do not use this property to set values. Use PredecessorsOutlineNumbersComplex i</summary>
        public TeamDynamix.Api.Plans.TaskRelationship[] Predecessors { get; set; }
        /// <summary>Gets or sets a comma-separated list of the outline numbers of the task's predecessors, including any non-default relationship type or lag/lead values.</summary>
        public String PredecessorsOutlineNumbersComplex { get; set; }
        /// <summary>Gets the resources assigned to this task.</summary>
        public TeamDynamix.Api.Plans.TaskResource[] Resources { get; set; }
        /// <summary>Gets a semicolon-separated list of the names/assignment percentages of the resources assigned to this task.</summary>
        public String ResourcesNamesAndPercents { get; set; }
        /// <summary>Gets or sets a value indicating whether this task is on the critical path.</summary>
        public Boolean IsCriticalPath { get; set; }
        /// <summary>Gets or sets the ID of the Custom Task Status.</summary>
        public Int32 StatusID { get; set; }
        /// <summary>Gets or sets the status of the task. This is a progression status (in progress, overdue, etc) instead of a custom user-defined status.</summary>
        public String Status { get; set; }
        /// <summary>Gets or sets the order in parent for this task. The order in parent is the index of this task within its parent task. If no parent task is present, order in parent determines the task's order in the overall root-level hierarchy.</summary>
        public Int32 OrderInParent { get; set; }
        /// <summary>Gets or sets the tags associated with the task.</summary>
        public String[] Tags { get; set; }
        /// <summary>Gets or sets the ID of the item.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the title of the item.</summary>
        public String Title { get; set; }
        /// <summary>Gets or sets the description of the item.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the start date of the item.</summary>
        public DateTime StartDateUtc { get; set; }
        /// <summary>Gets or sets the end date of the item.</summary>
        public DateTime EndDateUtc { get; set; }
        /// <summary>Gets the duration of the task in absolute days.</summary>
        public Int32 Duration { get; set; }
        /// <summary>Set this field to a duration for the task. (Ex: 3 days, 4 weeks, 2 months)</summary>
        public String DurationString { get; set; }
        /// <summary>Gets or sets the date the item was completed.</summary>
        public DateTime CompletedDateUtc { get; set; }
        /// <summary>Gets or sets the estimated number of hours spent on the task once the task is completed.</summary>
        public Double EstimatedHoursAtCompletion { get; set; }
        /// <summary>Gets or sets the ID of the containing project.</summary>
        public Int32 ProjectID { get; set; }
        /// <summary>Gets or sets the encrypted ID of the containing project.</summary>
        public String ProjectIDEncrypted { get; set; }
        /// <summary>Gets or sets the name of the containing project.</summary>
        public String ProjectName { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public String CreatedUID { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the date/time the item was created.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the estimated hours of the item.</summary>
        public Double EstimatedHours { get; set; }
        /// <summary>Gets the baselined estimated hours.</summary>
        public Double EstimatedHoursBaseline { get; set; }
        /// <summary>Gets or sets the accrued hours on the item.</summary>
        public Double ActualHours { get; set; }
        /// <summary></summary>
        public Double PercentComplete { get; set; }
        /// <summary>Gets or sets the baselined start date.</summary>
        public DateTime StartDateBaselineUtc { get; set; }
        /// <summary>Gets or sets the baselined end date.</summary>
        public DateTime EndDateBaselineUtc { get; set; }
        /// <summary>Gets or sets the story points for a task.</summary>
        public Double StoryPoints { get; set; }
        /// <summary>Gets or sets the value points for a task.</summary>
        public Double ValuePoints { get; set; }
        /// <summary>Gets or sets the remaining hours.</summary>
        public Double RemainingHours { get; set; }
        /// <summary>Gets or sets the type of the associated plan.</summary>
        public Int32 PlanType { get; set; }
        /// <summary>Gets the variance, in days, between the end date and the end date of the currently-active baseline.</summary>
        public Int32 VarianceDays { get; set; }

        public Task() { }
    }
}

// Autogenerated 09/18/2018 12:54:49: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Plans.TaskChanges
namespace TeamDynamix.Api.Plans
{
    /// <summary>Information for submitting changes to a task.</summary>
    public class TaskChanges
    {
        /// <summary>Gets or sets the application identifier used to identify the calling application to the API.</summary>
        public TeamDynamix.Api.Plans.ApplicationIdentifier AppId { get; set; }
        /// <summary>Gets or sets the task to change.</summary>
        public TeamDynamix.Api.Plans.Task Task { get; set; }

        public TaskChanges() { }
    }
}

// Autogenerated 09/18/2018 12:54:49: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Plans.TaskRelationship
namespace TeamDynamix.Api.Plans
{
    /// <summary>Defines a relationship between two tasks.</summary>
    public class TaskRelationship
    {
        /// <summary>Gets or sets the task ID of the predecessor task.</summary>
        public Int32 PredTaskID { get; set; }
        /// <summary>Gets or sets the task ID of the dependent task.</summary>
        public Int32 DepTaskID { get; set; }
        /// <summary>Gets or sets the lag in days between when the relationship completes and when the next task is allowed to start.</summary>
        public Int32 Lag { get; set; }
        /// <summary>Gets or sets the type of the relationship between the two tasks.</summary>
        public TeamDynamix.Api.Plans.RelationshipType RelationshipType { get; set; }

        public TaskRelationship() { }
    }
}

// Autogenerated 09/18/2018 12:54:49: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Plans.TaskResource
namespace TeamDynamix.Api.Plans
{
    /// <summary>A resource assigned to a task.</summary>
    public class TaskResource
    {
        /// <summary>Gets or sets the resource unique identifier.</summary>
        public String ResourceUID { get; set; }
        /// <summary>Gets or sets the full name of the resource.</summary>
        public String ResourceFullName { get; set; }
        /// <summary>Gets or sets the percent the resource is assigned to the task where 0 is 0 % and 100.0 is 100 %.</summary>
        public Double PercentAssignedWhole { get; set; }

        public TaskResource() { }
    }
}

// Autogenerated 09/18/2018 12:54:49: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Plans.TaskUpdate
namespace TeamDynamix.Api.Plans
{
    /// <summary>An update for a task.</summary>
    public class TaskUpdate
    {
        /// <summary>Gets or sets the identifier.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the ID of the containing project.</summary>
        public Int32 ProjectId { get; set; }
        /// <summary>Gets or sets the ID of the containing plan.</summary>
        public Int32 PlanId { get; set; }
        /// <summary>Gets or sets the ID of the task to update.</summary>
        public Int32 TaskId { get; set; }
        /// <summary>Gets or sets the people to notify.</summary>
        public String[] Notify { get; set; }
        /// <summary>Gets or sets the comments to include with the update.</summary>
        public String Comments { get; set; }
        /// <summary>Gets or sets the completed date of the task.</summary>
        public DateTime CompletedDate { get; set; }
        /// <summary>Gets or sets the ID of the time type to use when adding a time entry as part of the update.</summary>
        public Int32 TimeTypeId { get; set; }
        /// <summary>Gets or sets the worked hours of the time entry to add as part of the update.</summary>
        public Double HoursWorked { get; set; }
        /// <summary>Gets or sets the date that the specified hours were worked when adding time.</summary>
        public DateTime DateWorked { get; set; }
        /// <summary>Gets or sets the percent complete of the task, on a 0 to 100 scale.</summary>
        public Double PercentComplete { get; set; }
        /// <summary>Gets or sets the number of hours remaining on the task. This is only used if a project is set to update by remaining hours.</summary>
        public Double RemainingHours { get; set; }
        /// <summary>Gets or sets a value indicating whether or not the update creates a private feed entry.</summary>
        public Boolean IsPrivate { get; set; }

        public TaskUpdate() { }
    }
}

// Autogenerated 09/18/2018 12:54:50: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.PlanUpdates
namespace TeamDynamix.Api
{
    /// <summary>No documentation found.</summary>
    public class PlanUpdates
    {
        /// <summary>Summary-level information on the plan, suitable for use in a plan summary row</summary>
        public TeamDynamix.Api.Plans.Task Plan { get; set; }
        /// <summary>A list of tasks that have values that have changed</summary>
        public List<TeamDynamix.Api.Plans.Task> Tasks { get; set; }
        /// <summary>Whether or not the operation succeeded. If this is false, Message should be set. If ErrorID is greater than zero, this represents that an error occurred, otherwise this when this is false the application is assumed to have encountered an issue with the inputted values as described in Message.</summary>
        public Boolean Succeeded { get; set; }
        /// <summary>An ID of an exception that occurred on the server as a result of this operation. If this is set, Succeeded should be false, but Succeeded can be false without an ErrorID present. This is common for validation issues with invalid values coming in to an operation.</summary>
        public Int32 ErrorID { get; set; }
        /// <summary>A message indicating a validation or error message to display to the user when Succeeeded is set to false.</summary>
        public String Message { get; set; }

        public PlanUpdates() { }
    }
}

// Autogenerated 09/18/2018 12:54:50: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.PriorityFactors.Impact
namespace TeamDynamix.Api.PriorityFactors
{
    /// <summary>A ticket impact.</summary>
    public class Impact
    {
        /// <summary>Gets or sets the ID of the impact.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the impact name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the impact description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the order of the impact in a list.</summary>
        public Double Order { get; set; }
        /// <summary>Gets or sets a value indicating whether the impact is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether the impact should be used as a default.</summary>
        public Boolean IsDefault { get; set; }

        public Impact() { }
    }
}

// Autogenerated 09/18/2018 12:54:50: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.PriorityFactors.Priority
namespace TeamDynamix.Api.PriorityFactors
{
    /// <summary>A priority for a ticket or project.</summary>
    public class Priority
    {
        /// <summary>Gets or sets the ID of the priority.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the priority name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the priority description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the order of the priority in a list.</summary>
        public Double Order { get; set; }
        /// <summary>Gets or sets a value indicating whether the priority is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether the priority should be used as a default.</summary>
        public Boolean IsDefault { get; set; }

        public Priority() { }
    }
}

// Autogenerated 09/18/2018 12:54:50: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.PriorityFactors.Urgency
namespace TeamDynamix.Api.PriorityFactors
{
    /// <summary>A ticket urgency.</summary>
    public class Urgency
    {
        /// <summary>Gets or sets the ID of the urgency.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the urgency name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the urgency description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the order of the urgency in a list.</summary>
        public Double Order { get; set; }
        /// <summary>Gets or sets a value indicating whether the urgency is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether the urgency should be used as a default.</summary>
        public Boolean IsDefault { get; set; }

        public Urgency() { }
    }
}

// Autogenerated 09/18/2018 12:54:50: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.ProjectRequests.ProjectRequest
namespace TeamDynamix.Api.ProjectRequests
{
    /// <summary>A class for data transmission that contains information about a project request.</summary>
    public class ProjectRequest
    {
        /// <summary>The name of the project request.</summary>
        public String Name { get; set; }
        /// <summary>The start date of the project request.</summary>
        public DateTime StartDate { get; set; }
        /// <summary>The end date of the project request.</summary>
        public DateTime EndDate { get; set; }
        /// <summary>The account ID of the project request.</summary>
        public Int32 AccountID { get; set; }
        /// <summary>The type ID of the project request.</summary>
        public Int32 TypeID { get; set; }
        /// <summary>The service ID of the project request.</summary>
        public Int32 ServiceID { get; set; }
        /// <summary>The priority ID of the project request.</summary>
        public Int32 PriorityID { get; set; }
        /// <summary>The UID of the sponsor.</summary>
        public Guid? SponsorUID { get; set; }
        /// <summary>The description of the project request.</summary>
        public String Description { get; set; }
        /// <summary>The requirements of the project request.</summary>
        public String Requirements { get; set; }

        public ProjectRequest() { }
    }
}

// Autogenerated 09/18/2018 12:54:50: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Projects.CustomColumn
namespace TeamDynamix.Api.Projects
{
    /// <summary>Represents a project level custom column (Fields 1-10)</summary>
    public class CustomColumn
    {
        /// <summary>Gets or sets the field index (1-10)</summary>
        public Int32 Index { get; set; }
        /// <summary>Gets or sets the custom display name for the field.</summary>
        public String DisplayName { get; set; }

        public CustomColumn() { }
    }
}

// Autogenerated 09/18/2018 12:54:50: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Projects.HealthChoice
namespace TeamDynamix.Api.Projects
{
    /// <summary>Options for the health of a project. This represents the values which are seeded into the HealthChoices table in the database.</summary>
    public enum HealthChoice
    {
        /// <summary>There is no health.</summary>
        None = 0,
        /// <summary>The green health.</summary>
        Green = 1,
        /// <summary>The yellow health.</summary>
        Yellow = 2,
        /// <summary>The red health.</summary>
        Red = 3,
        /// <summary>The on hold health. This health is only used in the cases when the status of the project is on hold, because the other health choices imply the project is in process.</summary>
        OnHold = 4
    }
}

// Autogenerated 09/18/2018 12:54:52: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Projects.Project
namespace TeamDynamix.Api.Projects
{
    /// <summary>A single project.</summary>
    public class Project
    {
        /// <summary></summary>
        public Int32 ID { get; set; }
        /// <summary></summary>
        public String Name { get; set; }
        /// <summary></summary>
        public Boolean IsRead { get; set; }
        /// <summary></summary>
        public Double Budget { get; set; }
        /// <summary></summary>
        public Int32 AccountID { get; set; }
        /// <summary></summary>
        public String AccountName { get; set; }
        /// <summary></summary>
        public String SponsorEmail { get; set; }
        /// <summary></summary>
        public Guid SponsorUID { get; set; }
        /// <summary></summary>
        public String SponsorName { get; set; }
        /// <summary></summary>
        public DateTime CreatedDate { get; set; }
        /// <summary></summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary></summary>
        public Guid ModifiedUID { get; set; }
        /// <summary></summary>
        public String ModifiedFullName { get; set; }
        /// <summary></summary>
        public DateTime StatusModifiedDate { get; set; }
        /// <summary></summary>
        public String Description { get; set; }
        /// <summary></summary>
        public Double ExpensesBudget { get; set; }
        /// <summary></summary>
        public Double ExpensesBudgetUsed { get; set; }
        /// <summary></summary>
        public Double ActualHours { get; set; }
        /// <summary></summary>
        public Boolean AllowProjectTime { get; set; }
        /// <summary></summary>
        public Boolean ApproveTimeByReportsTo { get; set; }
        /// <summary></summary>
        public String BriefcasePath { get; set; }
        /// <summary></summary>
        public DateTime EndDateBaseline { get; set; }
        /// <summary></summary>
        public String Identifier { get; set; }
        /// <summary></summary>
        public Int32 PriorityID { get; set; }
        /// <summary></summary>
        public String PriorityName { get; set; }
        /// <summary></summary>
        public Boolean IsActive { get; set; }
        /// <summary></summary>
        public Double TimeBudget { get; set; }
        /// <summary></summary>
        public Double TimeBudgetUsed { get; set; }
        /// <summary></summary>
        public Int32 TypeCategoryID { get; set; }
        /// <summary></summary>
        public String TypeCategoryName { get; set; }
        /// <summary></summary>
        public Int32 TypeID { get; set; }
        /// <summary></summary>
        public String TypeName { get; set; }
        /// <summary></summary>
        public Boolean IsPrivate { get; set; }
        /// <summary>Gets or sets a value indicating whether this project is publicly viewable.</summary>
        public Boolean IsPublic { get; set; }
        /// <summary>Gets or sets a value indicating whether this project is published to authenticated users.</summary>
        public Boolean IsPublished { get; set; }
        /// <summary></summary>
        public Boolean IsTemplate { get; set; }
        /// <summary></summary>
        public Boolean IsRequest { get; set; }
        /// <summary></summary>
        public DateTime StartDateBaseline { get; set; }
        /// <summary></summary>
        public Int32 TemplateID { get; set; }
        /// <summary></summary>
        public Int32 PercentComplete { get; set; }
        /// <summary></summary>
        public DateTime MinScheduledDate { get; set; }
        /// <summary></summary>
        public DateTime MaxScheduledDate { get; set; }
        /// <summary></summary>
        public DateTime MinPendingScheduleDate { get; set; }
        /// <summary></summary>
        public DateTime MaxPendingScheduleDate { get; set; }
        /// <summary></summary>
        public Boolean UpdateStartEnd { get; set; }
        /// <summary></summary>
        public Boolean ScheduleHoursByPlan { get; set; }
        /// <summary>Gets or sets the allocation edit mode which governs how resources are scheduled by resource pool managers from the Resource Management Console.</summary>
        public TeamDynamix.Api.ResourceAllocationEditMode AllocationEditMode { get; set; }
        /// <summary>Gets or sets a value indicating whether the project's tasks should be updated with remaining hours instead of percent complete.</summary>
        public Boolean UseRemainingHours { get; set; }
        /// <summary>Gets or sets a value indicating whether the project manager should be alerted periodically when plan est. hours exceed project est. hours.</summary>
        public Boolean AlertOnEstimatedHoursExceeded { get; set; }
        /// <summary>Gets or sets a value indicating whether the project manager should be alerted periodically when plan assigned hours exceed project est. hours.</summary>
        public Boolean AlertOnAssignedHoursExceeded { get; set; }
        /// <summary></summary>
        public Guid Admin2UID { get; set; }
        /// <summary></summary>
        public String Admin2FullName { get; set; }
        /// <summary></summary>
        public String Admin2Email { get; set; }
        /// <summary></summary>
        public Int32 RequestWorkflowID { get; set; }
        /// <summary></summary>
        public Int32 ClassificationID { get; set; }
        /// <summary></summary>
        public String ClassificationName { get; set; }
        /// <summary></summary>
        public Boolean AddContact { get; set; }
        /// <summary></summary>
        public DateTime DateScored { get; set; }
        /// <summary></summary>
        public String AdminName { get; set; }
        /// <summary></summary>
        public Guid AdminUID { get; set; }
        /// <summary></summary>
        public String AdminEmail { get; set; }
        /// <summary></summary>
        public DateTime EndDateInitial { get; set; }
        /// <summary></summary>
        public Boolean EndDateInitialIsNull { get; set; }
        /// <summary></summary>
        public Double ExpensesBudgetInitial { get; set; }
        /// <summary></summary>
        public DateTime StartDateInitial { get; set; }
        /// <summary></summary>
        public Boolean StartDateInitialIsNull { get; set; }
        /// <summary></summary>
        public Double BudgetInitial { get; set; }
        /// <summary></summary>
        public Double TimeBudgetInitial { get; set; }
        /// <summary></summary>
        public String RequestStatus { get; set; }
        /// <summary></summary>
        public String Requirements { get; set; }
        /// <summary></summary>
        public String IntangibleBenefits { get; set; }
        /// <summary></summary>
        public Guid CreatedUID { get; set; }
        /// <summary></summary>
        public String CreatedFullName { get; set; }
        /// <summary></summary>
        public String CreatedEmail { get; set; }
        /// <summary></summary>
        public String StatusName { get; set; }
        /// <summary></summary>
        public Boolean ApplyMetrics { get; set; }
        /// <summary></summary>
        public String StatusComments { get; set; }
        /// <summary></summary>
        public Guid StatusModifiedByUID { get; set; }
        /// <summary></summary>
        public String StatusModifiedByFullName { get; set; }
        /// <summary></summary>
        public Double DeductAmount { get; set; }
        /// <summary></summary>
        public Double TimeAmount { get; set; }
        /// <summary></summary>
        public Double EstimatedHours { get; set; }
        /// <summary></summary>
        public Double EstimatedHoursInitial { get; set; }
        /// <summary>Gets the total scheduled hours from the schedules table.</summary>
        public Double ScheduledHours { get; set; }
        /// <summary>Gets the sum of the hours of all pending requests for this project.</summary>
        public Double PendingHours { get; set; }
        /// <summary></summary>
        public DateTime EndDate { get; set; }
        /// <summary></summary>
        public DateTime StartDate { get; set; }
        /// <summary></summary>
        public Int32 StatusID { get; set; }
        /// <summary>Gets or sets the health.</summary>
        public TeamDynamix.Api.Projects.HealthChoice Health { get; set; }
        /// <summary>Gets or sets the name of the health.</summary>
        public String HealthName { get; set; }
        /// <summary>Gets or sets the health description.</summary>
        public String HealthDescription { get; set; }
        /// <summary></summary>
        public String ReferenceType { get; set; }
        /// <summary></summary>
        public String ReferenceID { get; set; }
        /// <summary></summary>
        public String StatusDescription { get; set; }
        /// <summary></summary>
        public Double GoalsScore { get; set; }
        /// <summary></summary>
        public Double RisksScore { get; set; }
        /// <summary></summary>
        public Double ScorecardScore { get; set; }
        /// <summary></summary>
        public Double CompositeScore { get; set; }
        /// <summary></summary>
        public Double CompositeScorePct { get; set; }
        /// <summary></summary>
        public String InternalTypeID { get; set; }
        /// <summary>The number of portfolios the given project/request is on.</summary>
        public Int32 PortfoliosCount { get; set; }
        /// <summary>Gets or sets the custom attributes.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary></summary>
        public List<TeamDynamix.Api.Projects.CustomColumn> CustomColumns { get; set; }
        /// <summary>Gets or sets a property indicated the support for baselining functionality.</summary>
        public Boolean IsBaselineSupported { get; set; }
        /// <summary>Gets or sets a property indicated the support for resource assignment functionality.</summary>
        public Boolean IsResourceAssignmentSupported { get; set; }
        /// <summary>Gets or sets a property indicated the support for task details functionality.</summary>
        public Boolean IsTaskDetailSupported { get; set; }
        /// <summary>Gets or sets a property indicated the support for task update functionality.</summary>
        public Boolean IsTaskUpdateSupported { get; set; }
        /// <summary>Gets or sets a property indicated the support for time entry functionality.</summary>
        public Boolean IsTimeEntrySupported { get; set; }
        /// <summary>Gets or sets a property indicated the support for ticket to task functionality.</summary>
        public Boolean IsTicketToTaskConversionSuppoted { get; set; }
        /// <summary>Gets or sets a value indicating whether or not the project is open, active, and the user is assigned to it.</summary>
        public Boolean IsActiveOpenAndUserOnProject { get; set; }
        /// <summary>Gets or sets a value indicating whether or not the project supports backup and restore.</summary>
        public Boolean IsBackupSupported { get; set; }
        /// <summary>Gets or sets the ID of the associated service.</summary>
        public Int32 ServiceID { get; set; }
        /// <summary>Gets or sets the name of the associated service.</summary>
        public String ServiceName { get; set; }
        /// <summary>Gets or sets the ID of the associated service's category.</summary>
        public Int32 ServiceCategoryID { get; set; }
        /// <summary>Gets or sets the name of the associated service's category.</summary>
        public String ServiceCategoryName { get; set; }
        /// <summary>Gets the list of non-working days associated with the project. This does not include weekends.</summary>
        public List<DateTime> NonWorkingDays { get; set; }

        public Project() { }
    }
}

// Autogenerated 09/18/2018 12:54:53: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Projects.ProjectSearch
namespace TeamDynamix.Api.Projects
{
    /// <summary>A set of filtering options used for searching projects.</summary>
    public class ProjectSearch
    {
        /// <summary></summary>
        public String Name { get; set; }
        /// <summary></summary>
        public String NameLike { get; set; }
        /// <summary></summary>
        public Boolean IsGlobal { get; set; }
        /// <summary></summary>
        public Int32[] PriorityIDs { get; set; }
        /// <summary></summary>
        public Int32[] AccountIDs { get; set; }
        /// <summary></summary>
        public Int32[] TypeIDs { get; set; }
        /// <summary></summary>
        public Int32[] ClassificationIDs { get; set; }
        /// <summary></summary>
        public Int32[] RiskIDs { get; set; }
        /// <summary></summary>
        public Int32[] ProcessIDs { get; set; }
        /// <summary></summary>
        public Int32[] GoalIDs { get; set; }
        /// <summary></summary>
        public Int32[] SystemIDs { get; set; }
        /// <summary></summary>
        public Int32[] PortfolioIDs { get; set; }
        /// <summary></summary>
        public Double? RisksScoreFrom { get; set; }
        /// <summary></summary>
        public Double? RisksScoreTo { get; set; }
        /// <summary></summary>
        public Double? GoalsScoreFrom { get; set; }
        /// <summary></summary>
        public Double? GoalsScoreTo { get; set; }
        /// <summary></summary>
        public Double? ScorecardScoreFrom { get; set; }
        /// <summary></summary>
        public Double? ScorecardScoreTo { get; set; }
        /// <summary></summary>
        public Double? CompositeScoreFrom { get; set; }
        /// <summary></summary>
        public Double? CompositeScoreTo { get; set; }
        /// <summary></summary>
        public Double? CompositeScorePercentFrom { get; set; }
        /// <summary></summary>
        public Double? CompositeScorePercentTo { get; set; }
        /// <summary></summary>
        public DateTime? CreatedDateFrom { get; set; }
        /// <summary></summary>
        public DateTime? CreatedDateTo { get; set; }
        /// <summary></summary>
        public String StartsOperator { get; set; }
        /// <summary></summary>
        public DateTime? Starts { get; set; }
        /// <summary></summary>
        public String EndsOperator { get; set; }
        /// <summary></summary>
        public DateTime? Ends { get; set; }
        /// <summary></summary>
        public Double? EstimatedHoursFrom { get; set; }
        /// <summary></summary>
        public Double? EstimatedHoursTo { get; set; }
        /// <summary></summary>
        public String ManagerUID { get; set; }
        /// <summary></summary>
        public Int32[] ProjectIDs { get; set; }
        /// <summary></summary>
        public Int32[] ProjectIDsExclude { get; set; }
        /// <summary></summary>
        public Int32[] PortfolioIDsExclude { get; set; }
        /// <summary></summary>
        public String StatusLastUpdatedOperator { get; set; }
        /// <summary></summary>
        public DateTime? StatusLastUpdated { get; set; }
        /// <summary></summary>
        public Int32[] StatusIDs { get; set; }
        /// <summary></summary>
        public String BudgetOperator { get; set; }
        /// <summary></summary>
        public Double? Budget { get; set; }
        /// <summary></summary>
        public String PercentCompleteOperator { get; set; }
        /// <summary></summary>
        public Int32? PercentComplete { get; set; }
        /// <summary></summary>
        public Boolean? IsOpen { get; set; }
        /// <summary></summary>
        public Boolean? IsActive { get; set; }
        /// <summary></summary>
        public String SponsorName { get; set; }
        /// <summary></summary>
        public String SponsorEmail { get; set; }
        /// <summary></summary>
        public Guid SponsorUID { get; set; }
        /// <summary></summary>
        public String ReportsToName { get; set; }
        /// <summary></summary>
        public String ReportsToUID { get; set; }
        /// <summary></summary>
        public Boolean CascadeReportsToUID { get; set; }
        /// <summary></summary>
        public Int32[] FunctionalRoleIDs { get; set; }
        /// <summary></summary>
        public Boolean ShowManagedByPlan { get; set; }
        /// <summary></summary>
        public Boolean ShowManagedByProject { get; set; }
        /// <summary></summary>
        public Boolean ShowManagedBoth { get; set; }
        /// <summary></summary>
        public Int32[] SelectedFieldIDs { get; set; }
        /// <summary></summary>
        public Boolean? IsPrivate { get; set; }
        /// <summary></summary>
        public Boolean? HasTimeOff { get; set; }
        /// <summary></summary>
        public Boolean? HasPortfolio { get; set; }
        /// <summary></summary>
        public Boolean ShouldEnforceProjectMembership { get; set; }
        /// <summary>Gets or sets the custom attributes to filter on.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> CustomAttributes { get; set; }
        /// <summary>Gets or sets a value indicating whether this project is public. This is null by default and can be set to true / false to filter.</summary>
        public Boolean? IsPublic { get; set; }
        /// <summary>Gets or sets a value indicating whether this project is published. This is null by default and can be set to true / false to filter.</summary>
        public Boolean? IsPublished { get; set; }

        public ProjectSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:53: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Projects.Resource
namespace TeamDynamix.Api.Projects
{
    /// <summary>A resource associated with a project</summary>
    public class Resource
    {
        /// <summary>Gets or sets the user ID of the resource.</summary>
        public Guid UID { get; set; }
        /// <summary>Gets or sets the full name of the resource.</summary>
        public String FullName { get; set; }
        /// <summary>Gets or sets the first name of the resource.</summary>
        public String FirstName { get; set; }
        /// <summary>Gets or sets the last name of the resource.</summary>
        public String LastName { get; set; }
        /// <summary>Gets or sets the reference identifier of the resource.</summary>
        public Int32 ReferenceID { get; set; }
        /// <summary>Gets or sets the profile image file name for the resource.</summary>
        public String ProfileImageFileName { get; set; }

        public Resource() { }
    }
}

// Autogenerated 09/18/2018 12:54:53: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Reporting.AggregateFunction
namespace TeamDynamix.Api.Reporting
{
    /// <summary>Describes the different aggregate functions that can be applied to a selected report column.</summary>
    public enum AggregateFunction
    {
        /// <summary>Indicates that no aggregation should be performed.</summary>
        None = 0,
        /// <summary>Indicates that an average of referenced column values should be calculated.</summary>
        Average = 1,
        /// <summary>Indicates that a count of referenced column values should be calculated.</summary>
        Count = 2,
        /// <summary>Indicates that the maximum referenced column value should be calculated.</summary>
        Maximum = 3,
        /// <summary>Indicates that the minimum referenced column value should be calculated.</summary>
        Minimum = 4,
        /// <summary>Indicates that a total of referenced column values should be calculated.</summary>
        Sum = 5
    }
}

// Autogenerated 09/18/2018 12:54:53: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Reporting.ChartSetting
namespace TeamDynamix.Api.Reporting
{
    /// <summary>Describes a setting for a report chart.</summary>
    public class ChartSetting
    {
        /// <summary>Gets or sets the axis represented by this setting.</summary>
        public String Axis { get; set; }
        /// <summary>Gets or sets the label describing the column used for the setting.</summary>
        public String ColumnLabel { get; set; }
        /// <summary>Gets or sets the name of the column used for the setting.</summary>
        public String ColumnName { get; set; }

        public ChartSetting() { }
    }
}

// Autogenerated 09/18/2018 12:54:54: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Reporting.ColumnDataType
namespace TeamDynamix.Api.Reporting
{
    /// <summary>Describes the different types of data that a column can contain.</summary>
    public enum ColumnDataType
    {
        /// <summary>Indicates that the column's values are of no specific type.</summary>
        GenericData = 0,
        /// <summary>Indicates that the column's values are strings.</summary>
        String = 1,
        /// <summary>Indicates that the column's values are whole numbers.</summary>
        Integer = 2,
        /// <summary>Indicates that the column's values are decimal numbers with potentially a fractional component.</summary>
        Decimal = 3,
        /// <summary>Indicates that the column's values are currency values with potentially a fractional component.</summary>
        Currency = 4,
        /// <summary>Indicates that the column's values are decimal percentage values (where 1.0 represents 100%).</summary>
        Percentage = 5,
        /// <summary>Indicates that the column's values are date-only values.</summary>
        Date = 6,
        /// <summary>Indicates that the column's values are date and time values.</summary>
        DateAndTime = 7,
        /// <summary>Indicates that the column's values are true/false Boolean values.</summary>
        Boolean = 8,
        /// <summary>Indicates that the column's values are timespans represented as a number of hours.</summary>
        TimeSpan = 9,
        /// <summary>Indicates that the column's values are names of project health choices.</summary>
        ProjectHealth = 10,
        /// <summary>Indicates that the column's values are sanitized HTML strings.</summary>
        Html = 11
    }
}

// Autogenerated 09/18/2018 12:54:54: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Reporting.ComponentFunction
namespace TeamDynamix.Api.Reporting
{
    /// <summary>Describes the different component extraction functions that can be applied to a selected report column.</summary>
    public enum ComponentFunction
    {
        /// <summary>Indicates that no component function should be applied.</summary>
        None = 0,
        /// <summary>Indicates that the year should be extracted from a date/time value.</summary>
        Year = 1,
        /// <summary>Indicates that the month and year should be extracted from a date/time value.</summary>
        MonthYear = 2,
        /// <summary>Indicates that the week and year should be extracted from a date/time value.</summary>
        WeekYear = 3
    }
}

// Autogenerated 09/18/2018 12:54:54: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Reporting.DisplayColumn
namespace TeamDynamix.Api.Reporting
{
    /// <summary>Describes a column selected for display in a report.</summary>
    public class DisplayColumn
    {
        /// <summary>Gets or sets the text of the column header.</summary>
        public String HeaderText { get; set; }
        /// <summary>Gets or sets the name of the column that is selected back.</summary>
        public String ColumnName { get; set; }
        /// <summary>Gets or sets the type of the data selected for the column.</summary>
        public TeamDynamix.Api.Reporting.ColumnDataType DataType { get; set; }
        /// <summary>Gets or sets the full expression for sorting (including direction), or null if the column does not support sorting.</summary>
        public String SortColumnExpression { get; set; }
        /// <summary>Gets or sets the name of the column used to sort, or null if the column does not support sorting.</summary>
        public String SortColumnName { get; set; }
        /// <summary>Gets or sets the type of data in the column used to sort.</summary>
        public TeamDynamix.Api.Reporting.ColumnDataType SortDataType { get; set; }
        /// <summary>Gets or sets the aggregate function being applied to calculate this column.</summary>
        public TeamDynamix.Api.Reporting.AggregateFunction Aggregate { get; set; }
        /// <summary>Gets or sets the component function being applied to this column.</summary>
        public TeamDynamix.Api.Reporting.ComponentFunction Component { get; set; }
        /// <summary>Gets or sets the expression used to calculate the column's footer.</summary>
        public String FooterExpression { get; set; }

        public DisplayColumn() { }
    }
}

// Autogenerated 09/18/2018 12:54:54: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Reporting.OrderByColumn
namespace TeamDynamix.Api.Reporting
{
    /// <summary>Describes a column used for sorting in a report.</summary>
    public class OrderByColumn
    {
        /// <summary>Gets or sets the label describing the column used to sort.</summary>
        public String ColumnLabel { get; set; }
        /// <summary>Gets or sets the name of the column used to sort.</summary>
        public String ColumnName { get; set; }
        /// <summary>Gets or sets a value indicating whether this column uses ascending or descending order.</summary>
        public Boolean IsAscending { get; set; }

        public OrderByColumn() { }
    }
}

// Autogenerated 09/18/2018 12:54:54: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Reporting.Report
namespace TeamDynamix.Api.Reporting
{
    /// <summary>Contains information about a Report Builder report and optionally its data.</summary>
    public class Report
    {
        /// <summary>Gets or sets the report description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the maximum number of results that can be returned by the report.</summary>
        public Int32 MaxResults { get; set; }
        /// <summary>Gets or sets the columns displayed for the report.</summary>
        public List<TeamDynamix.Api.Reporting.DisplayColumn> DisplayedColumns { get; set; }
        /// <summary>Gets or sets the columns used to sort the rows in the report.</summary>
        public List<TeamDynamix.Api.Reporting.OrderByColumn> SortOrder { get; set; }
        /// <summary>Gets or sets the type of the chart/graph that is configured for the report.</summary>
        public String ChartType { get; set; }
        /// <summary>Gets or sets the chart settings for the report.</summary>
        public List<TeamDynamix.Api.Reporting.ChartSetting> ChartSettings { get; set; }
        /// <summary>Gets or sets the rows of data retrieved for the report, or null if report data is not being retrieved.</summary>
        public List<Dictionary<String, Object>> DataRows { get; set; }
        /// <summary>Gets or sets the ID of the report.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the name of the report.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the date/time the report was created.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the name of the associated system application.</summary>
        public String SystemAppName { get; set; }
        /// <summary>Gets or sets the ID of the containing platform application.</summary>
        public Int32 PlatformAppID { get; set; }
        /// <summary>Gets or sets the name of the containing platform application.</summary>
        public String PlatformAppName { get; set; }
        /// <summary>Gets or sets the ID of the associated report source.</summary>
        public Int32 ReportSourceID { get; set; }
        /// <summary>Gets or sets the name of the associated report source.</summary>
        public String ReportSourceName { get; set; }
        /// <summary>Gets or sets the URI to retrieve the individual report.</summary>
        public String Uri { get; set; }

        public Report() { }
    }
}

// Autogenerated 09/18/2018 12:54:55: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Reporting.ReportInfo
namespace TeamDynamix.Api.Reporting
{
    /// <summary>Contains summary information about a Report Builder report.</summary>
    public class ReportInfo
    {
        /// <summary>Gets or sets the ID of the report.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the name of the report.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the date/time the report was created.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the name of the associated system application.</summary>
        public String SystemAppName { get; set; }
        /// <summary>Gets or sets the ID of the containing platform application.</summary>
        public Int32 PlatformAppID { get; set; }
        /// <summary>Gets or sets the name of the containing platform application.</summary>
        public String PlatformAppName { get; set; }
        /// <summary>Gets or sets the ID of the associated report source.</summary>
        public Int32 ReportSourceID { get; set; }
        /// <summary>Gets or sets the name of the associated report source.</summary>
        public String ReportSourceName { get; set; }
        /// <summary>Gets or sets the URI to retrieve the individual report.</summary>
        public String Uri { get; set; }

        public ReportInfo() { }
    }
}

// Autogenerated 09/18/2018 12:54:55: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Reporting.ReportSearch
namespace TeamDynamix.Api.Reporting
{
    /// <summary>A set of filtering options used for searching reports.</summary>
    public class ReportSearch
    {
        /// <summary>Gets or sets the UID of the owner to filter on. If specified, will only return reports owned by this user.</summary>
        public Guid? OwnerUid { get; set; }
        /// <summary>Gets or sets the search text to filter on. This will filter on the name of each report.</summary>
        public String SearchText { get; set; }
        /// <summary>Gets or sets the ID of the platform application to filter on. If specified, will only include reports belonging to this application.</summary>
        public Int32? ForAppID { get; set; }
        /// <summary>Gets or sets the name of the system application to filter on. If specified, will only include reports belonging to this application.</summary>
        public String ForApplicationName { get; set; }
        /// <summary>Gets or sets the ID of the report source to filter on. If specified, will only include reports belonging to this report source.</summary>
        public Int32? ReportSourceID { get; set; }

        public ReportSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:55: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.ResourceAllocationEditMode
namespace TeamDynamix.Api
{
    /// <summary>Describes the different modes of editing resource allocations</summary>
    public enum ResourceAllocationEditMode
    {
        /// <summary>Resource managers can request changes to resources in their resource pools but project mangers will need to approve the assignment.</summary>
        AllowRequest = 1,
        /// <summary>Resource managers will be able to direct edit and add resource assignments for resources in their resource pools.</summary>
        AllowDirectEdit = 2,
        /// <summary>Resource pool managers will not be able to make edits or additions to resources on the project.</summary>
        DoNotAllowEdit = 3
    }
}

// Autogenerated 09/18/2018 12:54:55: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.ResourceItem
namespace TeamDynamix.Api
{
    /// <summary>A single person, group, or account/department.</summary>
    public class ResourceItem
    {
        /// <summary>Gets or sets the role this person or group has on the associated item.</summary>
        public String ItemRole { get; set; }
        /// <summary>Gets or sets the name of this person or group.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the initials to be displayed if no profile image is specified for the item.</summary>
        public String Initials { get; set; }
        /// <summary>Gets or sets the value of the item.</summary>
        public String Value { get; set; }
        /// <summary>Gets or sets the reference value.</summary>
        public Int32 RefValue { get; set; }
        /// <summary>Gets or sets the profile image file name.</summary>
        public String ProfileImageFileName { get; set; }

        public ResourceItem() { }
    }
}

// Autogenerated 09/18/2018 12:54:55: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Roles.FunctionalRole
namespace TeamDynamix.Api.Roles
{
    /// <summary>A functional role for any number of users in an organization.</summary>
    public class FunctionalRole
    {
        /// <summary>Gets or sets the ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the standard rate.</summary>
        public Double StandardRate { get; set; }
        /// <summary>Gets or sets the cost rate.</summary>
        public Double CostRate { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the comments.</summary>
        public String Comments { get; set; }
        /// <summary>Gets or sets the number of users associated with the role. This will be -1 if this total has not been loaded.</summary>
        public Int32 UsersCount { get; set; }
        /// <summary>Gets or sets the number of requests associated with the role. This will be -1 if this total has not been loaded.</summary>
        public Int32 RequestsCount { get; set; }
        /// <summary>Gets or sets the number of projects associated with the role. This will be -1 if this total has not been loaded.</summary>
        public Int32 ProjectsCount { get; set; }
        /// <summary>Gets or sets the number of opportunities associated with the role. This will be -1 if this total has not been loaded.</summary>
        public Int32 OpportunitiesCount { get; set; }
        /// <summary>Gets or sets the number of resource requests associated with the role. This will be -1 if this total has not been loaded.</summary>
        public Int32 ResourceRequestsCount { get; set; }

        public FunctionalRole() { }
    }
}

// Autogenerated 09/18/2018 12:54:55: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Roles.FunctionalRoleSearch
namespace TeamDynamix.Api.Roles
{
    /// <summary>A set of filtering options used for searching functional roles.</summary>
    public class FunctionalRoleSearch
    {
        /// <summary>Gets or sets the functional role name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the maximum results to return. Leave this value 0 to return all items found.</summary>
        public Int32 MaxResults { get; set; }
        /// <summary>Gets or sets a value indicating whether the counts of associated items should be returned. Note: This currently only affects standard functional role selections, as Admin selections will always include item counts.</summary>
        public Boolean ReturnItemCounts { get; set; }

        public FunctionalRoleSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:55: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Roles.LicenseTypes
namespace TeamDynamix.Api.Roles
{
    /// <summary>Describes the different types of licenses that are used to configure security roles and audit license compliance.</summary>
    public enum LicenseTypes
    {
        /// <summary></summary>
        None = 0,
        /// <summary></summary>
        Enterprise = 1,
        /// <summary></summary>
        ProjectManager = 2,
        /// <summary></summary>
        Technician = 3,
        /// <summary></summary>
        TeamMember = 4,
        /// <summary></summary>
        StudentTechnician = 5,
        /// <summary></summary>
        Client = 6,
        /// <summary></summary>
        ClientWithReporting = 7,
        /// <summary></summary>
        ProjectManagerWithReporting = 8,
        /// <summary></summary>
        TechnicianWithReporting = 9,
        /// <summary></summary>
        TeamMemberWithReporting = 10
    }
}

// Autogenerated 09/18/2018 12:54:56: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Roles.Permission
namespace TeamDynamix.Api.Roles
{
    /// <summary>A permission that can be granted to a security role.</summary>
    public class Permission
    {
        /// <summary>Gets or sets the ID of the permission.</summary>
        public String ID { get; set; }
        /// <summary>Gets or sets the short name for the permission.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the full description for the permission.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the ID of the containing section.</summary>
        public Int32 SectionID { get; set; }
        /// <summary>Gets or sets the name of the containing section.</summary>
        public String SectionName { get; set; }

        public Permission() { }
    }
}

// Autogenerated 09/18/2018 12:54:56: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Roles.SecurityRole
namespace TeamDynamix.Api.Roles
{
    /// <summary>A security role for any number of users. Security roles are essentially a license type and a set of permissions that can be granted to users.</summary>
    public class SecurityRole
    {
        /// <summary>Gets or sets the ID.</summary>
        public Guid ID { get; set; }
        /// <summary>Gets or sets the name of the security role.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the number of users who have the security role. This will be -1 if this total has not been loaded.</summary>
        public Int32 UserCount { get; set; }
        /// <summary>Gets or sets the ID of the associated application, or 0 if this is a top-level security role.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the permissions granted to users with this security role. Each value refers to the ID of a permission.</summary>
        public IEnumerable<String> Permissions { get; set; }
        /// <summary>Gets or sets the license type of the security role.</summary>
        public TeamDynamix.Api.Roles.LicenseTypes LicenseType { get; set; }
        /// <summary>Gets or sets the name of the license type of the security role.</summary>
        public String LicenseTypeName { get; set; }

        public SecurityRole() { }
    }
}

// Autogenerated 09/18/2018 12:54:56: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Roles.SecurityRoleSearch
namespace TeamDynamix.Api.Roles
{
    /// <summary>A set of filtering options used for searching functional roles.</summary>
    public class SecurityRoleSearch
    {
        /// <summary>Gets or sets the security role name.</summary>
        public String NameLike { get; set; }
        /// <summary>Gets or sets the application ID. Providing a non-zero value will search for application-specific security roles, while a value of 0 will search for global security roles.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the license type ID.</summary>
        public Int32? LicenseTypeID { get; set; }

        public SecurityRoleSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:56: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Roles.UserFunctionalRole
namespace TeamDynamix.Api.Roles
{
    /// <summary>A user functional role.</summary>
    public class UserFunctionalRole
    {
        /// <summary>The ID of the user functional role.</summary>
        public Int32 ID { get; set; }
        /// <summary>The ID of the functional role.</summary>
        public Int32 FunctionalRoleID { get; set; }
        /// <summary>The ID of the user in this role.</summary>
        public Guid UID { get; set; }
        /// <summary>The name of the functional role.</summary>
        public String FunctionalRoleName { get; set; }
        /// <summary>The standard bill rate for the functional role.</summary>
        public Double StandardRate { get; set; }
        /// <summary>The functional role's cost rate.</summary>
        public Double CostRate { get; set; }
        /// <summary>The date the user was added to this functional role.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>The functional role comments.</summary>
        public String Comments { get; set; }
        /// <summary>Indicates whether this is the user's primary functional role.</summary>
        public Boolean IsPrimary { get; set; }

        public UserFunctionalRole() { }
    }
}

// Autogenerated 09/18/2018 12:54:56: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Schedules.ResourcePool
namespace TeamDynamix.Api.Schedules
{
    /// <summary>A resource pool which users for an organization can belong to for the purposes of assignment to projects.</summary>
    public class ResourcePool
    {
        /// <summary>Gets or sets the resource pool ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the resource pool name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the date/time the resource pool was created.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the date/time the resource pool was last modified.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets a value indicating whether the resource pool is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether an email notification will be delivered to the manager when a resource is assigned.</summary>
        public Boolean NotifyOnAssignment { get; set; }
        /// <summary>Gets or sets a value indicating whether the resource pool requires approval.</summary>
        public Boolean RequiresApproval { get; set; }
        /// <summary>Gets or sets the full name of the resource pool manager.</summary>
        public String ManagerFullName { get; set; }
        /// <summary>Gets or sets the UID of the resource pool manager.</summary>
        public Guid ManagerUID { get; set; }
        /// <summary>Gets or sets the number of resources in the resource pool. This will be -1 if this total has not been loaded.</summary>
        public Int32 ResourceCount { get; set; }

        public ResourcePool() { }
    }
}

// Autogenerated 09/18/2018 12:54:56: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Schedules.ResourcePoolSearch
namespace TeamDynamix.Api.Schedules
{
    /// <summary>A set of filtering options used for searching resource pools.</summary>
    public class ResourcePoolSearch
    {
        /// <summary>Gets or sets the resource pool name to filter on.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the UID of the resource pool manager to filter on.</summary>
        public Guid ManagerUID { get; set; }
        /// <summary>Gets or sets the maximum results to return. Leave this value 0 to return all items found.</summary>
        public Int32 MaxResults { get; set; }
        /// <summary>Gets or sets the active status to filter on.</summary>
        public Boolean? IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether resource counts should be retrieved for each pool. Defaults to false.</summary>
        public Boolean ReturnItemCounts { get; set; }

        public ResourcePoolSearch() { }
    }
}

// Autogenerated 09/18/2018 12:54:57: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.ServiceCatalog.RequestComponent
namespace TeamDynamix.Api.ServiceCatalog
{
    /// <summary>Describes the different types of requests that can be made from a service.</summary>
    public enum RequestComponent
    {
        /// <summary>Indicates that a service is not tied to any particular kind of request.</summary>
        None = 0,
        /// <summary>Indicates that a service is tied to some type of project request.</summary>
        Project = 1,
        /// <summary>Indicates that a service is tied to an external request available at a custom URL.</summary>
        Link = 4,
        /// <summary>Indicates that a service is tied to some sort of ticket request.</summary>
        Ticket = 9
    }
}

// Autogenerated 09/18/2018 12:54:57: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.ServiceCatalog.Service
namespace TeamDynamix.Api.ServiceCatalog
{
    /// <summary>A service in the service catalog.</summary>
    public class Service
    {
        /// <summary>Gets or sets the service ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the service name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the service's short description, which is used when displaying the service in a list.</summary>
        public String ShortDescription { get; set; }
        /// <summary>Gets or sets the service's long description, which is used when viewing the specific service. This can contain HTML.</summary>
        public String LongDescription { get; set; }
        /// <summary>Gets or sets the ID of the containing category.</summary>
        public Int32 CategoryID { get; set; }
        /// <summary>Gets or sets the name of the containing category.</summary>
        public String CategoryName { get; set; }
        /// <summary>Gets or sets the full text of the category hierarchy.</summary>
        public String FullCategoryText { get; set; }
        /// <summary>Gets the composite name of the service, which includes the name of the immediate parent category.</summary>
        public String CompositeName { get; set; }
        /// <summary>Gets or sets the order of the service among its siblings.</summary>
        public Double Order { get; set; }
        /// <summary>Gets or sets a value indicating whether the service is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether the service is public; that is, if it is visible to unauthenticated users.</summary>
        public Boolean IsPublic { get; set; }
        /// <summary>Gets or sets the UID of the managing person.</summary>
        public Guid ManagerUid { get; set; }
        /// <summary>Gets or sets the full name of the managing person.</summary>
        public String ManagerFullName { get; set; }
        /// <summary>Gets or sets the ID of the managing group.</summary>
        public Int32 ManagingGroupID { get; set; }
        /// <summary>Gets or sets the name of the managing group.</summary>
        public String ManagingGroupName { get; set; }
        /// <summary>Gets or sets the custom text used for the "Request This" button.</summary>
        public String RequestText { get; set; }
        /// <summary>Gets or sets the custom request URL configured for this service. When this is used, the TeamDynamix.Api.ServiceCatalog.Service.RequestTypeComponent should be TeamDynamix.Api.ServiceCatalog.RequestComponent.Link.</summary>
        public String RequestUrl { get; set; }
        /// <summary>Gets or sets the ID of the destination application for any generated requests.</summary>
        public Int32 RequestApplicationID { get; set; }
        /// <summary>Gets or sets the name of the destination application for any generated requests.</summary>
        public String RequestApplicationName { get; set; }
        /// <summary>Gets or sets the active status of the destination application for any generated requests.</summary>
        public Boolean RequestApplicationIsActive { get; set; }
        /// <summary>Gets or sets the ID of the associated request type.</summary>
        public Int32 RequestTypeID { get; set; }
        /// <summary>Gets or sets the name of the associated request type.</summary>
        public String RequestTypeName { get; set; }
        /// <summary>Gets or sets a value indicating whether the associated request type is active.</summary>
        public Boolean RequestTypeIsActive { get; set; }
        /// <summary>Gets or sets the component of the associated request type.</summary>
        public TeamDynamix.Api.ServiceCatalog.RequestComponent RequestTypeComponent { get; set; }
        /// <summary>Gets or sets the ID of the associated request type's containing category.</summary>
        public Int32 RequestTypeCategoryID { get; set; }
        /// <summary>Gets or sets the name of the associated request type's containing category.</summary>
        public String RequestTypeCategoryName { get; set; }
        /// <summary>Gets or sets the ID of the associated maintenance window.</summary>
        public Int32 MaintenanceScheduleID { get; set; }
        /// <summary>Gets or sets the name of the associated maintenance window.</summary>
        public String MaintenanceScheduleName { get; set; }
        /// <summary>Gets or sets the ID of the associated configuration item record.</summary>
        public Int32 ConfigurationItemID { get; set; }
        /// <summary>Gets or sets the service attachments.</summary>
        public List<TeamDynamix.Api.Attachments.Attachment> Attachments { get; set; }
        /// <summary>Gets or sets the URI to retrieve the individual service.</summary>
        public String Uri { get; set; }

        public Service() { }
    }
}

// Autogenerated 09/18/2018 12:54:57: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Statuses.StatusClass
namespace TeamDynamix.Api.Statuses
{
    /// <summary>Describes the different classes of statuses.</summary>
    public enum StatusClass
    {
        /// <summary>Used for when a status class for a status could not be determined. Should not be used in normal operations.</summary>
        None = 0,
        /// <summary>Used for new statuses.</summary>
        New = 1,
        /// <summary>Used for statuses that are somewhere in the pipeline, but have not yet been completed.</summary>
        InProcess = 2,
        /// <summary>Used for statuses that indicate completion such as "Closed" or "Closed and Approved".</summary>
        Completed = 3,
        /// <summary>Used for items that are cancelled.</summary>
        Cancelled = 4,
        /// <summary>Used for items that are on hold.</summary>
        OnHold = 5,
        /// <summary>Used for items that have been requested and not yet assigned a status.</summary>
        Requested = 6
    }
}

// Autogenerated 09/18/2018 12:54:57: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.ConflictType
namespace TeamDynamix.Api.Tickets
{
    /// <summary>Describes the different types of conflicts that can be detected for a scheduled maintenance activity for a CI.</summary>
    public enum ConflictType
    {
        /// <summary>Indicates that no conflicts were detected.</summary>
        None = 0,
        /// <summary>Indicates that an activity takes place outside of the CI's maintenance window.</summary>
        OutsideMaintenanceWindow = 1,
        /// <summary>Indicates that an activity takes place during a blackout window.</summary>
        DuringBlackoutWindow = 2,
        /// <summary>Indicates that an activity conflicts with a pre-existing activity scheduled for the CI.</summary>
        ExistingActivity = 4,
        /// <summary>Indicates that an activity takes place outside the maintenance window of one or more of the CI's operational children.</summary>
        OutsideChildMaintenanceWindow = 8,
        /// <summary>Indicates that an activity conflicts with a pre-existing activity on one of the CI's operational children.</summary>
        ExistingChildActivity = 16,
        /// <summary>Indicates that an activity conflicts with a pre-existing activity on one of the CI's operational parents.</summary>
        ExistingParentActivity = 32
    }
}

// Autogenerated 09/18/2018 12:54:58: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.Ticket
namespace TeamDynamix.Api.Tickets
{
    /// <summary>A ticket.</summary>
    public class Ticket
    {
        /// <summary>Gets or sets the ID of the ticket.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the ID of the parent ticket.</summary>
        public Int32 ParentID { get; set; }
        /// <summary>Gets or sets the title of the parent ticket.</summary>
        public String ParentTitle { get; set; }
        /// <summary>Gets or sets the classification of the parent ticket.</summary>
        public TeamDynamix.Api.Tickets.TicketClass ParentClass { get; set; }
        /// <summary>Gets or sets the ticket type ID.</summary>
        public Int32 TypeID { get; set; }
        /// <summary>Gets or sets the ticket type name.</summary>
        public String TypeName { get; set; }
        /// <summary>Gets or sets the type category ID.</summary>
        public Int32 TypeCategoryID { get; set; }
        /// <summary>Gets or sets the type category name.</summary>
        public String TypeCategoryName { get; set; }
        /// <summary>Gets or sets the ticket classification.</summary>
        public TeamDynamix.Api.Tickets.TicketClass Classification { get; set; }
        /// <summary>Gets or sets the ID of the form currently used to edit the ticket. If 0, the default form for the classification will be used if it is available.</summary>
        public Int32 FormID { get; set; }
        /// <summary>Gets or sets the name of the form currently used to edit the ticket.</summary>
        public String FormName { get; set; }
        /// <summary>Gets or sets the title.</summary>
        public String Title { get; set; }
        /// <summary>Gets or sets the description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the URI to retrieve the individual ticket.</summary>
        public String Uri { get; set; }
        /// <summary>Gets or sets the account/department ID.</summary>
        public Int32 AccountID { get; set; }
        /// <summary>Gets or sets the account/department name.</summary>
        public String AccountName { get; set; }
        /// <summary>Gets or sets the source ID.</summary>
        public Int32 SourceID { get; set; }
        /// <summary>Gets or sets the source name.</summary>
        public String SourceName { get; set; }
        /// <summary>Gets or sets the status ID. If this ticket has been converted to a task, and has not been marked as completed, this field is not editable.</summary>
        public Int32 StatusID { get; set; }
        /// <summary>Gets or sets the status name.</summary>
        public String StatusName { get; set; }
        /// <summary>Gets or sets the status class.</summary>
        public TeamDynamix.Api.Statuses.StatusClass StatusClass { get; set; }
        /// <summary>Gets or sets the impact ID.</summary>
        public Int32 ImpactID { get; set; }
        /// <summary>Gets or sets the impact name.</summary>
        public String ImpactName { get; set; }
        /// <summary>Gets or sets the urgency ID.</summary>
        public Int32 UrgencyID { get; set; }
        /// <summary>Gets or sets the urgency name.</summary>
        public String UrgencyName { get; set; }
        /// <summary>Gets or sets the priority ID.</summary>
        public Int32 PriorityID { get; set; }
        /// <summary>Gets or sets the priority name.</summary>
        public String PriorityName { get; set; }
        /// <summary>Gets or sets the priority ordering.</summary>
        public Double PriorityOrder { get; set; }
        /// <summary>Gets or sets the SLA ID.</summary>
        public Int32 SlaID { get; set; }
        /// <summary>Gets or sets the SLA name.</summary>
        public String SlaName { get; set; }
        /// <summary>Gets or sets a value indicating whether the ticket's SLA has been violated.</summary>
        public Boolean IsSlaViolated { get; set; }
        /// <summary>Gets or sets a value indicating whether the "Respond By" component of the ticket's SLA has been violated, or null if this has been not loaded.</summary>
        public Boolean? IsSlaRespondByViolated { get; set; }
        /// <summary>Gets or sets a value indicating whether the "Resolve By" component of the ticket's SLA has been violated, or null if this has been not loaded.</summary>
        public Boolean? IsSlaResolveByViolated { get; set; }
        /// <summary>Gets or sets the "respond by" SLA deadline for the ticket.</summary>
        public DateTime? RespondByDate { get; set; }
        /// <summary>Gets or sets the "resolve by" SLA deadline for the ticket.</summary>
        public DateTime? ResolveByDate { get; set; }
        /// <summary>Gets or sets the date the ticket started its current SLA.</summary>
        public DateTime? SlaBeginDate { get; set; }
        /// <summary>Gets or sets a value indicating whether the ticket is on hold.</summary>
        public Boolean IsOnHold { get; set; }
        /// <summary>Gets or sets the date the ticket was placed on hold.</summary>
        public DateTime? PlacedOnHoldDate { get; set; }
        /// <summary>Gets or sets the date the ticket will go off hold.</summary>
        public DateTime? GoesOffHoldDate { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the email address of the creator.</summary>
        public String CreatedEmail { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the ticket.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the ticket.</summary>
        public String ModifiedFullName { get; set; }
        /// <summary>Gets or sets the full name of the requestor. This field is required on ticket creation when requestor creation is enabled and a valid requestor UID has not been provided.</summary>
        public String RequestorName { get; set; }
        /// <summary>Gets or sets the first name of the requestor.</summary>
        public String RequestorFirstName { get; set; }
        /// <summary>Gets or sets the last name of the requestor.</summary>
        public String RequestorLastName { get; set; }
        /// <summary>Gets or sets the email address of the requestor. This field is required on ticket creation when requestor creation is enabled and a valid requestor UID has not been provided.</summary>
        public String RequestorEmail { get; set; }
        /// <summary>Gets or sets the phone number of the requestor.</summary>
        public String RequestorPhone { get; set; }
        /// <summary>Gets or sets the UID of the requestor.</summary>
        public Guid? RequestorUid { get; set; }
        /// <summary>Gets or sets the time, in minutes, entered against the ticket or associated tasks/activities.</summary>
        public Int32 ActualMinutes { get; set; }
        /// <summary>Gets or sets the estimated minutes. If this ticket has been converted to a task, this field is not editable.</summary>
        public Int32 EstimatedMinutes { get; set; }
        /// <summary>Gets or sets the age of the ticket, in days.</summary>
        public Int32 DaysOld { get; set; }
        /// <summary>Gets or sets the start date. If this ticket has been converted to a task, this field is not editable.</summary>
        public DateTime? StartDate { get; set; }
        /// <summary>Gets or sets the end date. If this ticket has been converted to a task, this field is not editable.</summary>
        public DateTime? EndDate { get; set; }
        /// <summary>Gets or sets the UID of the responsible person. If this ticket has been converted to a task, this field is not editable.</summary>
        public Guid? ResponsibleUid { get; set; }
        /// <summary>Gets or sets the full name of the responsible person.</summary>
        public String ResponsibleFullName { get; set; }
        /// <summary>Gets or sets the email address of the responsible person.</summary>
        public String ResponsibleEmail { get; set; }
        /// <summary>Gets or sets the ID of the responsible group. If this ticket has been converted to a task, this field is not editable.</summary>
        public Int32 ResponsibleGroupID { get; set; }
        /// <summary>Gets or sets the name of the responsible group.</summary>
        public String ResponsibleGroupName { get; set; }
        /// <summary>Gets or sets the date the ticket was responded to.</summary>
        public DateTime RespondedDate { get; set; }
        /// <summary>Gets or sets the UID of the person who responded to the ticket.</summary>
        public Guid? RespondedUid { get; set; }
        /// <summary>Gets or sets the full name of the person who responded to the ticket.</summary>
        public String RespondedFullName { get; set; }
        /// <summary>Gets or sets the completed/closed date.</summary>
        public DateTime CompletedDate { get; set; }
        /// <summary>Gets or sets the UID of the person who closed the ticket.</summary>
        public Guid? CompletedUid { get; set; }
        /// <summary>Gets or sets the full name of the person who closed the ticket.</summary>
        public String CompletedFullName { get; set; }
        /// <summary>Gets or sets the UID of the reviewing person.</summary>
        public Guid? ReviewerUid { get; set; }
        /// <summary>Gets or sets the full name of the reviewing person.</summary>
        public String ReviewerFullName { get; set; }
        /// <summary>Gets or sets the email address of the reviewing person.</summary>
        public String ReviewerEmail { get; set; }
        /// <summary>Gets or sets the ID of the reviewing group.</summary>
        public Int32 ReviewingGroupID { get; set; }
        /// <summary>Gets or sets the name of the reviewing group.</summary>
        public String ReviewingGroupName { get; set; }
        /// <summary>Gets or sets the time budget.</summary>
        public Double TimeBudget { get; set; }
        /// <summary>Gets or sets the expenses budget.</summary>
        public Double ExpensesBudget { get; set; }
        /// <summary>Gets or sets the time budget used.</summary>
        public Double TimeBudgetUsed { get; set; }
        /// <summary>Gets or sets the expenses budget used.</summary>
        public Double ExpensesBudgetUsed { get; set; }
        /// <summary>Gets or sets a value indicating whether the ticket has been converted to a project task.</summary>
        public Boolean IsConvertedToTask { get; set; }
        /// <summary>Gets or sets the date the ticket was converted to a project task.</summary>
        public DateTime ConvertedToTaskDate { get; set; }
        /// <summary>Gets or sets the UID of the person who converted the ticket to a project task.</summary>
        public Guid? ConvertedToTaskUid { get; set; }
        /// <summary>Gets or sets the full name of the person who converted the ticket to a project task.</summary>
        public String ConvertedToTaskFullName { get; set; }
        /// <summary>Gets or sets the project ID of the associated project task.</summary>
        public Int32 TaskProjectID { get; set; }
        /// <summary>Gets or sets the project name of the associated project task.</summary>
        public String TaskProjectName { get; set; }
        /// <summary>Gets or sets the plan ID of the associated project task.</summary>
        public Int32 TaskPlanID { get; set; }
        /// <summary>Gets or sets the plan name of the associated project task.</summary>
        public String TaskPlanName { get; set; }
        /// <summary>Gets or sets the ID of the associated project task.</summary>
        public Int32 TaskID { get; set; }
        /// <summary>Gets or sets the title of the associated project task.</summary>
        public String TaskTitle { get; set; }
        /// <summary>Gets or sets the start date of the associated project task.</summary>
        public DateTime TaskStartDate { get; set; }
        /// <summary>Gets or sets the end date of the associated project task.</summary>
        public DateTime TaskEndDate { get; set; }
        /// <summary>Gets or sets the percent complete of the associated project task.</summary>
        public Int32 TaskPercentComplete { get; set; }
        /// <summary>Gets or sets the ID of the associated CRM opportunity.</summary>
        public Int32 OpportunityID { get; set; }
        /// <summary>Gets or sets the name of the associated CRM opportunity.</summary>
        public String OpportunityName { get; set; }
        /// <summary>Gets or sets the location ID.</summary>
        public Int32 LocationID { get; set; }
        /// <summary>Gets or sets the location name.</summary>
        public String LocationName { get; set; }
        /// <summary>Gets or sets the room ID for the ticket's location.</summary>
        public Int32 LocationRoomID { get; set; }
        /// <summary>Gets or sets the room name for the ticket's location.</summary>
        public String LocationRoomName { get; set; }
        /// <summary>Gets or sets the reference code.</summary>
        public String RefCode { get; set; }
        /// <summary>Gets or sets the ID of the associated service.</summary>
        public Int32 ServiceID { get; set; }
        /// <summary>Gets or sets the name of the associated service.</summary>
        public String ServiceName { get; set; }
        /// <summary>Gets or sets the ID of the associated service's category.</summary>
        public Int32 ServiceCategoryID { get; set; }
        /// <summary>Gets or sets the name of the associated service's category.</summary>
        public String ServiceCategoryName { get; set; }
        /// <summary>Gets or sets the ID of the associated knowledge base article.</summary>
        public Int32 ArticleID { get; set; }
        /// <summary>Gets or sets the subject of the associated knowledge base article.</summary>
        public String ArticleSubject { get; set; }
        /// <summary>Gets or sets the status of the associated knowledge base article.</summary>
        public TeamDynamix.Api.KnowledgeBase.ArticleStatus ArticleStatus { get; set; }
        /// <summary>Gets or sets a delimited string describing the category hierarchy of the associated knowledge base article.</summary>
        public String ArticleCategoryPathNames { get; set; }
        /// <summary>Gets or sets the ID of the application to which this ticket belongs.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the custom ticket attributes.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets the ticket attachments.</summary>
        public List<TeamDynamix.Api.Attachments.Attachment> Attachments { get; set; }
        /// <summary>Gets or sets the ticket tasks.</summary>
        public List<TeamDynamix.Api.Tickets.TicketTask> Tasks { get; set; }
        /// <summary>Gets or sets the list of people who can be notified for a ticket.</summary>
        public List<TeamDynamix.Api.ResourceItem> Notify { get; set; }

        public Ticket() { }
    }
}

// Autogenerated 09/18/2018 12:54:59: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.TicketClass
namespace TeamDynamix.Api.Tickets
{
    /// <summary>Describes the different classifications of tickets.</summary>
    public enum TicketClass
    {
        /// <summary>An "all tickets" classification for the purposes of filtering. Tickets should not be created with this class.</summary>
        Ticket = 9,
        /// <summary>An incident.</summary>
        Incident = 32,
        /// <summary>A major incident.</summary>
        MajorIncident = 77,
        /// <summary>A problem.</summary>
        Problem = 33,
        /// <summary>A change.</summary>
        Change = 34,
        /// <summary>A release.</summary>
        Release = 35,
        /// <summary>A ticket template. Tickets should not be created with this class.</summary>
        TicketTemplate = 36,
        /// <summary>A service request.</summary>
        ServiceRequest = 46
    }
}

// Autogenerated 09/18/2018 12:54:59: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.TicketCreateOptions
namespace TeamDynamix.Api.Tickets
{
    /// <summary>The different options when creating a new ticket.</summary>
    public class TicketCreateOptions
    {
        /// <summary>Gets or sets a value indicating whether reviewer notification should be enabled. Even if this value is true, the reviewer will not necessarily be notified unless it is explicitly specified on the ticket's type.</summary>
        public Boolean EnableNotifyReviewer { get; set; }
        /// <summary>Gets or sets a value indicating whether the requestor should be notified.</summary>
        public Boolean NotifyRequestor { get; set; }
        /// <summary>Gets or sets a value indicating whether the responsible resource(s) should be notified.</summary>
        public Boolean NotifyResponsible { get; set; }
        /// <summary>Gets or sets a value indicating whether a requestor should be created if an existing person with matching information cannot be found.</summary>
        public Boolean AllowRequestorCreation { get; set; }

        public TicketCreateOptions() { }
    }
}

// Autogenerated 09/18/2018 12:55:00: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.TicketSearch
namespace TeamDynamix.Api.Tickets
{
    /// <summary>A set of filtering options used for searching tickets.</summary>
    public class TicketSearch
    {
        /// <summary>Gets or sets the ticket classifications to filter on. Use Ticket to perform no classification filtering.</summary>
        public TeamDynamix.Api.Tickets.TicketClass[] TicketClassification { get; set; }
        /// <summary>Gets or sets the maximum number of results to return, or 0 for no limit.</summary>
        public Int32 MaxResults { get; set; }
        /// <summary>Gets or sets the ticket ID to filter on.</summary>
        public Int32? TicketID { get; set; }
        /// <summary>Gets or sets the parent ticket ID to filter on.</summary>
        public Int32? ParentTicketID { get; set; }
        /// <summary>Gets or sets the search text to use. Search text will incorporate the title, description, custom attribute text, reference code, and the text of any feed items.</summary>
        public String SearchText { get; set; }
        /// <summary>Gets or sets the status IDs to filter on.</summary>
        public Int32[] StatusIDs { get; set; }
        /// <summary>Gets or sets the historical status IDs to filter on.</summary>
        public Int32[] PastStatusIDs { get; set; }
        /// <summary>Gets or sets the status class IDs to filter on.</summary>
        public Int32[] StatusClassIDs { get; set; }
        /// <summary>Gets or sets the priority IDs to filter on.</summary>
        public Int32[] PriorityIDs { get; set; }
        /// <summary>Gets or sets the urgency IDs to filter on.</summary>
        public Int32[] UrgencyIDs { get; set; }
        /// <summary>Gets or sets the impact IDs to filter on.</summary>
        public Int32[] ImpactIDs { get; set; }
        /// <summary>Gets or sets the account/department IDs to filter on.</summary>
        public Int32[] AccountIDs { get; set; }
        /// <summary>Gets or sets the ticket type IDs to filter on.</summary>
        public Int32[] TypeIDs { get; set; }
        /// <summary>Gets or sets the source IDs to filter on.</summary>
        public Int32[] SourceIDs { get; set; }
        /// <summary>Gets or sets the minimum updated date to filter on. Only tickets that have status changes within the range specified by this value and TeamDynamix.Api.Tickets.TicketSearch.UpdatedDateTo (and optionally, only by TeamDynamix.Api.Tickets.TicketSearch.UpdatedByUid) will be included.</summary>
        public DateTime? UpdatedDateFrom { get; set; }
        /// <summary>Gets or sets the maximum updated date to filter on. Only tickets that have status changes within the range specified by this value and TeamDynamix.Api.Tickets.TicketSearch.UpdatedDateFrom (and optionally, only by TeamDynamix.Api.Tickets.TicketSearch.UpdatedByUid) will be included.</summary>
        public DateTime? UpdatedDateTo { get; set; }
        /// <summary>Gets or sets the UID of the updating person to filter on. Only tickets that have status changes by this person (and optionally, only within the date range specified by TeamDynamix.Api.Tickets.TicketSearch.UpdatedDateFrom and TeamDynamix.Api.Tickets.TicketSearch.UpdatedDateTo) will be included.</summary>
        public Guid? UpdatedByUid { get; set; }
        /// <summary>Gets or sets the minimum last modified date to filter on.</summary>
        public DateTime? ModifiedDateFrom { get; set; }
        /// <summary>Gets or sets the maximum last modified date to filter on.</summary>
        public DateTime? ModifiedDateTo { get; set; }
        /// <summary>Gets or sets the UID of the person who last modified a ticket to filter on.</summary>
        public Guid? ModifiedByUid { get; set; }
        /// <summary>Gets or sets the minimum start date to filter on.</summary>
        public DateTime? StartDateFrom { get; set; }
        /// <summary>Gets or sets the maximum start date to filter on.</summary>
        public DateTime? StartDateTo { get; set; }
        /// <summary>Gets or sets the minimum end date to filter on.</summary>
        public DateTime? EndDateFrom { get; set; }
        /// <summary>Gets or sets the maximum end date to filter on.</summary>
        public DateTime? EndDateTo { get; set; }
        /// <summary>Gets or sets the minimum responded date to filter on.</summary>
        public DateTime? RespondedDateFrom { get; set; }
        /// <summary>Gets or sets the maximum responded date to filter on.</summary>
        public DateTime? RespondedDateTo { get; set; }
        /// <summary>Gets or sets the UID of the responding person to filter on.</summary>
        public Guid? RespondedByUid { get; set; }
        /// <summary>Gets or sets the minimum closed date to filter on.</summary>
        public DateTime? ClosedDateFrom { get; set; }
        /// <summary>Gets or sets the maximum closed date to filter on.</summary>
        public DateTime? ClosedDateTo { get; set; }
        /// <summary>Gets or sets the UID of the closing person to filter on.</summary>
        public Guid? ClosedByUid { get; set; }
        /// <summary>Gets or sets the minimum SLA "respond by" deadline to filter on.</summary>
        public DateTime? RespondByDateFrom { get; set; }
        /// <summary>Gets or sets the maximum SLA "respond by" deadline to filter on.</summary>
        public DateTime? RespondByDateTo { get; set; }
        /// <summary>Gets or sets the minimum SLA "resolve by" deadline to filter on.</summary>
        public DateTime? CloseByDateFrom { get; set; }
        /// <summary>Gets or sets the maximum SLA "resolve by" deadline to filter on.</summary>
        public DateTime? CloseByDateTo { get; set; }
        /// <summary>Gets or sets the minimum created date to filter on.</summary>
        public DateTime? CreatedDateFrom { get; set; }
        /// <summary>Gets or sets the maximum created date to filter on.</summary>
        public DateTime? CreatedDateTo { get; set; }
        /// <summary>Gets or sets the UID of the creator to filter on.</summary>
        public Guid? CreatedByUid { get; set; }
        /// <summary>Gets or sets the minimum age to filter on.</summary>
        public Int32? DaysOldFrom { get; set; }
        /// <summary>Gets or sets the maximum age to filter on.</summary>
        public Int32? DaysOldTo { get; set; }
        /// <summary>Gets or sets the UIDs of the responsible individuals to filter on. This differs from TeamDynamix.Api.Tickets.TicketSearch.PrimaryResponsibilityUids in that it includes responsibility from ticket tasks.</summary>
        public Guid[] ResponsibilityUids { get; set; }
        /// <summary>Gets or sets the IDs of the responsible groups to filter on. This differs from TeamDynamix.Api.Tickets.TicketSearch.PrimaryResponsibilityGroupIDs in that it includes responsibility from ticket tasks.</summary>
        public Int32[] ResponsibilityGroupIDs { get; set; }
        /// <summary>Gets or sets the filter to use for TeamDynamix.Api.Tickets.TicketSearch.ResponsibilityUids and TeamDynamix.Api.Tickets.TicketSearch.ResponsibilityGroupIDswith regards to ticket tasks.</summary>
        public Boolean? CompletedTaskResponsibilityFilter { get; set; }
        /// <summary>Gets or sets the UIDs of the primarily-responsible individuals to filter on.</summary>
        public Guid[] PrimaryResponsibilityUids { get; set; }
        /// <summary>Gets or sets the primarily-responsible group IDs to filter on.</summary>
        public Int32[] PrimaryResponsibilityGroupIDs { get; set; }
        /// <summary>Gets or sets the SLA IDs to filter on.</summary>
        public Int32[] SlaIDs { get; set; }
        /// <summary>Gets or sets the SLA violation status to filter on. A value of true indicates that only tickets with violated SLAs should be included, whereas a value of false indicates that only tickets without a violated SLA (including no SLA) should be included.</summary>
        public Boolean? SlaViolationStatus { get; set; }
        /// <summary>Gets or sets the unmet SLA deadlines to filter on.</summary>
        public TeamDynamix.Api.Tickets.UnmetConstraintSearchType SlaUnmetConstraints { get; set; }
        /// <summary>Gets or sets the knowledge base article IDs to filter on.</summary>
        public Int32[] KBArticleIDs { get; set; }
        /// <summary>Gets or sets the assignment status to filter on. A value of true indicates that only tickets assigned to individuals should be included, whereas a value of false indicates that only tickets not assigned to an individual should be included.</summary>
        public Boolean? AssignmentStatus { get; set; }
        /// <summary>Gets or sets the task conversion status to filter on. A value of true indicates that only tickets converted to project tasks should be included, whereas a value of false indicates that only tickets not converted to a project task should be included.</summary>
        public Boolean? ConvertedToTask { get; set; }
        /// <summary>Gets or sets the UID of the reviewing person to filter on. This will include any groups that the reviewer belongs to.</summary>
        public Guid? ReviewerUid { get; set; }
        /// <summary>Gets or sets the UID of the submitting person to filter on. Searching for a "submitter" will include any tickets that the person has created and/or requested.</summary>
        public Guid? SubmitterUid { get; set; }
        /// <summary>Gets or sets the UID of the person to filter on for submission or associated accounts/departments. This will return any tickets for which the person is the "submitter", in addition to any tickets that are associated with an account/department that has been explicitly assigned to the person.</summary>
        public Guid? UserAccountsUid { get; set; }
        /// <summary>Gets or sets the UID of the person to filter on for group responsibility. This will return any tickets for which one of the person's groups is primarily responsible.</summary>
        public Guid? UserGroupsUid { get; set; }
        /// <summary>Gets or sets the requestor UIDs to filter on.</summary>
        public Guid[] RequestorUids { get; set; }
        /// <summary>Gets or sets the text to perform a LIKE/"contains" search on the requestor's full name.</summary>
        public String RequestorNameSearch { get; set; }
        /// <summary>Gets or sets the text to perform a LIKE/"contains" search on the requestor's email address.</summary>
        public String RequestorEmailSearch { get; set; }
        /// <summary>Gets or sets the text to perform a LIKE/"contains" search on the requestor's phone number.</summary>
        public String RequestorPhoneSearch { get; set; }
        /// <summary>Gets or sets the IDs of the associated CIs to filter on. To be included in the search results, a ticket must be associated with one or more of the listed CIs.</summary>
        public Int32[] ConfigurationItemIDs { get; set; }
        /// <summary>Gets or sets the IDs of the associated CIs to exclude on. To be included in the search results, a ticket must NOT be associated with any of the listed CIs.</summary>
        public Int32[] ExcludeConfigurationItemIDs { get; set; }
        /// <summary>Gets or sets the "on hold" status to filter on.</summary>
        public Boolean? IsOnHold { get; set; }
        /// <summary>Gets or sets the minimum "goes off hold" date to filter on.</summary>
        public DateTime? GoesOffHoldFrom { get; set; }
        /// <summary>Gets or sets the maximum "goes off hold" date to filter on.</summary>
        public DateTime? GoesOffHoldTo { get; set; }
        /// <summary>Gets or sets the location IDs to filter on.</summary>
        public Int32[] LocationIDs { get; set; }
        /// <summary>Gets or sets the location room IDs to filter on.</summary>
        public Int32[] LocationRoomIDs { get; set; }
        /// <summary>Gets or sets the associated service IDs to filter on.</summary>
        public Int32[] ServiceIDs { get; set; }
        /// <summary>Gets or sets the custom attributes to filter on.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> CustomAttributes { get; set; }
        /// <summary>Gets or sets whether or not the returned tickets should have a reference code.</summary>
        public Boolean? HasReferenceCode { get; set; }

        public TicketSearch() { }
    }
}

// Autogenerated 09/18/2018 12:55:00: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.TicketSource
namespace TeamDynamix.Api.Tickets
{
    /// <summary>A ticket source.</summary>
    public class TicketSource
    {
        /// <summary>Gets or sets the ID of the ticket source.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the source name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the source description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets a value indicating whether the source is active.</summary>
        public Boolean IsActive { get; set; }

        public TicketSource() { }
    }
}

// Autogenerated 09/18/2018 12:55:01: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.TicketStatus
namespace TeamDynamix.Api.Tickets
{
    /// <summary>A ticket status.</summary>
    public class TicketStatus
    {
        /// <summary>Gets or sets the ID of the ticket status.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the ID of the containing application.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the containing application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the status name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the status description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the order of the status when displayed in a list.</summary>
        public Double Order { get; set; }
        /// <summary>Gets or sets the status class.</summary>
        public TeamDynamix.Api.Statuses.StatusClass StatusClass { get; set; }
        /// <summary>Gets or sets a value indicating whether the status is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether this status is the default for the application.</summary>
        public Boolean IsDefault { get; set; }

        public TicketStatus() { }
    }
}

// Autogenerated 09/18/2018 12:55:01: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.TicketTask
namespace TeamDynamix.Api.Tickets
{
    /// <summary>A ticket task or activity.</summary>
    public class TicketTask
    {
        /// <summary>Gets or sets the ID of the task.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the ID of the associated ticket.</summary>
        public Int32 TicketID { get; set; }
        /// <summary>Gets or sets the title.</summary>
        public String Title { get; set; }
        /// <summary>Gets or sets the description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets a value indicating whether this task is active. Tasks are inactive if their predecessor task has not been completed.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the start date.</summary>
        public DateTime? StartDate { get; set; }
        /// <summary>Gets or sets the end date.</summary>
        public DateTime? EndDate { get; set; }
        /// <summary>Gets or sets the expected duration, in minutes, of the task. This value is in operational minutes, and so operational hours, weekends, and days off are all taken into account.</summary>
        public Int32? CompleteWithinMinutes { get; set; }
        /// <summary>Gets or sets the estimated minutes.</summary>
        public Int32 EstimatedMinutes { get; set; }
        /// <summary>Gets or sets the time, in minutes, entered against the task/activity.</summary>
        public Int32 ActualMinutes { get; set; }
        /// <summary>Gets or sets the percent complete.</summary>
        public Int32 PercentComplete { get; set; }
        /// <summary>Gets or sets the created date.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the UID of the creator.</summary>
        public Guid CreatedUid { get; set; }
        /// <summary>Gets or sets the full name of the creator.</summary>
        public String CreatedFullName { get; set; }
        /// <summary>Gets or sets the email address of the creator.</summary>
        public String CreatedEmail { get; set; }
        /// <summary>Gets or sets the last modified date.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the UID of the last person to modify the task.</summary>
        public Guid ModifiedUid { get; set; }
        /// <summary>Gets or sets the full name of the last person to modify the task.</summary>
        public String ModifiedFullName { get; set; }
        /// <summary>Gets or sets the completed date.</summary>
        public DateTime CompletedDate { get; set; }
        /// <summary>Gets or sets the UID of the person who completed the task.</summary>
        public Guid? CompletedUid { get; set; }
        /// <summary>Gets or sets the full name of the person who completed the task.</summary>
        public String CompletedFullName { get; set; }
        /// <summary>Gets or sets the UID of the responsible person.</summary>
        public Guid? ResponsibleUid { get; set; }
        /// <summary>Gets or sets the full name of the responsible person.</summary>
        public String ResponsibleFullName { get; set; }
        /// <summary>Gets or sets the email address of the responsible person.</summary>
        public String ResponsibleEmail { get; set; }
        /// <summary>Gets or sets the ID of the responsible group.</summary>
        public Int32 ResponsibleGroupID { get; set; }
        /// <summary>Gets or sets the name of the responsible group.</summary>
        public String ResponsibleGroupName { get; set; }
        /// <summary>Gets or sets the ID of the predecessor task.</summary>
        public Int32 PredecessorID { get; set; }
        /// <summary>Gets or sets the title of the predecessor task.</summary>
        public String PredecessorTitle { get; set; }
        /// <summary>Gets or sets the order in which the task should be displayed in the list of the ticket's tasks/activities.</summary>
        public Int32 Order { get; set; }
        /// <summary>Gets or sets the type ID. This indicates if this is a regular ticket task, a scheduled maintenance activity, or something else.</summary>
        public TeamDynamix.Api.Tickets.TicketTaskType TypeID { get; set; }
        /// <summary>Gets or sets the total number of detected conflicts for this task/maintenance activity.</summary>
        public Int32 DetectedConflictCount { get; set; }
        /// <summary>Gets or sets the types of detected conflicts for this task/maintenance activity.</summary>
        public TeamDynamix.Api.Tickets.ConflictType DetectedConflictTypes { get; set; }
        /// <summary>Gets or sets the UTC date/time this task/activity was last scanned for conflicts.</summary>
        public DateTime LastConflictScanDateUtc { get; set; }

        public TicketTask() { }
    }
}

// Autogenerated 09/18/2018 12:55:01: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.TicketTaskType
namespace TeamDynamix.Api.Tickets
{
    /// <summary>Describes the different types of items that can be backended by ticket tasks.</summary>
    public enum TicketTaskType
    {
        /// <summary>An unknown or indetermininate type of task.</summary>
        None = 0,
        /// <summary>A standard, workable ticket task.</summary>
        TicketTask = 1,
        /// <summary>A scheduled maintenance activity.</summary>
        MaintenanceActivity = 2,
        /// <summary>A task that is used as a work step in a workflow.</summary>
        WorkflowTask = 3
    }
}

// Autogenerated 09/18/2018 12:55:01: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.TicketType
namespace TeamDynamix.Api.Tickets
{
    /// <summary>A ticket type.</summary>
    public class TicketType
    {
        /// <summary>Gets or sets the ID of the ticket type.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the ID of the containing application.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the containing application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the ticket type name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the ticket type description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the ID of the containing type category.</summary>
        public Int32 CategoryID { get; set; }
        /// <summary>Gets or sets the name of the containing type category.</summary>
        public String CategoryName { get; set; }
        /// <summary>Gets the full name of the type, which includes the type category.</summary>
        public String FullName { get; set; }
        /// <summary>Gets or sets a value indicating whether the ticket type is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the UID of the reviewing person.</summary>
        public Guid? ReviewerUid { get; set; }
        /// <summary>Gets or sets the full name of the reviewing person.</summary>
        public String ReviewerFullName { get; set; }
        /// <summary>Gets or sets the email address of the reviewing person.</summary>
        public String ReviewerEmail { get; set; }
        /// <summary>Gets or sets the ID of the reviewing group.</summary>
        public Int32 ReviewingGroupID { get; set; }
        /// <summary>Gets or sets the name of the reviewing group.</summary>
        public String ReviewingGroupName { get; set; }
        /// <summary>Gets or sets a value indicating whether the reviewing resource(s) (and other addresses, if specified) should be notified of any new tickets that are created with this type (or later changed to this type).</summary>
        public Boolean NotifyReviewer { get; set; }
        /// <summary>Gets or sets the other email addresses to notify of incoming tickets when reviewer notification is enabled.</summary>
        public String OtherNotificationEmailAddresses { get; set; }
        /// <summary>Gets or sets the ID of the default SLA to use when tickets are created with this type.</summary>
        public Int32 DefaultSLAID { get; set; }
        /// <summary>Gets or sets the name of the default SLA to use when tickets are created with this type.</summary>
        public String DefaultSLAName { get; set; }
        /// <summary>Gets or sets the active status of the default SLA to use when tickets are created with this type.</summary>
        public Boolean DefaultSLAIsActive { get; set; }
        /// <summary>Gets or sets the ID of the associated workspace.</summary>
        public Int32 WorkspaceID { get; set; }
        /// <summary>Gets or sets the name of the associated workspace.</summary>
        public String WorkspaceName { get; set; }

        public TicketType() { }
    }
}

// Autogenerated 09/18/2018 12:55:02: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Tickets.UnmetConstraintSearchType
namespace TeamDynamix.Api.Tickets
{
    /// <summary>A bit flag enumeration for indicating which type(s) of unmet constraints to filter on for the purposes of searching.</summary>
    public enum UnmetConstraintSearchType
    {
        /// <summary>Indicates that no filtering on unmet constraints should be performed.</summary>
        None = 0,
        /// <summary>Indicates that filtering on an unmet "Respond By" constraint should be performed.</summary>
        Response = 1,
        /// <summary>Indicates that filtering on an unmet "Resolve By" constraint should be performed.</summary>
        Resolution = 2
    }
}

// Autogenerated 09/18/2018 12:55:02: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.BulkOperationResults
namespace TeamDynamix.Api.Time
{
    /// <summary>Describes the results of a bulk time-entry operation, either a delete, edit, or add.</summary>
    public class BulkOperationResults
    {
        /// <summary>Gets or sets the index and IDs of entries that were successsfully modified. For add operations, the new ID of the entry will be returned in the same order as the entry appeared in the parameters.</summary>
        public List<TeamDynamix.Api.Time.IndexAndIDPair> Succeeded { get; set; }
        /// <summary>Gets or sets a collection error messages. Each message corresponds to an entry in the FailureIDs collection at the same index in the list.</summary>
        public List<TeamDynamix.Api.Time.TimeApiError> Failed { get; set; }

        public BulkOperationResults() { }
    }
}

// Autogenerated 09/18/2018 12:55:02: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.IndexAndIDPair
namespace TeamDynamix.Api.Time
{
    /// <summary>A pairing of an index of an item and its ID. This is used when reporting failures in bulk operations.</summary>
    public class IndexAndIDPair
    {
        /// <summary>Gets or sets the index of the item. This typically refers to an index of an item in a list of items or operations.</summary>
        public Int32 Index { get; set; }
        /// <summary>Gets or sets the ID of the item.</summary>
        public Int32 ID { get; set; }

        public IndexAndIDPair() { }
    }
}

// Autogenerated 09/18/2018 12:55:02: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.TimeApiError
namespace TeamDynamix.Api.Time
{
    /// <summary>Represents an error that occurred trying to perform an operation (typically a bulk operation) in a time and expenses API operation. See the ErrorMessage and ErrorCode for more details as well as the TimeEntryID and Index for more information on which operation failed.</summary>
    public class TimeApiError
    {
        /// <summary>Gets or sets the zero-based index of the item that failed. This is useful for bulk operations</summary>
        public Int32 Index { get; set; }
        /// <summary>Gets or sets the time entry's identifier.</summary>
        public Int32 TimeEntryID { get; set; }
        /// <summary>Gets or sets the error message.</summary>
        public String ErrorMessage { get; set; }
        /// <summary>Gets or sets the error code.</summary>
        public TeamDynamix.Api.Time.TimeApiErrorCode ErrorCode { get; set; }
        /// <summary>Gets or sets a user-readible name of an error code.</summary>
        public String ErrorCodeName { get; set; }

        public TimeApiError() { }
    }
}

// Autogenerated 09/18/2018 12:55:03: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.TimeApiErrorCode
namespace TeamDynamix.Api.Time
{
    /// <summary>A list of error codes to help the user understand item errors for time API operations.</summary>
    public enum TimeApiErrorCode
    {
        /// <summary>Represents an unknown / unexpected error</summary>
        Unknown = 0,
        /// <summary>An exception occurred on the server while processing the request and prevented the request from completing properly.</summary>
        ServerError = 1,
        /// <summary>The time entry identifier was either not specified when it was required or was an unsupported value. See the error message for more details.</summary>
        InvalidTimeEntryID = 10,
        /// <summary>Occurs when you attempt to change a time entry's component after it already exists or to a component that does not support time entry.</summary>
        InvalidModuleType = 11,
        /// <summary>Occurs when a project ID is required but not specified or specified to a negative value.</summary>
        InvalidProjectID = 12,
        /// <summary>Occurs when a plan ID is required but not specified or specified to a negative value.</summary>
        InvalidPlanID = 13,
        /// <summary>Occurs when an item ID is required but not specified or specified to a negative value.</summary>
        InvalidItemID = 14,
        /// <summary>Occurs when an application ID is required but not specified or specified to a negative value.</summary>
        InvalidAppID = 15,
        /// <summary>Occurs when no user with the specified unique identifier could be found. They either do not exist, are deactivated, or are not visible to the user executing the request.</summary>
        UserNotFound = 20,
        /// <summary>Occurs when trying to act on a time entry that already exists but either is deleted, has an incorrect ID specified, or is not visible to the executing user.</summary>
        TimeEntryNotFound = 21,
        /// <summary>Occurs when trying to add time to an item when the specified time account is not available for that item.</summary>
        TimeAccountNotFound = 22,
        /// <summary>Occurs when trying to work with time on a Task that either is deleted, has an incorrect ID specified, or is not visible to the executing user.</summary>
        TaskNotFound = 23,
        /// <summary>Occurs when trying to work with time on an Issue that either is deleted, has an incorrect ID specified, or is not visible to the executing user.</summary>
        IssueNotFound = 24,
        /// <summary>Occurs when trying to work with time on a Ticket that either is deleted, has an incorrect ID specified, or is not visible to the executing user.</summary>
        TicketNotFound = 25,
        /// <summary>Occurs when trying to work with time on a Ticket Task that either is deleted, has an incorrect ID specified, or is not visible to the executing user.</summary>
        TicketTaskNotFound = 26,
        /// <summary>Occurs when trying to work with time on a Ticket that has already been converted to a Task. You should enter time against the task instead.</summary>
        TicketConvertedToTask = 27,
        /// <summary>Occurs when trying to work with time on a Project, Issue, or Task where the related project has been deleted.</summary>
        ProjectNotFound = 28,
        /// <summary>Occurs when the user the time entry belongs to does not have the Time and Expenses application or the application that contains the item they're trying to add time to.</summary>
        UserDoesNotHaveApplication = 30,
        /// <summary>Occurs when a user the time entry will be for is not an approved member of the project.</summary>
        UserIsNotOnProject = 31,
        /// <summary>Occurs when you are trying to add time for another user but you do not have the permission to add time for other users.</summary>
        CannotAddTimeForOthers = 32,
        /// <summary>Occurs when you are trying to view time that you do not have permissions to view.</summary>
        CannotViewTimeEntry = 33,
        /// <summary>Occurs when the user the time entry belongs to is not active or is not a standard user.</summary>
        UserInvalid = 34,
        /// <summary>The time report the entry would belong to has already been approved.</summary>
        TimeReportAlreadyApproved = 40,
        /// <summary>The time report the entry would belong to has already been submitted.</summary>
        TimeReportAlreadySubmitted = 41,
        /// <summary>The time entry occurs on a date that is locked.</summary>
        TimeEntryOccursOnLockedDate = 42,
        /// <summary>The time account is limited and the edit or addition would move the user over their limit for a specific period of time.</summary>
        TimeAccountLimitExceeded = 43,
        /// <summary>Occurs when a user edits or adds a time entry on a limited time type that would make the time entry negative.</summary>
        LimitedTimeCannotBeNegative = 44,
        /// <summary>Occurs when the value of a property that cannot be edited is modified. If you need to change this value, you should instead delete the time entry and add a new time entry.</summary>
        CannotChangeProperty = 50,
        /// <summary>Occurs when too many operations are included in a single bulk operation.</summary>
        MaxOperationsPerRequestExceeded = 51,
        /// <summary>Occurs when a bulk operation occurred but no operations were specified.</summary>
        NoOperationsSpecified = 52,
        /// <summary>Occurs when trying to work with time on a project, issue, or task when the project is no longer active.</summary>
        ProjectNotActive = 53,
        /// <summary>Occurs when trying to enter time at the project level but the project does not support project-level time entry.</summary>
        ProjectTimeEntryNotAllowed = 54,
        /// <summary>Occurs when trying to work with limited time types on components that don't support them.</summary>
        LimitedTimeTypesUnavailable = 55,
        /// <summary>Occurs when trying to delete a time entry for another user.</summary>
        CannotDeleteTimeEntry = 56,
        /// <summary>Occurs when required timedate is not provided.</summary>
        InvalidTimeDate = 57
    }
}

// Autogenerated 09/18/2018 12:55:03: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.TimeEntry
namespace TeamDynamix.Api.Time
{
    /// <summary>A time entry logged against an item.</summary>
    public class TimeEntry
    {
        /// <summary>Gets or sets the ID of the time entry. This should be zero or negative when performing an add.</summary>
        public Int32 TimeID { get; set; }
        /// <summary>Gets or sets the ID of the item the time entry is entered against.</summary>
        public Int32 ItemID { get; set; }
        /// <summary>Gets or sets the title of the item the time was entered against. Modifying this field during add or edit has no effect. Modify ItemId instead to pull from the correct item.</summary>
        public String ItemTitle { get; set; }
        /// <summary>Gets or sets the invoice identifier.</summary>
        public String InvoiceID { get; set; }
        /// <summary>Gets or sets the full name of the user who set the time entry's approval status (e.g. the manager who approved it).</summary>
        public String StatusFullName { get; set; }
        /// <summary>Gets or sets the unique identifier of the user who set the time entry's approval status.</summary>
        public String StatusUid { get; set; }
        /// <summary>Gets or sets the date the approval status was last modified for this entry.</summary>
        public DateTime StatusDate { get; set; }
        /// <summary>Gets or sets the unique identifier of the user who created the time entry.</summary>
        public String Uid { get; set; }
        /// <summary>Gets or sets the cost rate at the time the time entry was created.</summary>
        public Double CostRate { get; set; }
        /// <summary>Gets or sets the bill rate at the time the time entry was created.</summary>
        public Double BillRate { get; set; }
        /// <summary>Gets or sets a value indicating whether this TeamDynamix.Api.Time.TimeEntry uses a time type that is limited.</summary>
        public Boolean Limited { get; set; }
        /// <summary>Gets or sets the ID of the associated time type.</summary>
        public Int32 TimeTypeID { get; set; }
        /// <summary>Gets or sets a value indicating whether this TeamDynamix.Api.Time.TimeEntry represents billable time.</summary>
        public Boolean Billable { get; set; }
        /// <summary>Gets or sets the ID of the associated application. This should be zero except when working with ticketing applications.</summary>
        public Int32 AppID { get; set; }
        /// <summary>Gets or sets the name of the associated application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the type of module the ItemID corresponds with.</summary>
        public TeamDynamix.Api.Time.TimeEntryComponent Component { get; set; }
        /// <summary>Gets or sets the status of the time entry.</summary>
        public TeamDynamix.Api.Time.TimeStatus Status { get; set; }
        /// <summary>Gets or sets the ticket identifier. This is useful if the time entry is on a ticket or ticket task. Note that Component, AppID, and ItemID should still be set.</summary>
        public Int32 TicketID { get; set; }
        /// <summary>Gets or sets the hours logged for the time entry. Note that time is stored at the minutes level and the hours property is auto-calculated.</summary>
        public Double Hours { get; set; }
        /// <summary>Gets or sets the minutes logged for the time entry.</summary>
        public Double Minutes { get; set; }
        /// <summary>Gets or sets the description of the time entry.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the project identifier. This is used when the time is on an issue, project, or task.</summary>
        public Int32 ProjectID { get; set; }
        /// <summary>Gets or sets the name of the project the time entry associated with.</summary>
        public String ProjectName { get; set; }
        /// <summary>Gets or sets the plan identifier. This is used when the time is on an issue, or task.</summary>
        public Int32 PlanID { get; set; }
        /// <summary>Gets or sets the date the time entry should be recorded for.</summary>
        public DateTime TimeDate { get; set; }
        /// <summary>Gets or sets a value indicating whether or not the project is active.</summary>
        public Boolean ProjectIsActive { get; set; }
        /// <summary>Gets or sets the full name of the approver that approved the time entry.</summary>
        public String ApproverFullName { get; set; }
        /// <summary>Gets or sets the approver's unique identifier.</summary>
        public String ApproverUid { get; set; }

        public TimeEntry() { }
    }
}

// Autogenerated 09/18/2018 12:55:04: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.TimeEntryComponent
namespace TeamDynamix.Api.Time
{
    /// <summary>Specifies the type of item with which a time or expense entry is associated.</summary>
    public enum TimeEntryComponent
    {
        /// <summary>Indicates that this is a project-level time entry or a project expense.</summary>
        ProjectTime = 1,
        /// <summary>Indicates that this is a time entry for a project task.</summary>
        TaskTime = 2,
        /// <summary>Indicates that this is a time entry for a project issue.</summary>
        IssueTime = 3,
        /// <summary>Indicates that this is a time entry for a ticket or a ticket expense.</summary>
        TicketTime = 9,
        /// <summary>Indicates that this is scheduled time off.</summary>
        TimeOff = 17,
        /// <summary>Indicates that this is a time entry for a ticket task.</summary>
        TicketTaskTime = 25,
        /// <summary>Indicates that this is a workspace time entry.</summary>
        WorkspaceTime = 45
    }
}

// Autogenerated 09/18/2018 12:55:04: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.TimeReport
namespace TeamDynamix.Api.Time
{
    /// <summary>Represents a single time report.</summary>
    public class TimeReport
    {
        /// <summary>Gets or sets the time report's identifier.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets start of the time period. This should be a Sunday.</summary>
        public DateTime PeriodStartDate { get; set; }
        /// <summary>Gets or sets end of the time period. This should be a Saturday.</summary>
        public DateTime PeriodEndDate { get; set; }
        /// <summary>Gets the time entries associated with this time report.</summary>
        public List<TeamDynamix.Api.Time.TimeEntry> Times { get; set; }
        /// <summary>Gets or sets the status of the time report.</summary>
        public TeamDynamix.Api.Time.TimeStatus Status { get; set; }
        /// <summary>Gets or sets the unique identifier of the user who worked the time entries in the report.</summary>
        public String TimeReportUid { get; set; }
        /// <summary>Gets or sets the full name of the user who worked the time entries in the report.</summary>
        public String UserFullName { get; set; }
        /// <summary>Gets or sets the notification E-Mail address of the user who worked the time entries in the report.</summary>
        public String UserAlertEmail { get; set; }
        /// <summary>Gets or sets the number of billable minutes associated with the time report. This is aggregated from the time entries.</summary>
        public Int64 MinutesBillable { get; set; }
        /// <summary>Gets or sets the number of non-billable minutes associated with the time report. This is aggregated from the time entries.</summary>
        public Int64 MinutesNonBillable { get; set; }
        /// <summary>Gets or sets the total minutes.</summary>
        public Int64 MinutesTotal { get; set; }
        /// <summary>Gets or sets the time entries associated with the time report.</summary>
        public Int32 TimeEntriesCount { get; set; }
        /// <summary>Gets or sets the modified date of the time report.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets the created date of the time report.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the completed date of the time report.</summary>
        public DateTime CompletedDate { get; set; }

        public TimeReport() { }
    }
}

// Autogenerated 09/18/2018 12:55:04: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.TimeSearch
namespace TeamDynamix.Api.Time
{
    /// <summary>A search object used for finding multiple time entries.</summary>
    public class TimeSearch
    {
        /// <summary>Gets or sets the minimum number of minutes a time entry can have to be returned. Can be negative. Optional. When omitted or null this is not used for filtering.</summary>
        public Int32? MinutesFrom { get; set; }
        /// <summary>Gets or sets the maximum number of minutes a time entry can have to be returned. Can be negative. Optional. When omitted or null this is not used for filtering.</summary>
        public Int32? MinutesTo { get; set; }
        /// <summary>Gets or sets the minimum date the time entry can have to be returned. Optional. When omitted or null this is not used for filtering.</summary>
        public DateTime? EntryDateFrom { get; set; }
        /// <summary>Gets or sets the maximum date the time entry can have to be returned. Optional. When omitted or null this is not used for filtering.</summary>
        public DateTime? EntryDateTo { get; set; }
        /// <summary>Gets or sets the minimum date the time entry can have been created by to be returned. Optional. When omitted or null this is not used for filtering.</summary>
        public DateTime? CreatedDateFrom { get; set; }
        /// <summary>Gets or sets the maximum date the time entry can have been created by to be returned. Optional. When omitted or null this is not used for filtering.</summary>
        public DateTime? CreatedDateTo { get; set; }
        /// <summary>Gets or sets the minimum status date the time entry can have to be returned. Status date is updated when a time entry is submitted, approved, rejected, etc. Optional. When omitted or null this is not used for filtering.</summary>
        public DateTime? StatusDateFrom { get; set; }
        /// <summary>Gets or sets the maximum status date the time entry can have to be returned. Status date is updated when a time entry is submitted, approved, rejected, etc. Optional. When omitted or null this is not used for filtering.</summary>
        public DateTime? StatusDateTo { get; set; }
        /// <summary>Gets or sets the minimum billable rate a time entry can have to be returned. Optional. When omitted or null this is not used for filtering.</summary>
        public Double? BillRateFrom { get; set; }
        /// <summary>Gets or sets the maximum billable rate a time entry can have to be returned. Optional. When omitted or null this is not used for filtering.</summary>
        public Double? BillRateTo { get; set; }
        /// <summary>Gets or sets the minimum cost rate a time entry can have to be returned. Optional. When omitted or null this is not used for filtering.</summary>
        public Double? CostRateFrom { get; set; }
        /// <summary>Gets or sets the maximum cost rate a time entry can have to be returned. Optional. When omitted or null this is not used for filtering.</summary>
        public Double? CostRateTo { get; set; }
        /// <summary>Gets or sets the list of time type identifiers. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<Int32> TimeTypeIDs { get; set; }
        /// <summary>Gets or sets the list of project, request, or workspace identifiers. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<Int32> ProjectOrWorkspaceIDs { get; set; }
        /// <summary>Gets or sets the list of plan identifiers. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<Int32> PlanIDs { get; set; }
        /// <summary>Gets or sets the list of task identifiers. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<Int32> TaskIDs { get; set; }
        /// <summary>Gets or sets the list of issue identifiers. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<Int32> IssueIDs { get; set; }
        /// <summary>Gets or sets the list of ticket identifiers. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<Int32> TicketIDs { get; set; }
        /// <summary>Gets or sets the list of ticket task identifiers. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<Int32> TicketTaskIDs { get; set; }
        /// <summary>Gets or sets the list of application identifiers, typically used with ticketing applications. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<Int32> ApplicationIDs { get; set; }
        /// <summary>Gets or sets the list of status identifiers. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<Int32> StatusIDs { get; set; }
        /// <summary>Gets or sets the list of person unique identifiers. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<Guid> PersonUIDs { get; set; }
        /// <summary>Gets or sets the list of components, allowing results to be focused down to tickets, issues, etc. If this is empty or null, no filtering will occur, otherwise, only items that use one of the specfified time types will be returned.</summary>
        public List<TeamDynamix.Api.Time.TimeEntryComponent> Components { get; set; }
        /// <summary>Gets or sets a value indicating whether only time off entries (true), only non-time off entries (false), or all entries should be returned. Defaults to all entries.</summary>
        public Boolean? IsTimeOff { get; set; }
        /// <summary>Gets or sets a value indicating whether only billable entries (true), only non-billable entries (false), or all entries should be returned. Defaults to all entries.</summary>
        public Boolean? IsBillable { get; set; }
        /// <summary>Gets or sets a value indicating whether only limited entries (true), only non-limited entries (false), or all entries should be returned. Defaults to all entries.</summary>
        public Boolean? IsLimited { get; set; }
        /// <summary>Gets or sets the maximum number of results to be returned. Defaults to 1000.</summary>
        public Int32? MaxResults { get; set; }

        public TimeSearch() { }
    }
}

// Autogenerated 09/18/2018 12:55:04: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.TimeStatus
namespace TeamDynamix.Api.Time
{
    /// <summary>Specifies the approval status of a time/expense entry or report.</summary>
    public enum TimeStatus
    {
        /// <summary>The time/expense entry (or report) has not been submitted for approval.</summary>
        NoStatus = 0,
        /// <summary>The time/expense entry (or report) has been submitted for approval but not reviewed.</summary>
        Submitted = 1,
        /// <summary>The time/expense entry (or report) has been submitted and rejected. For a TeamDynamix.Api.Time.TimeReport, this indicates that one or more transactions in the report were rejected.</summary>
        Rejected = 2,
        /// <summary>The time/expense entry (or report) has been submitted and approved. For a TeamDynamix.Api.Time.TimeReport, this indicates that all transactions in the report were approved.</summary>
        Approved = 3
    }
}

// Autogenerated 09/18/2018 12:55:05: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.TimeType
namespace TeamDynamix.Api.Time
{
    /// <summary>Represents a time type, or a classification of time within TeamDynamix.</summary>
    public class TimeType
    {
        /// <summary>Gets or sets the time type ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the time type name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the time type code.</summary>
        public String Code { get; set; }
        /// <summary>Gets or sets the associated general ledger account.</summary>
        public String GLAccount { get; set; }
        /// <summary>Gets or sets the help text for the time type.</summary>
        public String HelpText { get; set; }
        /// <summary>Gets or sets the default limit, in minutes, to apply when creating a limit for this time type.</summary>
        public Int32 DefaultLimitMinutes { get; set; }
        /// <summary>Gets or sets a value indicating whether this time type is billable.</summary>
        public Boolean IsBillable { get; set; }
        /// <summary>Gets or sets a value indicating whether this time type is capitalized.</summary>
        public Boolean IsCapitalized { get; set; }
        /// <summary>Gets or sets a value indicating whether this time type is limited.</summary>
        public Boolean IsLimited { get; set; }
        /// <summary>Gets or sets a value indicating whether this time type is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets a value indicating whether this time type is used for time off.</summary>
        public Boolean IsTimeOffTimeType { get; set; }
        /// <summary>Gets or sets a value indicating whether schedule entries should be created when time off is recorded. Only applicable for time off time type.</summary>
        public Boolean CreateScheduleEntriesForTimeOff { get; set; }
        /// <summary>Gets or sets the date/time the time type was created.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the date/time the time type was last modified.</summary>
        public DateTime ModifiedDate { get; set; }
        /// <summary>Gets or sets a value indicating whether this time type is active on the specified item. Only applicable when retrieving time time types for a specific item.</summary>
        public Boolean IsActiveOnItem { get; set; }
        /// <summary>Gets or sets the actual hours accrued against this time type for the specified item. Only applicable when retrieving time time types for a specific item.</summary>
        public Double ItemActualHours { get; set; }
        /// <summary>Gets or sets the date/time this time type was added to the specified item. Only applicable when retrieving time time types for a specific item.</summary>
        public DateTime? ItemAddedDate { get; set; }
        /// <summary>Gets or sets the UID of the user who added this time type to the specified item. Only applicable when retrieving time time types for a specific item.</summary>
        public Guid? ItemAddedUid { get; set; }
        /// <summary>Gets or sets the full name of the user who added this time type to the specified item. Only applicable when retrieving time time types for a specific item.</summary>
        public String ItemAddedFullName { get; set; }

        public TimeType() { }
    }
}

// Autogenerated 09/18/2018 12:55:05: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Time.TimeTypeLimit
namespace TeamDynamix.Api.Time
{
    /// <summary>Represents a single limit on a time type.</summary>
    public class TimeTypeLimit
    {
        /// <summary>Gets or sets the time type's identifier.</summary>
        public Int32 TimeTypeID { get; set; }
        /// <summary>Gets or sets the start date marking the beginning of the limited period.</summary>
        public DateTime StartDate { get; set; }
        /// <summary>Gets or sets the end date marking the end of the limited period.</summary>
        public DateTime EndDate { get; set; }
        /// <summary>Gets or sets the total number of potentially available hours within this limited window.</summary>
        public Double Hours { get; set; }
        /// <summary>Gets or sets the number ofremaining hours within this limited window. This will be equal to Hours minus the hours within the limited window that have already been used.</summary>
        public Double HoursRemaining { get; set; }

        public TimeTypeLimit() { }
    }
}

// Autogenerated 09/18/2018 12:55:05: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.EligibleAssignment
namespace TeamDynamix.Api.Users
{
    /// <summary>A user or group who can be assigned to a work item.</summary>
    public class EligibleAssignment
    {
        /// <summary>Gets or sets the name of the resource.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the identifier value for the resource. For groups, this would be the string value of the group's ID, and for users, this would be the string representation of their GUID.</summary>
        public String Value { get; set; }
        /// <summary>Gets or sets the email address for the resource. Only applicable when the resource is a user.</summary>
        public String Email { get; set; }
        /// <summary>Gets or sets a value indicating if this resource is a user.</summary>
        public Boolean IsUser { get; set; }

        public EligibleAssignment() { }
    }
}

// Autogenerated 09/18/2018 12:55:05: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.Group
namespace TeamDynamix.Api.Users
{
    /// <summary>A group containing any number of users.</summary>
    public class Group
    {
        /// <summary>Gets or sets the group ID.</summary>
        public Int32 ID { get; set; }
        /// <summary>Gets or sets the group name.</summary>
        public String Name { get; set; }
        /// <summary>Gets or sets the group description.</summary>
        public String Description { get; set; }
        /// <summary>Gets or sets the group's active status.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the external ID. This value is used to map the group to its representation in external sources.</summary>
        public String ExternalID { get; set; }
        /// <summary>Gets or sets the date/time the group was created.</summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>Gets or sets the date/time the group was last modified.</summary>
        public DateTime ModifiedDate { get; set; }

        public Group() { }
    }
}

// Autogenerated 09/18/2018 12:55:06: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.GroupMember
namespace TeamDynamix.Api.Users
{
    /// <summary>A member of the group. Any type of field that is a List, such as Attributes and Permissions, is only returned when a single user is selected. These collection fields are excluded from the data returned in a member search to increase performance.</summary>
    public class GroupMember
    {
        /// <summary>Gets or sets a value indicating whether this group assignment is the primary group for the user.</summary>
        public Boolean IsPrimaryGroup { get; set; }
        /// <summary>Gets or sets a value indicating whether this user is a manager of the group.</summary>
        public Boolean IsGroupManager { get; set; }
        /// <summary>Gets or sets a value indicating whether this user is included in group-wide notifications.</summary>
        public Boolean IsGroupNotified { get; set; }
        /// <summary>Gets or sets the date/time the user was added to the group.</summary>
        public DateTime AddedToGroupDate { get; set; }
        /// <summary>Gets or sets the ID of the user.</summary>
        public Guid UID { get; set; }
        /// <summary>Gets or sets the BEID of the user.</summary>
        public Guid BEID { get; set; }
        /// <summary>Gets or sets the integer-based BEID of the user.</summary>
        public Int32 BEIDInt { get; set; }
        /// <summary>Gets or sets a value indicating whether this user is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the username of the user.</summary>
        public String UserName { get; set; }
        /// <summary>Gets or sets the full name of the user.</summary>
        public String FullName { get; set; }
        /// <summary>Gets or sets the first name of the user.</summary>
        public String FirstName { get; set; }
        /// <summary>Gets or sets the last name of the user.</summary>
        public String LastName { get; set; }
        /// <summary>Gets or sets the middle name of the user.</summary>
        public String MiddleName { get; set; }
        /// <summary>Gets or sets the user's birthday.</summary>
        public DateTime Birthday { get; set; }
        /// <summary>Gets or sets the salutation of the user.</summary>
        public String Salutation { get; set; }
        /// <summary>Gets or sets the nickname of the user.</summary>
        public String Nickname { get; set; }
        /// <summary>Gets or sets the ID of the default account for this user.</summary>
        public Int32 DefaultAccountID { get; set; }
        /// <summary>Gets or sets the name of the default account for this user.</summary>
        public String DefaultAccountName { get; set; }
        /// <summary>Gets or sets the primary email address for this user.</summary>
        public String PrimaryEmail { get; set; }
        /// <summary>Gets or sets the alternate email.</summary>
        public String AlternateEmail { get; set; }
        /// <summary>Gets or sets the organizational ID for this user.</summary>
        public String ExternalID { get; set; }
        /// <summary>Gets or sets the alternate ID for this user.</summary>
        public String AlternateID { get; set; }
        /// <summary>Gets or sets the system-defined (i.e. non-Platform) applications for this user.</summary>
        public List<String> Applications { get; set; }
        /// <summary>Gets or sets the name of the user's global security role.</summary>
        public String SecurityRoleName { get; set; }
        /// <summary>Gets or sets the ID of the user's global security role. This only applies to Users. Customers will always have this set to an empty string.</summary>
        public String SecurityRoleID { get; set; }
        /// <summary>Gets or sets the global security role permissions for this user. Each value refers to the ID of a permission. This only applies to Users. Customers will always have this set to an empty list.</summary>
        public List<String> Permissions { get; set; }
        /// <summary>Gets or sets the organizationally-defined (i.e. Platform) applications for this user. This only applies to Users. Customers will always have this set to an empty list.</summary>
        public List<TeamDynamix.Api.Apps.UserApplication> OrgApplications { get; set; }
        /// <summary>Gets or sets the IDs of the groups to which this user belongs. This only applies to Users. Customers will always have this set to an empty list.</summary>
        public List<Int32> GroupIDs { get; set; }
        /// <summary>Gets or sets the integer reference ID for this user. This only applies to Users. Customers will always have this set to 0.</summary>
        public Int32 ReferenceID { get; set; }
        /// <summary>Gets or sets the alert email address for the user. System notifications will be sent to this E-Mail address. If this is not provided, the primary email will be used.</summary>
        public String AlertEmail { get; set; }
        /// <summary>Gets or sets the file name of the profile image for this user.</summary>
        public String ProfileImageFileName { get; set; }
        /// <summary>Gets or sets the name of the user's company.</summary>
        public String Company { get; set; }
        /// <summary>Gets or sets the title.</summary>
        public String Title { get; set; }
        /// <summary>Gets or sets the home phone.</summary>
        public String HomePhone { get; set; }
        /// <summary>Gets or sets the primary phone number for the user. This is a value such as "Work" or "Mobile".</summary>
        public String PrimaryPhone { get; set; }
        /// <summary>Gets or sets the work phone.</summary>
        public String WorkPhone { get; set; }
        /// <summary>Gets or sets the pager.</summary>
        public String Pager { get; set; }
        /// <summary>Gets or sets the other phone.</summary>
        public String OtherPhone { get; set; }
        /// <summary>Gets or sets the mobile phone.</summary>
        public String MobilePhone { get; set; }
        /// <summary>Gets or sets the fax.</summary>
        public String Fax { get; set; }
        /// <summary>Gets or sets the default priority ID</summary>
        public Int32 DefaultPriorityID { get; set; }
        /// <summary>Gets or sets the default priority name.</summary>
        public String DefaultPriorityName { get; set; }
        /// <summary>Gets or sets the about me.</summary>
        public String AboutMe { get; set; }
        /// <summary>Gets or sets the work address.</summary>
        public String WorkAddress { get; set; }
        /// <summary>Gets or sets the work city.</summary>
        public String WorkCity { get; set; }
        /// <summary>Gets or sets the state of the work.</summary>
        public String WorkState { get; set; }
        /// <summary>Gets or sets the work zip.</summary>
        public String WorkZip { get; set; }
        /// <summary>Gets or sets the work country.</summary>
        public String WorkCountry { get; set; }
        /// <summary>Gets or sets the home address.</summary>
        public String HomeAddress { get; set; }
        /// <summary>Gets or sets the home city.</summary>
        public String HomeCity { get; set; }
        /// <summary>Gets or sets the state of the home.</summary>
        public String HomeState { get; set; }
        /// <summary>Gets or sets the home zip code.</summary>
        public String HomeZip { get; set; }
        /// <summary>Gets or sets the home country.</summary>
        public String HomeCountry { get; set; }
        /// <summary>Gets or sets the default billing rate. This only applies to Users. Customers will always have this set to 0.0.</summary>
        public Double DefaultRate { get; set; }
        /// <summary>Gets or sets the cost rate. This only applies to Users. Customers will always have this set to 0.0.</summary>
        public Double CostRate { get; set; }
        /// <summary>Gets or sets a value indicating whether this user is an employee. This only applies to Users. Customers will always have this set to false.</summary>
        public Boolean IsEmployee { get; set; }
        /// <summary>Gets or sets the number of workable hours in a work day for this user. This only applies to Users. Customers will always have this set to 0.0.</summary>
        public Double WorkableHours { get; set; }
        /// <summary>Gets or sets a value indicating whether this user's capacity is managed, meaning they can have capacity and will appear on capacity/availability reports. This only applies to Users. Customers will always have this set to false.</summary>
        public Boolean IsCapacityManaged { get; set; }
        /// <summary>Gets or sets the date the user should start reporting time on after. This also governs capacity calculations. This only applies to Users. Customers will always have this set to an empty date.</summary>
        public DateTime ReportTimeAfterDate { get; set; }
        /// <summary>Gets or sets the date the user is no longer available for scheduling and no longer required to log time after. This only applies to Users. Customers will always have this set to an empty date.</summary>
        public DateTime EndDate { get; set; }
        /// <summary>Gets or sets a value indicating whether the user should report time. This only applies to Users. Customers will always have this set to an false.</summary>
        public Boolean ShouldReportTime { get; set; }
        /// <summary>Gets or sets the unique identifier of the user this user reports to.</summary>
        public String ReportsToUID { get; set; }
        /// <summary>Gets or sets the full name of the user this user reports to.</summary>
        public String ReportsToFullName { get; set; }
        /// <summary>Gets or sets the ID of the resource pool this user belongs to. This only applies to Users. Customers will always have this set to -1.</summary>
        public Int32 ResourcePoolID { get; set; }
        /// <summary>Gets or sets the name of the resource pool.</summary>
        public String ResourcePoolName { get; set; }
        /// <summary>Gets or sets the ID of the time zone the user is in. If this is not provided, the time zone specified for your organization will be used.</summary>
        public Int32 TZID { get; set; }
        /// <summary>Gets or sets the name of the time zone the user is in.</summary>
        public String TZName { get; set; }
        /// <summary>Gets or sets type of the user.</summary>
        public TeamDynamix.Api.Users.UserType TypeID { get; set; }
        /// <summary>Gets or sets the authentication username of the new user. This username is what will be used when authenticating rather than the standard username field. This field only applies to non-TeamDynamix authentication types. This value should be unique across all username and authentication usernames in your organization. If the provided value is not unique, it will be ignored. This only applies to Users. Customers will always have this set to an empty string.</summary>
        public String AuthenticationUserName { get; set; }
        /// <summary>Gets or sets the authentication provider this user will use to authenticate by its ID. Leave this value blank to specify TeamDynamix or when using SSO authentication. This value can be obtained from the Admin application Authentication section by one of your organization's administrators who has access to modify authentication settings. If an invalid value is provided, this will use the default authentication provider for the organization. This only applies to Users, not Customers. Customers will always have this set to null.</summary>
        public Int32? AuthenticationProviderID { get; set; }
        /// <summary>Gets or sets the custom person attributes.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets the person's gender.</summary>
        public TeamDynamix.Api.Users.UserGender Gender { get; set; }
        /// <summary>Gets or sets the instant messenger provider for the person.</summary>
        public String IMProvider { get; set; }
        /// <summary>Gets or sets the instant messenger username (or "handle") for the person.</summary>
        public String IMHandle { get; set; }

        public GroupMember() { }
    }
}

// Autogenerated 09/18/2018 12:55:06: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.GroupSearch
namespace TeamDynamix.Api.Users
{
    /// <summary>A set of filtering options used for searching groups.</summary>
    public class GroupSearch
    {
        /// <summary>Gets or sets the active status to filter on.</summary>
        public Boolean? IsActive { get; set; }
        /// <summary>Gets or sets the string to use for LIKE-based filtering on the group name.</summary>
        public String NameLike { get; set; }
        /// <summary>Gets or sets the ID of the application to filter on. If specified, will only include groups with at least one active member who has been granted access to this application.</summary>
        public Int32? HasAppID { get; set; }
        /// <summary>Gets or sets the name of the system application to filter on. If specified, will only include groups with at least one active member who has been granted access to this application.</summary>
        public String HasSystemAppName { get; set; }

        public GroupSearch() { }
    }
}

// Autogenerated 09/18/2018 12:55:07: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.NewUser
namespace TeamDynamix.Api.Users
{
    /// <summary>Represents a new user to be created in the system.</summary>
    public class NewUser
    {
        /// <summary>Gets or sets the password of the new user.</summary>
        public String Password { get; set; }
        /// <summary>Gets or sets the desktop ID of the desktop to associate with the new user.</summary>
        public Guid DesktopID { get; set; }
        /// <summary>Gets or sets a value indicating whether this user is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the username of the user. This is required when creating Users, but is not required when creating Customers.</summary>
        public String UserName { get; set; }
        /// <summary>Gets or sets the first name of the user.</summary>
        public String FirstName { get; set; }
        /// <summary>Gets or sets the last name of the user.</summary>
        public String LastName { get; set; }
        /// <summary>Gets or sets the middle name of the user.</summary>
        public String MiddleName { get; set; }
        /// <summary>Gets or sets the user's birthday.</summary>
        public DateTime Birthday { get; set; }
        /// <summary>Gets or sets the salutation of the user.</summary>
        public String Salutation { get; set; }
        /// <summary>Gets or sets the nickname of the user.</summary>
        public String Nickname { get; set; }
        /// <summary>Gets or sets the ID of the default account for this user.</summary>
        public Int32 DefaultAccountID { get; set; }
        /// <summary>Gets or sets the name of the default account for this user.</summary>
        public String DefaultAccountName { get; set; }
        /// <summary>Gets or sets the primary email address for this user.</summary>
        public String PrimaryEmail { get; set; }
        /// <summary>Gets or sets the alternate email.</summary>
        public String AlternateEmail { get; set; }
        /// <summary>Gets or sets the organizational ID for this user.</summary>
        public String ExternalID { get; set; }
        /// <summary>Gets or sets the alternate ID for this user.</summary>
        public String AlternateID { get; set; }
        /// <summary>Gets or sets the system-defined (i.e. non-Platform) applications for this user.</summary>
        public List<String> Applications { get; set; }
        /// <summary>Gets or sets the name of the user's global security role.</summary>
        public String SecurityRoleName { get; set; }
        /// <summary>Gets or sets the ID of the user's global security role. This is required when creating Users, and is ignored when creating Customers.</summary>
        public String SecurityRoleID { get; set; }
        /// <summary>Gets or sets the global security role permissions for this user. Each value refers to the ID of a permission. This only applies to Users and will be ignored when creating Customers.</summary>
        public List<String> Permissions { get; set; }
        /// <summary>Gets or sets the organizationally-defined (i.e. Platform) applications for this user. This only applies to Users and will be ignored when creating Customers.</summary>
        public List<TeamDynamix.Api.Apps.UserApplication> OrgApplications { get; set; }
        /// <summary>Gets or sets the IDs of the groups to which this user belongs. This only applies to Users and will be ignored when creating Customers.</summary>
        public List<Int32> GroupIDs { get; set; }
        /// <summary>Gets or sets the integer reference ID for this user. This only applies to Users and will be ignored when creating Customers.</summary>
        public Int32 ReferenceID { get; set; }
        /// <summary>Gets or sets the alert email address for the user. System notifications will be sent to this E-Mail address. If this is not provided, the primary email will be used.</summary>
        public String AlertEmail { get; set; }
        /// <summary>Gets or sets the name of the user's company.</summary>
        public String Company { get; set; }
        /// <summary>Gets or sets the title.</summary>
        public String Title { get; set; }
        /// <summary>Gets or sets the home phone.</summary>
        public String HomePhone { get; set; }
        /// <summary>Gets or sets the primary phone number for the user. This is a value such as "Work" or "Mobile".</summary>
        public String PrimaryPhone { get; set; }
        /// <summary>Gets or sets the work phone.</summary>
        public String WorkPhone { get; set; }
        /// <summary>Gets or sets the pager.</summary>
        public String Pager { get; set; }
        /// <summary>Gets or sets the other phone.</summary>
        public String OtherPhone { get; set; }
        /// <summary>Gets or sets the mobile phone.</summary>
        public String MobilePhone { get; set; }
        /// <summary>Gets or sets the fax.</summary>
        public String Fax { get; set; }
        /// <summary>Gets or sets the default priority ID</summary>
        public Int32 DefaultPriorityID { get; set; }
        /// <summary>Gets or sets the default priority name.</summary>
        public String DefaultPriorityName { get; set; }
        /// <summary>Gets or sets the about me.</summary>
        public String AboutMe { get; set; }
        /// <summary>Gets or sets the work address.</summary>
        public String WorkAddress { get; set; }
        /// <summary>Gets or sets the work city.</summary>
        public String WorkCity { get; set; }
        /// <summary>Gets or sets the state of the work.</summary>
        public String WorkState { get; set; }
        /// <summary>Gets or sets the work zip.</summary>
        public String WorkZip { get; set; }
        /// <summary>Gets or sets the work country.</summary>
        public String WorkCountry { get; set; }
        /// <summary>Gets or sets the home address.</summary>
        public String HomeAddress { get; set; }
        /// <summary>Gets or sets the home city.</summary>
        public String HomeCity { get; set; }
        /// <summary>Gets or sets the state of the home.</summary>
        public String HomeState { get; set; }
        /// <summary>Gets or sets the home zip code.</summary>
        public String HomeZip { get; set; }
        /// <summary>Gets or sets the home country.</summary>
        public String HomeCountry { get; set; }
        /// <summary>Gets or sets the default billing rate. This only applies to Users and will be ignored when creating Customers.</summary>
        public Double DefaultRate { get; set; }
        /// <summary>Gets or sets the cost rate. This only applies to Users and will be ignored when creating Customers.</summary>
        public Double CostRate { get; set; }
        /// <summary>Gets or sets a value indicating whether this user is an employee. This only applies to Users and will be ignored when creating Customers.</summary>
        public Boolean IsEmployee { get; set; }
        /// <summary>Gets or sets the number of workable hours in a work day for this user. This only applies to Users and will be ignored when creating Customers.</summary>
        public Double WorkableHours { get; set; }
        /// <summary>Gets or sets a value indicating whether this user's capacity is managed, meaning they can have capacity and will appear on capacity/availability reports. This only applies to Users and will be ignored when creating Customers.</summary>
        public Boolean IsCapacityManaged { get; set; }
        /// <summary>Gets or sets the date the user should start reporting time on after. This also governs capacity calculations. This only applies to Users and will be ignored when creating Customers.</summary>
        public DateTime ReportTimeAfterDate { get; set; }
        /// <summary>Gets or sets the date the user is no longer available for scheduling and no longer required to log time after. This only applies to Users and will be ignored when creating Customers.</summary>
        public DateTime EndDate { get; set; }
        /// <summary>Gets or sets a value indicating whether the user should report time. This only applies to Users and will be ignored when creating Customers.</summary>
        public Boolean ShouldReportTime { get; set; }
        /// <summary>Gets or sets the unique identifier of the user this user reports to.</summary>
        public String ReportsToUID { get; set; }
        /// <summary>Gets or sets the full name of the user this user reports to.</summary>
        public String ReportsToFullName { get; set; }
        /// <summary>Gets or sets the ID of the resource pool this user belongs to. This only applies to Users and will be ignored when creating Customers.</summary>
        public Int32 ResourcePoolID { get; set; }
        /// <summary>Gets or sets the name of the resource pool.</summary>
        public String ResourcePoolName { get; set; }
        /// <summary>Gets or sets the ID of the time zone the user is in. If this is not provided, the time zone specified for your organization will be used.</summary>
        public Int32 TZID { get; set; }
        /// <summary>Gets or sets the name of the time zone the user is in.</summary>
        public String TZName { get; set; }
        /// <summary>Gets or sets type of the user.</summary>
        public TeamDynamix.Api.Users.UserType TypeID { get; set; }
        /// <summary>Gets or sets the authentication username of the new user. This username is what will be used when authenticating rather than the standard username field. This field only applies to non-TeamDynamix authentication types. This value should be unique across all username and authentication usernames in your organization. If the provided value is not unique, it will be ignored. This only applies to Users and will be ignored when creating Customers.</summary>
        public String AuthenticationUserName { get; set; }
        /// <summary>Gets or sets the authentication provider this user will use to authenticate by its ID. Leave this value blank to specify TeamDynamix or when using SSO authentication. This value can be obtained from the Admin application Authentication section by one of your organization's administrators who has access to modify authentication settings. If an invalid value is provided, this will use the default authentication provider for the organization. This only applies to Users and will be ignored when creating Customers.</summary>
        public Int32? AuthenticationProviderID { get; set; }
        /// <summary>Gets or sets the custom person attributes.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets the person's gender.</summary>
        public TeamDynamix.Api.Users.UserGender Gender { get; set; }
        /// <summary>Gets or sets the instant messenger provider for the person.</summary>
        public String IMProvider { get; set; }
        /// <summary>Gets or sets the instant messenger username (or "handle") for the person.</summary>
        public String IMHandle { get; set; }

        public NewUser() { }
    }
}

// Autogenerated 09/18/2018 12:55:08: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.User
namespace TeamDynamix.Api.Users
{
    /// <summary>A TeamDynamix user. Any type of field that is a List, such as Attributes and Permissions, is only returned when a single user is selected. These collection fields are excluded from the data returned in a people/search to increase performance.</summary>
    public class User
    {
        /// <summary>Gets or sets the ID of the user.</summary>
        public Guid UID { get; set; }
        /// <summary>Gets or sets the BEID of the user.</summary>
        public Guid BEID { get; set; }
        /// <summary>Gets or sets the integer-based BEID of the user.</summary>
        public Int32 BEIDInt { get; set; }
        /// <summary>Gets or sets a value indicating whether this user is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>Gets or sets the username of the user.</summary>
        public String UserName { get; set; }
        /// <summary>Gets or sets the full name of the user.</summary>
        public String FullName { get; set; }
        /// <summary>Gets or sets the first name of the user.</summary>
        public String FirstName { get; set; }
        /// <summary>Gets or sets the last name of the user.</summary>
        public String LastName { get; set; }
        /// <summary>Gets or sets the middle name of the user.</summary>
        public String MiddleName { get; set; }
        /// <summary>Gets or sets the user's birthday.</summary>
        public DateTime Birthday { get; set; }
        /// <summary>Gets or sets the salutation of the user.</summary>
        public String Salutation { get; set; }
        /// <summary>Gets or sets the nickname of the user.</summary>
        public String Nickname { get; set; }
        /// <summary>Gets or sets the ID of the default account for this user.</summary>
        public Int32 DefaultAccountID { get; set; }
        /// <summary>Gets or sets the name of the default account for this user.</summary>
        public String DefaultAccountName { get; set; }
        /// <summary>Gets or sets the primary email address for this user.</summary>
        public String PrimaryEmail { get; set; }
        /// <summary>Gets or sets the alternate email.</summary>
        public String AlternateEmail { get; set; }
        /// <summary>Gets or sets the organizational ID for this user.</summary>
        public String ExternalID { get; set; }
        /// <summary>Gets or sets the alternate ID for this user.</summary>
        public String AlternateID { get; set; }
        /// <summary>Gets or sets the system-defined (i.e. non-Platform) applications for this user.</summary>
        public List<String> Applications { get; set; }
        /// <summary>Gets or sets the name of the user's global security role.</summary>
        public String SecurityRoleName { get; set; }
        /// <summary>Gets or sets the ID of the user's global security role. This only applies to Users. Customers will always have this set to an empty string.</summary>
        public String SecurityRoleID { get; set; }
        /// <summary>Gets or sets the global security role permissions for this user. Each value refers to the ID of a permission. This only applies to Users. Customers will always have this set to an empty list.</summary>
        public List<String> Permissions { get; set; }
        /// <summary>Gets or sets the organizationally-defined (i.e. Platform) applications for this user. This only applies to Users. Customers will always have this set to an empty list.</summary>
        public List<TeamDynamix.Api.Apps.UserApplication> OrgApplications { get; set; }
        /// <summary>Gets or sets the IDs of the groups to which this user belongs. This only applies to Users. Customers will always have this set to an empty list.</summary>
        public List<Int32> GroupIDs { get; set; }
        /// <summary>Gets or sets the integer reference ID for this user. This only applies to Users. Customers will always have this set to 0.</summary>
        public Int32 ReferenceID { get; set; }
        /// <summary>Gets or sets the alert email address for the user. System notifications will be sent to this E-Mail address. If this is not provided, the primary email will be used.</summary>
        public String AlertEmail { get; set; }
        /// <summary>Gets or sets the file name of the profile image for this user.</summary>
        public String ProfileImageFileName { get; set; }
        /// <summary>Gets or sets the name of the user's company.</summary>
        public String Company { get; set; }
        /// <summary>Gets or sets the title.</summary>
        public String Title { get; set; }
        /// <summary>Gets or sets the home phone.</summary>
        public String HomePhone { get; set; }
        /// <summary>Gets or sets the primary phone number for the user. This is a value such as "Work" or "Mobile".</summary>
        public String PrimaryPhone { get; set; }
        /// <summary>Gets or sets the work phone.</summary>
        public String WorkPhone { get; set; }
        /// <summary>Gets or sets the pager.</summary>
        public String Pager { get; set; }
        /// <summary>Gets or sets the other phone.</summary>
        public String OtherPhone { get; set; }
        /// <summary>Gets or sets the mobile phone.</summary>
        public String MobilePhone { get; set; }
        /// <summary>Gets or sets the fax.</summary>
        public String Fax { get; set; }
        /// <summary>Gets or sets the default priority ID</summary>
        public Int32 DefaultPriorityID { get; set; }
        /// <summary>Gets or sets the default priority name.</summary>
        public String DefaultPriorityName { get; set; }
        /// <summary>Gets or sets the about me.</summary>
        public String AboutMe { get; set; }
        /// <summary>Gets or sets the work address.</summary>
        public String WorkAddress { get; set; }
        /// <summary>Gets or sets the work city.</summary>
        public String WorkCity { get; set; }
        /// <summary>Gets or sets the state of the work.</summary>
        public String WorkState { get; set; }
        /// <summary>Gets or sets the work zip.</summary>
        public String WorkZip { get; set; }
        /// <summary>Gets or sets the work country.</summary>
        public String WorkCountry { get; set; }
        /// <summary>Gets or sets the home address.</summary>
        public String HomeAddress { get; set; }
        /// <summary>Gets or sets the home city.</summary>
        public String HomeCity { get; set; }
        /// <summary>Gets or sets the state of the home.</summary>
        public String HomeState { get; set; }
        /// <summary>Gets or sets the home zip code.</summary>
        public String HomeZip { get; set; }
        /// <summary>Gets or sets the home country.</summary>
        public String HomeCountry { get; set; }
        /// <summary>Gets or sets the default billing rate. This only applies to Users. Customers will always have this set to 0.0.</summary>
        public Double DefaultRate { get; set; }
        /// <summary>Gets or sets the cost rate. This only applies to Users. Customers will always have this set to 0.0.</summary>
        public Double CostRate { get; set; }
        /// <summary>Gets or sets a value indicating whether this user is an employee. This only applies to Users. Customers will always have this set to false.</summary>
        public Boolean IsEmployee { get; set; }
        /// <summary>Gets or sets the number of workable hours in a work day for this user. This only applies to Users. Customers will always have this set to 0.0.</summary>
        public Double WorkableHours { get; set; }
        /// <summary>Gets or sets a value indicating whether this user's capacity is managed, meaning they can have capacity and will appear on capacity/availability reports. This only applies to Users. Customers will always have this set to false.</summary>
        public Boolean IsCapacityManaged { get; set; }
        /// <summary>Gets or sets the date the user should start reporting time on after. This also governs capacity calculations. This only applies to Users. Customers will always have this set to an empty date.</summary>
        public DateTime ReportTimeAfterDate { get; set; }
        /// <summary>Gets or sets the date the user is no longer available for scheduling and no longer required to log time after. This only applies to Users. Customers will always have this set to an empty date.</summary>
        public DateTime EndDate { get; set; }
        /// <summary>Gets or sets a value indicating whether the user should report time. This only applies to Users. Customers will always have this set to an false.</summary>
        public Boolean ShouldReportTime { get; set; }
        /// <summary>Gets or sets the unique identifier of the user this user reports to.</summary>
        public String ReportsToUID { get; set; }
        /// <summary>Gets or sets the full name of the user this user reports to.</summary>
        public String ReportsToFullName { get; set; }
        /// <summary>Gets or sets the ID of the resource pool this user belongs to. This only applies to Users. Customers will always have this set to -1.</summary>
        public Int32 ResourcePoolID { get; set; }
        /// <summary>Gets or sets the name of the resource pool.</summary>
        public String ResourcePoolName { get; set; }
        /// <summary>Gets or sets the ID of the time zone the user is in. If this is not provided, the time zone specified for your organization will be used.</summary>
        public Int32 TZID { get; set; }
        /// <summary>Gets or sets the name of the time zone the user is in.</summary>
        public String TZName { get; set; }
        /// <summary>Gets or sets type of the user.</summary>
        public TeamDynamix.Api.Users.UserType TypeID { get; set; }
        /// <summary>Gets or sets the authentication username of the new user. This username is what will be used when authenticating rather than the standard username field. This field only applies to non-TeamDynamix authentication types. This value should be unique across all username and authentication usernames in your organization. If the provided value is not unique, it will be ignored. This only applies to Users. Customers will always have this set to an empty string.</summary>
        public String AuthenticationUserName { get; set; }
        /// <summary>Gets or sets the authentication provider this user will use to authenticate by its ID. Leave this value blank to specify TeamDynamix or when using SSO authentication. This value can be obtained from the Admin application Authentication section by one of your organization's administrators who has access to modify authentication settings. If an invalid value is provided, this will use the default authentication provider for the organization. This only applies to Users, not Customers. Customers will always have this set to null.</summary>
        public Int32? AuthenticationProviderID { get; set; }
        /// <summary>Gets or sets the custom person attributes.</summary>
        public List<TeamDynamix.Api.CustomAttributes.CustomAttribute> Attributes { get; set; }
        /// <summary>Gets or sets the person's gender.</summary>
        public TeamDynamix.Api.Users.UserGender Gender { get; set; }
        /// <summary>Gets or sets the instant messenger provider for the person.</summary>
        public String IMProvider { get; set; }
        /// <summary>Gets or sets the instant messenger username (or "handle") for the person.</summary>
        public String IMHandle { get; set; }

        public User() { }
    }
}

// Autogenerated 09/18/2018 12:55:08: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.UserAccountsBulkManagementParameters
namespace TeamDynamix.Api.Users
{
    /// <summary>A set of parameters designed to allow for setting the membership of users in accounts.</summary>
    public class UserAccountsBulkManagementParameters
    {
        /// <summary>Gets or sets the user UIDs to add to the accounts provided in AccountIDs</summary>
        public IEnumerable<Guid> UserUids { get; set; }
        /// <summary>Gets or sets the account IDs to add the users provided in userUIDs to.</summary>
        public IEnumerable<Int32> AccountIDs { get; set; }
        /// <summary>Gets or sets a value indicating whether accounts that provided users already belong to should be removed.</summary>
        public Boolean ReplaceExistingAccounts { get; set; }

        public UserAccountsBulkManagementParameters() { }
    }
}

// Autogenerated 09/18/2018 12:55:08: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.UserApplicationsBulkManagementParameters
namespace TeamDynamix.Api.Users
{
    /// <summary>A set of parameters designed to allow for setting the membership of users in Applications.</summary>
    public class UserApplicationsBulkManagementParameters
    {
        /// <summary>Gets or sets the user UIDs to add to the applications provided in Application Names.</summary>
        public IEnumerable<Guid> UserUids { get; set; }
        /// <summary>Gets or sets the application names to add the users provided in userUIDs to.</summary>
        public IEnumerable<String> ApplicationNames { get; set; }
        /// <summary>Gets or sets a value indicating whether applications that provided users already belong to should be removed.</summary>
        public Boolean ReplaceExistingApplications { get; set; }

        public UserApplicationsBulkManagementParameters() { }
    }
}

// Autogenerated 09/18/2018 12:55:08: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.UserGender
namespace TeamDynamix.Api.Users
{
    /// <summary>Describes the different options a user has for the gender field in their profile.</summary>
    public enum UserGender
    {
        /// <summary>Indicates that the gender has not been specified or is not available.</summary>
        NotAvailable = 0,
        /// <summary>Indicates that the user is identified as male.</summary>
        Male = 1,
        /// <summary>Indicates that the user is identified as female.</summary>
        Female = 2
    }
}

// Autogenerated 09/18/2018 12:55:09: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.UserGroup
namespace TeamDynamix.Api.Users
{
    /// <summary>A user group association.</summary>
    public class UserGroup
    {
        /// <summary>The ID of the group.</summary>
        public Int32 GroupID { get; set; }
        /// <summary>The name of the group.</summary>
        public String GroupName { get; set; }
        /// <summary>Gets or sets a value indicating whether this is the user's primary group.</summary>
        public Boolean IsPrimary { get; set; }
        /// <summary>Gets or sets a value indicating if this member is a manager of the group.</summary>
        public Boolean IsManager { get; set; }
        /// <summary>Gets or sets a value indicating if this member is included in group notifications.</summary>
        public Boolean IsNotified { get; set; }

        public UserGroup() { }
    }
}

// Autogenerated 09/18/2018 12:55:09: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.UserGroupsBulkManagementParameters
namespace TeamDynamix.Api.Users
{
    /// <summary>A set of parameters designed to allow for setting the membership of users in groups.</summary>
    public class UserGroupsBulkManagementParameters
    {
        /// <summary>Gets or sets the collection of user UIDs to add to the groups provided in GroupIDs.</summary>
        public IEnumerable<Guid> UserUIDs { get; set; }
        /// <summary>Gets or sets the collection of group IDs that users provided in UserUIDs will be added to.</summary>
        public IEnumerable<Int32> GroupIDs { get; set; }
        /// <summary>Gets or sets a value indicating whether groups that provided users already belong to should be removed.</summary>
        public Boolean RemoveOtherGroups { get; set; }

        public UserGroupsBulkManagementParameters() { }
    }
}

// Autogenerated 09/18/2018 12:55:09: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.UserListing
namespace TeamDynamix.Api.Users
{
    /// <summary>A subset of information about a user in TeamDynamix.</summary>
    public class UserListing
    {
        /// <summary>The ID of the user.</summary>
        public Guid UID { get; set; }
        /// <summary>The integer reference ID for this user.</summary>
        public Int32 ReferenceID { get; set; }
        /// <summary>The username of the user.</summary>
        public String UserName { get; set; }
        /// <summary>The first name of the user.</summary>
        public String FirstName { get; set; }
        /// <summary>The last name of the user.</summary>
        public String LastName { get; set; }
        /// <summary>The full name of the user.</summary>
        public String FullName { get; set; }
        /// <summary>The primary email address for this user.</summary>
        public String PrimaryEmail { get; set; }
        /// <summary>The alert email address for the user. System notifications will be sent to this E-Mail address.</summary>
        public String AlertEmail { get; set; }
        /// <summary>The authentication username of the new user. This username is what will be used when authenticating rather than the standard username field. This field only applies to non-TeamDynamix authentication types. This only applies to Users, not Customers. Customers will always have this set to an empty string.</summary>
        public String AuthenticationUserName { get; set; }
        /// <summary>The organizational ID for this user.</summary>
        public String ExternalID { get; set; }
        /// <summary>The alternate ID for this user.</summary>
        public String AlternateID { get; set; }
        /// <summary>A value indicating whether this user is an employee. This only applies to Users, not Customers. Customers will always have this set to false.</summary>
        public Boolean IsEmployee { get; set; }
        /// <summary>A value indicating whether this user is active.</summary>
        public Boolean IsActive { get; set; }
        /// <summary>The type of the user.</summary>
        public TeamDynamix.Api.Users.UserType TypeID { get; set; }

        public UserListing() { }
    }
}

// Autogenerated 09/18/2018 12:55:09: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.UserSearch
namespace TeamDynamix.Api.Users
{
    /// <summary>A set of filtering options used for searching users.</summary>
    public class UserSearch
    {
        /// <summary>Gets or sets the search text to perform LIKE-based filtering on.</summary>
        public String SearchText { get; set; }
        /// <summary>Gets or sets the active status to filter on.</summary>
        public Boolean? IsActive { get; set; }
        /// <summary>Gets or sets the employee status to filter on.</summary>
        public Boolean? IsEmployee { get; set; }
        /// <summary>Gets or sets the name of the application to filter on. If specified, will only include users who have been granted access to this application.</summary>
        public String AppName { get; set; }
        /// <summary>Gets or sets the account IDs to filter on. If specified, will only include users who list the account as their default.</summary>
        public Int32[] AccountIDs { get; set; }
        /// <summary>Gets or sets the maximum number of records to return.</summary>
        public Int32? MaxResults { get; set; }
        /// <summary>Gets or sets the reference IDs to filter on.</summary>
        public Int32[] ReferenceIDs { get; set; }
        /// <summary>Gets or sets the external ID to filter on.</summary>
        public String ExternalID { get; set; }
        /// <summary>Gets or sets the alternate ID to filter on.</summary>
        public String AlternateID { get; set; }
        /// <summary>Gets or sets the username to filter on.</summary>
        public String UserName { get; set; }
        /// <summary>Gets or sets the security role ID to filter on. If specified, will only include users who have this security role.</summary>
        public Guid? SecurityRoleID { get; set; }

        public UserSearch() { }
    }
}

// Autogenerated 09/18/2018 12:55:09: https://app.teamdynamix.com/TDWebApi/Home/type/TeamDynamix.Api.Users.UserType
namespace TeamDynamix.Api.Users
{
    /// <summary>Describes the different types of users and customers tracked within TeamDynamix.</summary>
    public enum UserType
    {
        /// <summary>Indicates that the type of the user could not be determined. Should not be used in normal operations.</summary>
        None = 0,
        /// <summary>Indicates that the user is classified as a full TeamDynamix user.</summary>
        User = 1,
        /// <summary>Indicates that the user is classified as a customer, which means that they cannot log in to TeamDynamix.</summary>
        Customer = 2,
        /// <summary>Indicates that the user is classified as a resource placeholder. These users act as a placeholder for actual users when planning out projects without knowing exactly who will be acting as the resource in question.</summary>
        ResourcePlaceholder = 8
    }
}

'@
